// ---------------------------------------------------------------------------
// ../modules/wxbind/src/wxgl_gl.cpp was generated by genwxbind.lua 
//
// Any changes made to this file will be lost when the file is regenerated.
// ---------------------------------------------------------------------------


#include "wx/wxprec.h"

#ifdef __BORLANDC__
    #pragma hdrstop
#endif

#ifndef WX_PRECOMP
     #include "wx/wx.h"
#endif

#include "wxlua/wxlstate.h"
#include "wxbind/include/wxgl_bind.h"

#ifdef __GNUC__
    #pragma GCC diagnostic ignored "-Wunused-variable"
#endif // __GNUC__

#if LUA_VERSION_NUM < 503
#define lua_pushinteger lua_pushnumber
#endif


#if wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS
// ---------------------------------------------------------------------------
// Bind class wxGLCanvas
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxGLCanvas'
int wxluatype_wxGLCanvas = WXLUA_TUNKNOWN;

#if (wxCHECK_VERSION(3,1,0)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)
static wxLuaArgType s_wxluatypeArray_wxLua_wxGLCanvas_IsDisplaySupported1[] = { &wxluatype_TLIGHTUSERDATA, NULL };
static int LUACALL wxLua_wxGLCanvas_IsDisplaySupported1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxGLCanvas_IsDisplaySupported1[1] = {{ wxLua_wxGLCanvas_IsDisplaySupported1, WXLUAMETHOD_METHOD|WXLUAMETHOD_STATIC, 1, 1, s_wxluatypeArray_wxLua_wxGLCanvas_IsDisplaySupported1 }};
//     static bool IsDisplaySupported(const int* attribList);
static int LUACALL wxLua_wxGLCanvas_IsDisplaySupported1(lua_State *L)
{
    // const int attribList
    const int * attribList = (const int *)wxlua_touserdata(L, 1);
    // call IsDisplaySupported
    bool returns = (wxGLCanvas::IsDisplaySupported(attribList));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGLCanvas_IsDisplaySupported[] = { &wxluatype_wxGLAttributes, NULL };
static int LUACALL wxLua_wxGLCanvas_IsDisplaySupported(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxGLCanvas_IsDisplaySupported[1] = {{ wxLua_wxGLCanvas_IsDisplaySupported, WXLUAMETHOD_METHOD|WXLUAMETHOD_STATIC, 1, 1, s_wxluatypeArray_wxLua_wxGLCanvas_IsDisplaySupported }};
//     static bool IsDisplaySupported(const wxGLAttributes& dispAttrs);
static int LUACALL wxLua_wxGLCanvas_IsDisplaySupported(lua_State *L)
{
    // const wxGLAttributes dispAttrs
    const wxGLAttributes * dispAttrs = (const wxGLAttributes *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGLAttributes);
    // call IsDisplaySupported
    bool returns = (wxGLCanvas::IsDisplaySupported(*dispAttrs));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGLCanvas_IsExtensionSupported[] = { &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxGLCanvas_IsExtensionSupported(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGLCanvas_IsExtensionSupported[1] = {{ wxLua_wxGLCanvas_IsExtensionSupported, WXLUAMETHOD_METHOD|WXLUAMETHOD_STATIC, 1, 1, s_wxluatypeArray_wxLua_wxGLCanvas_IsExtensionSupported }};
//     static bool IsExtensionSupported(const char *extension);
static int LUACALL wxLua_wxGLCanvas_IsExtensionSupported(lua_State *L)
{
    // const char extension
    const char * extension = wxlua_getstringtype(L, 1);
    // call IsExtensionSupported
    bool returns = (wxGLCanvas::IsExtensionSupported(extension));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

#endif // (wxCHECK_VERSION(3,1,0)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)

static wxLuaArgType s_wxluatypeArray_wxLua_wxGLCanvas_SetColour[] = { &wxluatype_wxGLCanvas, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxGLCanvas_SetColour(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGLCanvas_SetColour[1] = {{ wxLua_wxGLCanvas_SetColour, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxGLCanvas_SetColour }};
//     void SetColour(const wxString& colour);
static int LUACALL wxLua_wxGLCanvas_SetColour(lua_State *L)
{
    // const wxString colour
    const wxString colour = wxlua_getwxStringtype(L, 2);
    // get this
    wxGLCanvas * self = (wxGLCanvas *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGLCanvas);
    // call SetColour
    self->SetColour(colour);

    return 0;
}


#if ((wxCHECK_VERSION(3,1,1)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)
static wxLuaArgType s_wxluatypeArray_wxLua_wxGLCanvas_SetCurrent2[] = { &wxluatype_wxGLCanvas, &wxluatype_wxGLContext, NULL };
static int LUACALL wxLua_wxGLCanvas_SetCurrent2(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxGLCanvas_SetCurrent2[1] = {{ wxLua_wxGLCanvas_SetCurrent2, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxGLCanvas_SetCurrent2 }};
//     %wxchkver_3_1_1 bool SetCurrent(const wxGLContext& context) const;
static int LUACALL wxLua_wxGLCanvas_SetCurrent2(lua_State *L)
{
    // const wxGLContext context
    const wxGLContext * context = (const wxGLContext *)wxluaT_getuserdatatype(L, 2, wxluatype_wxGLContext);
    // get this
    wxGLCanvas * self = (wxGLCanvas *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGLCanvas);
    // call SetCurrent
    bool returns = (self->SetCurrent(*context));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

#endif // ((wxCHECK_VERSION(3,1,1)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)

#if ((wxCHECK_VERSION(2,8,0) && !wxCHECK_VERSION(3,1,1) && !defined(__WXMAC__)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)
static wxLuaArgType s_wxluatypeArray_wxLua_wxGLCanvas_SetCurrent1[] = { &wxluatype_wxGLCanvas, &wxluatype_wxGLContext, NULL };
static int LUACALL wxLua_wxGLCanvas_SetCurrent1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxGLCanvas_SetCurrent1[1] = {{ wxLua_wxGLCanvas_SetCurrent1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxGLCanvas_SetCurrent1 }};
//     %wxchkver_2_8 && !%wxchkver_3_1_1 && !%mac void SetCurrent(const wxGLContext& RC) const;
static int LUACALL wxLua_wxGLCanvas_SetCurrent1(lua_State *L)
{
    // const wxGLContext RC
    const wxGLContext * RC = (const wxGLContext *)wxluaT_getuserdatatype(L, 2, wxluatype_wxGLContext);
    // get this
    wxGLCanvas * self = (wxGLCanvas *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGLCanvas);
    // call SetCurrent
    self->SetCurrent(*RC);

    return 0;
}

#endif // ((wxCHECK_VERSION(2,8,0) && !wxCHECK_VERSION(3,1,1) && !defined(__WXMAC__)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)

#if (!wxCHECK_VERSION(3,1,1) && defined(__WXMAC__)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)
static wxLuaArgType s_wxluatypeArray_wxLua_wxGLCanvas_SetCurrent[] = { &wxluatype_wxGLCanvas, NULL };
static int LUACALL wxLua_wxGLCanvas_SetCurrent(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxGLCanvas_SetCurrent[1] = {{ wxLua_wxGLCanvas_SetCurrent, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxGLCanvas_SetCurrent }};
//     !%wxchkver_3_1_1 && %mac void SetCurrent();
static int LUACALL wxLua_wxGLCanvas_SetCurrent(lua_State *L)
{
    // get this
    wxGLCanvas * self = (wxGLCanvas *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGLCanvas);
    // call SetCurrent
    self->SetCurrent();

    return 0;
}

#endif // (!wxCHECK_VERSION(3,1,1) && defined(__WXMAC__)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)

static wxLuaArgType s_wxluatypeArray_wxLua_wxGLCanvas_SwapBuffers[] = { &wxluatype_wxGLCanvas, NULL };
static int LUACALL wxLua_wxGLCanvas_SwapBuffers(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGLCanvas_SwapBuffers[1] = {{ wxLua_wxGLCanvas_SwapBuffers, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxGLCanvas_SwapBuffers }};
//     void SwapBuffers();
static int LUACALL wxLua_wxGLCanvas_SwapBuffers(lua_State *L)
{
    // get this
    wxGLCanvas * self = (wxGLCanvas *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGLCanvas);
    // call SwapBuffers
    self->SwapBuffers();

    return 0;
}


#if ((((!defined(__WXMAC__)) && ((wxCHECK_VERSION(3,0,0)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS))) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)) && (wxLUA_USE_wxPalette && wxUSE_PALETTE)) && (wxLUA_USE_wxPointSizeRect)
static wxLuaArgType s_wxluatypeArray_wxLua_wxGLCanvas_constructor4[] = { &wxluatype_wxWindow, &wxluatype_TNUMBER, &wxluatype_TTABLE, &wxluatype_wxPoint, &wxluatype_wxSize, &wxluatype_TNUMBER, &wxluatype_TSTRING, &wxluatype_wxPalette, NULL };
static int LUACALL wxLua_wxGLCanvas_constructor4(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxGLCanvas_constructor4[1] = {{ wxLua_wxGLCanvas_constructor4, WXLUAMETHOD_CONSTRUCTOR, 1, 8, s_wxluatypeArray_wxLua_wxGLCanvas_constructor4 }};
//     !%mac wxGLCanvas(wxWindow* parent, wxWindowID id = wxID_ANY, int attribList[] = 0, const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxDefaultSize, long style=0, const wxString& name="GLCanvas", const wxPalette& palette = wxNullPalette);
static int LUACALL wxLua_wxGLCanvas_constructor4(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // const wxPalette palette = wxNullPalette
    const wxPalette * palette = (argCount >= 8 ? (const wxPalette *)wxluaT_getuserdatatype(L, 8, wxluatype_wxPalette) : &wxNullPalette);
    // const wxString name = "GLCanvas"
    const wxString name = (argCount >= 7 ? wxlua_getwxStringtype(L, 7) : wxString(wxT("GLCanvas")));
    // long style = 0
    long style = (argCount >= 6 ? (long)wxlua_getnumbertype(L, 6) : 0);
    // const wxSize size = wxDefaultSize
    const wxSize * size = (argCount >= 5 ? (const wxSize *)wxluaT_getuserdatatype(L, 5, wxluatype_wxSize) : &wxDefaultSize);
    // const wxPoint pos = wxDefaultPosition
    const wxPoint * pos = (argCount >= 4 ? (const wxPoint *)wxluaT_getuserdatatype(L, 4, wxluatype_wxPoint) : &wxDefaultPosition);
    // int attribList = 0
    int count = 0; wxLuaSmartIntArray  attribList = (argCount >= 3 ? wxlua_getintarray(L, 3, count) : 0);
    // wxWindowID id = wxID_ANY
    wxWindowID id = (argCount >= 2 ? (wxWindowID)wxlua_getnumbertype(L, 2) : wxID_ANY);
    // wxWindow parent
    wxWindow * parent = (wxWindow *)wxluaT_getuserdatatype(L, 1, wxluatype_wxWindow);
    // call constructor
    wxGLCanvas* returns = new wxGLCanvas(parent, id, attribList, *pos, *size, style, name, *palette);
    // add to tracked window list, it will check validity
    wxluaW_addtrackedwindow(L, returns);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxGLCanvas);

    return 1;
}

#endif // ((((!defined(__WXMAC__)) && ((wxCHECK_VERSION(3,0,0)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS))) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)) && (wxLUA_USE_wxPalette && wxUSE_PALETTE)) && (wxLUA_USE_wxPointSizeRect)

#if ((((!defined(__WXMAC__)) && ((!wxCHECK_VERSION(3,0,0)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS))) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)) && (wxLUA_USE_wxPalette && wxUSE_PALETTE)) && (wxLUA_USE_wxPointSizeRect)
static wxLuaArgType s_wxluatypeArray_wxLua_wxGLCanvas_constructor3[] = { &wxluatype_wxWindow, &wxluatype_TNUMBER, &wxluatype_TTABLE, &wxluatype_wxPoint, &wxluatype_wxSize, &wxluatype_TNUMBER, &wxluatype_TSTRING, &wxluatype_wxPalette, NULL };
static int LUACALL wxLua_wxGLCanvas_constructor3(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxGLCanvas_constructor3[1] = {{ wxLua_wxGLCanvas_constructor3, WXLUAMETHOD_CONSTRUCTOR, 1, 8, s_wxluatypeArray_wxLua_wxGLCanvas_constructor3 }};
//     !%mac wxGLCanvas(wxWindow* parent, wxWindowID id = wxID_ANY, int attribList[] = 0, const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxDefaultSize, long style=0, const wxString& name="GLCanvas", const wxPalette& palette = wxNullPalette);
static int LUACALL wxLua_wxGLCanvas_constructor3(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // const wxPalette palette = wxNullPalette
    const wxPalette * palette = (argCount >= 8 ? (const wxPalette *)wxluaT_getuserdatatype(L, 8, wxluatype_wxPalette) : &wxNullPalette);
    // const wxString name = "GLCanvas"
    const wxString name = (argCount >= 7 ? wxlua_getwxStringtype(L, 7) : wxString(wxT("GLCanvas")));
    // long style = 0
    long style = (argCount >= 6 ? (long)wxlua_getnumbertype(L, 6) : 0);
    // const wxSize size = wxDefaultSize
    const wxSize * size = (argCount >= 5 ? (const wxSize *)wxluaT_getuserdatatype(L, 5, wxluatype_wxSize) : &wxDefaultSize);
    // const wxPoint pos = wxDefaultPosition
    const wxPoint * pos = (argCount >= 4 ? (const wxPoint *)wxluaT_getuserdatatype(L, 4, wxluatype_wxPoint) : &wxDefaultPosition);
    // int attribList = 0
    int count = 0; wxLuaSmartIntArray  attribList = (argCount >= 3 ? wxlua_getintarray(L, 3, count) : 0);
    // wxWindowID id = wxID_ANY
    wxWindowID id = (argCount >= 2 ? (wxWindowID)wxlua_getnumbertype(L, 2) : wxID_ANY);
    // wxWindow parent
    wxWindow * parent = (wxWindow *)wxluaT_getuserdatatype(L, 1, wxluatype_wxWindow);
    // call constructor
    wxGLCanvas* returns = new wxGLCanvas(parent, id, attribList, *pos, *size, style, name, *palette);
    // add to tracked window list, it will check validity
    wxluaW_addtrackedwindow(L, returns);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxGLCanvas);

    return 1;
}

#endif // ((((!defined(__WXMAC__)) && ((!wxCHECK_VERSION(3,0,0)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS))) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)) && (wxLUA_USE_wxPalette && wxUSE_PALETTE)) && (wxLUA_USE_wxPointSizeRect)

#if ((((!wxCHECK_VERSION(3,0,0)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)) && (wxLUA_USE_wxPalette && wxUSE_PALETTE)) && (wxLUA_USE_wxPointSizeRect)
static wxLuaArgType s_wxluatypeArray_wxLua_wxGLCanvas_constructor2[] = { &wxluatype_wxWindow, &wxluatype_wxGLCanvas, &wxluatype_TNUMBER, &wxluatype_wxPoint, &wxluatype_wxSize, &wxluatype_TNUMBER, &wxluatype_TSTRING, &wxluatype_TTABLE, &wxluatype_wxPalette, NULL };
static int LUACALL wxLua_wxGLCanvas_constructor2(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxGLCanvas_constructor2[1] = {{ wxLua_wxGLCanvas_constructor2, WXLUAMETHOD_CONSTRUCTOR, 2, 9, s_wxluatypeArray_wxLua_wxGLCanvas_constructor2 }};
//     wxGLCanvas(wxWindow* parent, wxGLCanvas* sharedCanvas, wxWindowID id = -1, const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxDefaultSize, long style=0, const wxString& name="GLCanvas", int attribList[] = 0, const wxPalette& palette = wxNullPalette);
static int LUACALL wxLua_wxGLCanvas_constructor2(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // const wxPalette palette = wxNullPalette
    const wxPalette * palette = (argCount >= 9 ? (const wxPalette *)wxluaT_getuserdatatype(L, 9, wxluatype_wxPalette) : &wxNullPalette);
    // int attribList = 0
    int count = 0; wxLuaSmartIntArray  attribList = (argCount >= 8 ? wxlua_getintarray(L, 8, count) : 0);
    // const wxString name = "GLCanvas"
    const wxString name = (argCount >= 7 ? wxlua_getwxStringtype(L, 7) : wxString(wxT("GLCanvas")));
    // long style = 0
    long style = (argCount >= 6 ? (long)wxlua_getnumbertype(L, 6) : 0);
    // const wxSize size = wxDefaultSize
    const wxSize * size = (argCount >= 5 ? (const wxSize *)wxluaT_getuserdatatype(L, 5, wxluatype_wxSize) : &wxDefaultSize);
    // const wxPoint pos = wxDefaultPosition
    const wxPoint * pos = (argCount >= 4 ? (const wxPoint *)wxluaT_getuserdatatype(L, 4, wxluatype_wxPoint) : &wxDefaultPosition);
    // wxWindowID id = -1
    wxWindowID id = (argCount >= 3 ? (wxWindowID)wxlua_getnumbertype(L, 3) : -1);
    // wxGLCanvas sharedCanvas
    wxGLCanvas * sharedCanvas = (wxGLCanvas *)wxluaT_getuserdatatype(L, 2, wxluatype_wxGLCanvas);
    // wxWindow parent
    wxWindow * parent = (wxWindow *)wxluaT_getuserdatatype(L, 1, wxluatype_wxWindow);
    // call constructor
    wxGLCanvas* returns = new wxGLCanvas(parent, sharedCanvas, id, *pos, *size, style, name, attribList, *palette);
    // add to tracked window list, it will check validity
    wxluaW_addtrackedwindow(L, returns);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxGLCanvas);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGLCanvas_constructor1[] = { &wxluatype_wxWindow, &wxluatype_wxGLContext, &wxluatype_TNUMBER, &wxluatype_wxPoint, &wxluatype_wxSize, &wxluatype_TNUMBER, &wxluatype_TSTRING, &wxluatype_TTABLE, &wxluatype_wxPalette, NULL };
static int LUACALL wxLua_wxGLCanvas_constructor1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxGLCanvas_constructor1[1] = {{ wxLua_wxGLCanvas_constructor1, WXLUAMETHOD_CONSTRUCTOR, 2, 9, s_wxluatypeArray_wxLua_wxGLCanvas_constructor1 }};
//     wxGLCanvas(wxWindow* parent, wxGLContext* sharedContext, wxWindowID id = -1, const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxDefaultSize, long style=0, const wxString& name="GLCanvas", int attribList[] = 0, const wxPalette& palette = wxNullPalette);
static int LUACALL wxLua_wxGLCanvas_constructor1(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // const wxPalette palette = wxNullPalette
    const wxPalette * palette = (argCount >= 9 ? (const wxPalette *)wxluaT_getuserdatatype(L, 9, wxluatype_wxPalette) : &wxNullPalette);
    // int attribList = 0
    int count = 0; wxLuaSmartIntArray  attribList = (argCount >= 8 ? wxlua_getintarray(L, 8, count) : 0);
    // const wxString name = "GLCanvas"
    const wxString name = (argCount >= 7 ? wxlua_getwxStringtype(L, 7) : wxString(wxT("GLCanvas")));
    // long style = 0
    long style = (argCount >= 6 ? (long)wxlua_getnumbertype(L, 6) : 0);
    // const wxSize size = wxDefaultSize
    const wxSize * size = (argCount >= 5 ? (const wxSize *)wxluaT_getuserdatatype(L, 5, wxluatype_wxSize) : &wxDefaultSize);
    // const wxPoint pos = wxDefaultPosition
    const wxPoint * pos = (argCount >= 4 ? (const wxPoint *)wxluaT_getuserdatatype(L, 4, wxluatype_wxPoint) : &wxDefaultPosition);
    // wxWindowID id = -1
    wxWindowID id = (argCount >= 3 ? (wxWindowID)wxlua_getnumbertype(L, 3) : -1);
    // wxGLContext sharedContext
    wxGLContext * sharedContext = (wxGLContext *)wxluaT_getuserdatatype(L, 2, wxluatype_wxGLContext);
    // wxWindow parent
    wxWindow * parent = (wxWindow *)wxluaT_getuserdatatype(L, 1, wxluatype_wxWindow);
    // call constructor
    wxGLCanvas* returns = new wxGLCanvas(parent, sharedContext, id, *pos, *size, style, name, attribList, *palette);
    // add to tracked window list, it will check validity
    wxluaW_addtrackedwindow(L, returns);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxGLCanvas);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGLCanvas_constructor[] = { &wxluatype_wxWindow, &wxluatype_TNUMBER, &wxluatype_wxPoint, &wxluatype_wxSize, &wxluatype_TNUMBER, &wxluatype_TSTRING, &wxluatype_TTABLE, &wxluatype_wxPalette, NULL };
static int LUACALL wxLua_wxGLCanvas_constructor(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxGLCanvas_constructor[1] = {{ wxLua_wxGLCanvas_constructor, WXLUAMETHOD_CONSTRUCTOR, 1, 8, s_wxluatypeArray_wxLua_wxGLCanvas_constructor }};
//     wxGLCanvas(wxWindow* parent, wxWindowID id = wxID_ANY, const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxDefaultSize, long style=0, const wxString& name="GLCanvas", int attribList[] = 0, const wxPalette& palette = wxNullPalette);
static int LUACALL wxLua_wxGLCanvas_constructor(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // const wxPalette palette = wxNullPalette
    const wxPalette * palette = (argCount >= 8 ? (const wxPalette *)wxluaT_getuserdatatype(L, 8, wxluatype_wxPalette) : &wxNullPalette);
    // int attribList = 0
    int count = 0; wxLuaSmartIntArray  attribList = (argCount >= 7 ? wxlua_getintarray(L, 7, count) : 0);
    // const wxString name = "GLCanvas"
    const wxString name = (argCount >= 6 ? wxlua_getwxStringtype(L, 6) : wxString(wxT("GLCanvas")));
    // long style = 0
    long style = (argCount >= 5 ? (long)wxlua_getnumbertype(L, 5) : 0);
    // const wxSize size = wxDefaultSize
    const wxSize * size = (argCount >= 4 ? (const wxSize *)wxluaT_getuserdatatype(L, 4, wxluatype_wxSize) : &wxDefaultSize);
    // const wxPoint pos = wxDefaultPosition
    const wxPoint * pos = (argCount >= 3 ? (const wxPoint *)wxluaT_getuserdatatype(L, 3, wxluatype_wxPoint) : &wxDefaultPosition);
    // wxWindowID id = wxID_ANY
    wxWindowID id = (argCount >= 2 ? (wxWindowID)wxlua_getnumbertype(L, 2) : wxID_ANY);
    // wxWindow parent
    wxWindow * parent = (wxWindow *)wxluaT_getuserdatatype(L, 1, wxluatype_wxWindow);
    // call constructor
    wxGLCanvas* returns = new wxGLCanvas(parent, id, *pos, *size, style, name, attribList, *palette);
    // add to tracked window list, it will check validity
    wxluaW_addtrackedwindow(L, returns);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxGLCanvas);

    return 1;
}

#endif // ((((!wxCHECK_VERSION(3,0,0)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)) && (wxLUA_USE_wxPalette && wxUSE_PALETTE)) && (wxLUA_USE_wxPointSizeRect)



#if ((wxCHECK_VERSION(3,1,0)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS))
// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGLCanvas_IsDisplaySupported_overload[] =
{

#if (wxCHECK_VERSION(3,1,0)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)
    { wxLua_wxGLCanvas_IsDisplaySupported1, WXLUAMETHOD_METHOD|WXLUAMETHOD_STATIC, 1, 1, s_wxluatypeArray_wxLua_wxGLCanvas_IsDisplaySupported1 },
#endif // (wxCHECK_VERSION(3,1,0)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)

#if (wxCHECK_VERSION(3,1,0)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)
    { wxLua_wxGLCanvas_IsDisplaySupported, WXLUAMETHOD_METHOD|WXLUAMETHOD_STATIC, 1, 1, s_wxluatypeArray_wxLua_wxGLCanvas_IsDisplaySupported },
#endif // (wxCHECK_VERSION(3,1,0)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)
};
static int s_wxluafunc_wxLua_wxGLCanvas_IsDisplaySupported_overload_count = sizeof(s_wxluafunc_wxLua_wxGLCanvas_IsDisplaySupported_overload)/sizeof(wxLuaBindCFunc);

#endif // ((wxCHECK_VERSION(3,1,0)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS))

#if (((wxCHECK_VERSION(3,1,1)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS))||(((wxCHECK_VERSION(2,8,0) && !wxCHECK_VERSION(3,1,1) && !defined(__WXMAC__)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS))||((!wxCHECK_VERSION(3,1,1) && defined(__WXMAC__)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS))
// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGLCanvas_SetCurrent_overload[] =
{

#if ((wxCHECK_VERSION(3,1,1)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)
    { wxLua_wxGLCanvas_SetCurrent2, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxGLCanvas_SetCurrent2 },
#endif // ((wxCHECK_VERSION(3,1,1)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)

#if ((wxCHECK_VERSION(2,8,0) && !wxCHECK_VERSION(3,1,1) && !defined(__WXMAC__)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)
    { wxLua_wxGLCanvas_SetCurrent1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxGLCanvas_SetCurrent1 },
#endif // ((wxCHECK_VERSION(2,8,0) && !wxCHECK_VERSION(3,1,1) && !defined(__WXMAC__)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)

#if (!wxCHECK_VERSION(3,1,1) && defined(__WXMAC__)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)
    { wxLua_wxGLCanvas_SetCurrent, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxGLCanvas_SetCurrent },
#endif // (!wxCHECK_VERSION(3,1,1) && defined(__WXMAC__)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)
};
static int s_wxluafunc_wxLua_wxGLCanvas_SetCurrent_overload_count = sizeof(s_wxluafunc_wxLua_wxGLCanvas_SetCurrent_overload)/sizeof(wxLuaBindCFunc);

#endif // (((wxCHECK_VERSION(3,1,1)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS))||(((wxCHECK_VERSION(2,8,0) && !wxCHECK_VERSION(3,1,1) && !defined(__WXMAC__)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS))||((!wxCHECK_VERSION(3,1,1) && defined(__WXMAC__)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS))

#if (((((!defined(__WXMAC__)) && ((wxCHECK_VERSION(3,0,0)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS))) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)) && (wxLUA_USE_wxPalette && wxUSE_PALETTE)) && (wxLUA_USE_wxPointSizeRect))||(((((!defined(__WXMAC__)) && ((!wxCHECK_VERSION(3,0,0)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS))) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)) && (wxLUA_USE_wxPalette && wxUSE_PALETTE)) && (wxLUA_USE_wxPointSizeRect))||(((((!wxCHECK_VERSION(3,0,0)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)) && (wxLUA_USE_wxPalette && wxUSE_PALETTE)) && (wxLUA_USE_wxPointSizeRect))
// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGLCanvas_constructor_overload[] =
{

#if ((((!defined(__WXMAC__)) && ((wxCHECK_VERSION(3,0,0)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS))) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)) && (wxLUA_USE_wxPalette && wxUSE_PALETTE)) && (wxLUA_USE_wxPointSizeRect)
    { wxLua_wxGLCanvas_constructor4, WXLUAMETHOD_CONSTRUCTOR, 1, 8, s_wxluatypeArray_wxLua_wxGLCanvas_constructor4 },
#endif // ((((!defined(__WXMAC__)) && ((wxCHECK_VERSION(3,0,0)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS))) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)) && (wxLUA_USE_wxPalette && wxUSE_PALETTE)) && (wxLUA_USE_wxPointSizeRect)

#if ((((!defined(__WXMAC__)) && ((!wxCHECK_VERSION(3,0,0)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS))) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)) && (wxLUA_USE_wxPalette && wxUSE_PALETTE)) && (wxLUA_USE_wxPointSizeRect)
    { wxLua_wxGLCanvas_constructor3, WXLUAMETHOD_CONSTRUCTOR, 1, 8, s_wxluatypeArray_wxLua_wxGLCanvas_constructor3 },
#endif // ((((!defined(__WXMAC__)) && ((!wxCHECK_VERSION(3,0,0)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS))) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)) && (wxLUA_USE_wxPalette && wxUSE_PALETTE)) && (wxLUA_USE_wxPointSizeRect)

#if ((((!wxCHECK_VERSION(3,0,0)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)) && (wxLUA_USE_wxPalette && wxUSE_PALETTE)) && (wxLUA_USE_wxPointSizeRect)
    { wxLua_wxGLCanvas_constructor2, WXLUAMETHOD_CONSTRUCTOR, 2, 9, s_wxluatypeArray_wxLua_wxGLCanvas_constructor2 },
#endif // ((((!wxCHECK_VERSION(3,0,0)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)) && (wxLUA_USE_wxPalette && wxUSE_PALETTE)) && (wxLUA_USE_wxPointSizeRect)

#if ((((!wxCHECK_VERSION(3,0,0)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)) && (wxLUA_USE_wxPalette && wxUSE_PALETTE)) && (wxLUA_USE_wxPointSizeRect)
    { wxLua_wxGLCanvas_constructor1, WXLUAMETHOD_CONSTRUCTOR, 2, 9, s_wxluatypeArray_wxLua_wxGLCanvas_constructor1 },
#endif // ((((!wxCHECK_VERSION(3,0,0)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)) && (wxLUA_USE_wxPalette && wxUSE_PALETTE)) && (wxLUA_USE_wxPointSizeRect)

#if ((((!wxCHECK_VERSION(3,0,0)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)) && (wxLUA_USE_wxPalette && wxUSE_PALETTE)) && (wxLUA_USE_wxPointSizeRect)
    { wxLua_wxGLCanvas_constructor, WXLUAMETHOD_CONSTRUCTOR, 1, 8, s_wxluatypeArray_wxLua_wxGLCanvas_constructor },
#endif // ((((!wxCHECK_VERSION(3,0,0)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)) && (wxLUA_USE_wxPalette && wxUSE_PALETTE)) && (wxLUA_USE_wxPointSizeRect)
};
static int s_wxluafunc_wxLua_wxGLCanvas_constructor_overload_count = sizeof(s_wxluafunc_wxLua_wxGLCanvas_constructor_overload)/sizeof(wxLuaBindCFunc);

#endif // (((((!defined(__WXMAC__)) && ((wxCHECK_VERSION(3,0,0)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS))) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)) && (wxLUA_USE_wxPalette && wxUSE_PALETTE)) && (wxLUA_USE_wxPointSizeRect))||(((((!defined(__WXMAC__)) && ((!wxCHECK_VERSION(3,0,0)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS))) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)) && (wxLUA_USE_wxPalette && wxUSE_PALETTE)) && (wxLUA_USE_wxPointSizeRect))||(((((!wxCHECK_VERSION(3,0,0)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)) && (wxLUA_USE_wxPalette && wxUSE_PALETTE)) && (wxLUA_USE_wxPointSizeRect))

void wxLua_wxGLCanvas_delete_function(void** p)
{
    wxGLCanvas* o = (wxGLCanvas*)(*p);
    delete o;
}

// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxGLCanvas_methods[] = {
#if ((wxCHECK_VERSION(3,1,0)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS))
    { "IsDisplaySupported", WXLUAMETHOD_METHOD|WXLUAMETHOD_STATIC, s_wxluafunc_wxLua_wxGLCanvas_IsDisplaySupported_overload, s_wxluafunc_wxLua_wxGLCanvas_IsDisplaySupported_overload_count, 0 },
#endif // ((wxCHECK_VERSION(3,1,0)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS))

#if (wxCHECK_VERSION(3,1,0)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)
    { "IsExtensionSupported", WXLUAMETHOD_METHOD|WXLUAMETHOD_STATIC, s_wxluafunc_wxLua_wxGLCanvas_IsExtensionSupported, 1, NULL },
#endif // (wxCHECK_VERSION(3,1,0)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)

    { "SetColour", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGLCanvas_SetColour, 1, NULL },

#if (((wxCHECK_VERSION(3,1,1)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS))||(((wxCHECK_VERSION(2,8,0) && !wxCHECK_VERSION(3,1,1) && !defined(__WXMAC__)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS))||((!wxCHECK_VERSION(3,1,1) && defined(__WXMAC__)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS))
    { "SetCurrent", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGLCanvas_SetCurrent_overload, s_wxluafunc_wxLua_wxGLCanvas_SetCurrent_overload_count, 0 },
#endif // (((wxCHECK_VERSION(3,1,1)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS))||(((wxCHECK_VERSION(2,8,0) && !wxCHECK_VERSION(3,1,1) && !defined(__WXMAC__)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS))||((!wxCHECK_VERSION(3,1,1) && defined(__WXMAC__)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS))

    { "SwapBuffers", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGLCanvas_SwapBuffers, 1, NULL },

#if (((((!defined(__WXMAC__)) && ((wxCHECK_VERSION(3,0,0)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS))) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)) && (wxLUA_USE_wxPalette && wxUSE_PALETTE)) && (wxLUA_USE_wxPointSizeRect))||(((((!defined(__WXMAC__)) && ((!wxCHECK_VERSION(3,0,0)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS))) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)) && (wxLUA_USE_wxPalette && wxUSE_PALETTE)) && (wxLUA_USE_wxPointSizeRect))||(((((!wxCHECK_VERSION(3,0,0)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)) && (wxLUA_USE_wxPalette && wxUSE_PALETTE)) && (wxLUA_USE_wxPointSizeRect))
    { "wxGLCanvas", WXLUAMETHOD_CONSTRUCTOR, s_wxluafunc_wxLua_wxGLCanvas_constructor_overload, s_wxluafunc_wxLua_wxGLCanvas_constructor_overload_count, 0 },
#endif // (((((!defined(__WXMAC__)) && ((wxCHECK_VERSION(3,0,0)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS))) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)) && (wxLUA_USE_wxPalette && wxUSE_PALETTE)) && (wxLUA_USE_wxPointSizeRect))||(((((!defined(__WXMAC__)) && ((!wxCHECK_VERSION(3,0,0)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS))) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)) && (wxLUA_USE_wxPalette && wxUSE_PALETTE)) && (wxLUA_USE_wxPointSizeRect))||(((((!wxCHECK_VERSION(3,0,0)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)) && (wxLUA_USE_wxPalette && wxUSE_PALETTE)) && (wxLUA_USE_wxPointSizeRect))

    { 0, 0, 0, 0 },
};

int wxGLCanvas_methodCount = sizeof(wxGLCanvas_methods)/sizeof(wxLuaBindMethod) - 1;

#endif  // wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS


#if (wxCHECK_VERSION(3,1,0)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)
// ---------------------------------------------------------------------------
// Bind class wxGLAttribsBase
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxGLAttribsBase'
int wxluatype_wxGLAttribsBase = WXLUA_TUNKNOWN;

static wxLuaArgType s_wxluatypeArray_wxLua_wxGLAttribsBase_AddAttribBits[] = { &wxluatype_wxGLAttribsBase, &wxluatype_TNUMBER, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxGLAttribsBase_AddAttribBits(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGLAttribsBase_AddAttribBits[1] = {{ wxLua_wxGLAttribsBase_AddAttribBits, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxGLAttribsBase_AddAttribBits }};
//     void AddAttribBits(int searchVal, int combineVal);
static int LUACALL wxLua_wxGLAttribsBase_AddAttribBits(lua_State *L)
{
    // int combineVal
    int combineVal = (int)wxlua_getnumbertype(L, 3);
    // int searchVal
    int searchVal = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxGLAttribsBase * self = (wxGLAttribsBase *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGLAttribsBase);
    // call AddAttribBits
    self->AddAttribBits(searchVal, combineVal);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGLAttribsBase_AddAttribute[] = { &wxluatype_wxGLAttribsBase, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxGLAttribsBase_AddAttribute(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGLAttribsBase_AddAttribute[1] = {{ wxLua_wxGLAttribsBase_AddAttribute, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxGLAttribsBase_AddAttribute }};
//     void AddAttribute(int attribute);
static int LUACALL wxLua_wxGLAttribsBase_AddAttribute(lua_State *L)
{
    // int attribute
    int attribute = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxGLAttribsBase * self = (wxGLAttribsBase *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGLAttribsBase);
    // call AddAttribute
    self->AddAttribute(attribute);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGLAttribsBase_GetGLAttrs[] = { &wxluatype_wxGLAttribsBase, NULL };
static int LUACALL wxLua_wxGLAttribsBase_GetGLAttrs(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGLAttribsBase_GetGLAttrs[1] = {{ wxLua_wxGLAttribsBase_GetGLAttrs, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxGLAttribsBase_GetGLAttrs }};
//     const int* GetGLAttrs() const;
static int LUACALL wxLua_wxGLAttribsBase_GetGLAttrs(lua_State *L)
{
    // get this
    wxGLAttribsBase * self = (wxGLAttribsBase *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGLAttribsBase);
    // call GetGLAttrs
    const int* returns = (const int*)self->GetGLAttrs();
    // push the result pointer
    lua_pushlightuserdata(L, (void *)returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGLAttribsBase_GetSize[] = { &wxluatype_wxGLAttribsBase, NULL };
static int LUACALL wxLua_wxGLAttribsBase_GetSize(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGLAttribsBase_GetSize[1] = {{ wxLua_wxGLAttribsBase_GetSize, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxGLAttribsBase_GetSize }};
//     int GetSize();
static int LUACALL wxLua_wxGLAttribsBase_GetSize(lua_State *L)
{
    // get this
    wxGLAttribsBase * self = (wxGLAttribsBase *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGLAttribsBase);
    // call GetSize
    int returns = (self->GetSize());
    // push the result number
#if LUA_VERSION_NUM >= 503
if ((double)(lua_Integer)returns == (double)returns) {
    // Exactly representable as lua_Integer
    lua_pushinteger(L, returns);
} else
#endif
{
    lua_pushnumber(L, returns);
}

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGLAttribsBase_NeedsARB[] = { &wxluatype_wxGLAttribsBase, NULL };
static int LUACALL wxLua_wxGLAttribsBase_NeedsARB(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGLAttribsBase_NeedsARB[1] = {{ wxLua_wxGLAttribsBase_NeedsARB, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxGLAttribsBase_NeedsARB }};
//     bool NeedsARB() const;
static int LUACALL wxLua_wxGLAttribsBase_NeedsARB(lua_State *L)
{
    // get this
    wxGLAttribsBase * self = (wxGLAttribsBase *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGLAttribsBase);
    // call NeedsARB
    bool returns = (self->NeedsARB());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGLAttribsBase_Reset[] = { &wxluatype_wxGLAttribsBase, NULL };
static int LUACALL wxLua_wxGLAttribsBase_Reset(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGLAttribsBase_Reset[1] = {{ wxLua_wxGLAttribsBase_Reset, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxGLAttribsBase_Reset }};
//     void Reset();
static int LUACALL wxLua_wxGLAttribsBase_Reset(lua_State *L)
{
    // get this
    wxGLAttribsBase * self = (wxGLAttribsBase *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGLAttribsBase);
    // call Reset
    self->Reset();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGLAttribsBase_SetNeedsARB[] = { &wxluatype_wxGLAttribsBase, &wxluatype_TBOOLEAN, NULL };
static int LUACALL wxLua_wxGLAttribsBase_SetNeedsARB(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGLAttribsBase_SetNeedsARB[1] = {{ wxLua_wxGLAttribsBase_SetNeedsARB, WXLUAMETHOD_METHOD, 1, 2, s_wxluatypeArray_wxLua_wxGLAttribsBase_SetNeedsARB }};
//     void SetNeedsARB(bool needsARB = true);
static int LUACALL wxLua_wxGLAttribsBase_SetNeedsARB(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // bool needsARB = true
    bool needsARB = (argCount >= 2 ? wxlua_getbooleantype(L, 2) : true);
    // get this
    wxGLAttribsBase * self = (wxGLAttribsBase *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGLAttribsBase);
    // call SetNeedsARB
    self->SetNeedsARB(needsARB);

    return 0;
}

static int LUACALL wxLua_wxGLAttribsBase_constructor(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGLAttribsBase_constructor[1] = {{ wxLua_wxGLAttribsBase_constructor, WXLUAMETHOD_CONSTRUCTOR, 0, 0, g_wxluaargtypeArray_None }};
//     wxGLAttribsBase();
static int LUACALL wxLua_wxGLAttribsBase_constructor(lua_State *L)
{
    // call constructor
    wxGLAttribsBase* returns = new wxGLAttribsBase();
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxGLAttribsBase);

    return 1;
}




void wxLua_wxGLAttribsBase_delete_function(void** p)
{
    wxGLAttribsBase* o = (wxGLAttribsBase*)(*p);
    delete o;
}

// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxGLAttribsBase_methods[] = {
    { "AddAttribBits", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGLAttribsBase_AddAttribBits, 1, NULL },
    { "AddAttribute", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGLAttribsBase_AddAttribute, 1, NULL },
    { "GetGLAttrs", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGLAttribsBase_GetGLAttrs, 1, NULL },
    { "GetSize", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGLAttribsBase_GetSize, 1, NULL },
    { "NeedsARB", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGLAttribsBase_NeedsARB, 1, NULL },
    { "Reset", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGLAttribsBase_Reset, 1, NULL },
    { "SetNeedsARB", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGLAttribsBase_SetNeedsARB, 1, NULL },
    { "wxGLAttribsBase", WXLUAMETHOD_CONSTRUCTOR, s_wxluafunc_wxLua_wxGLAttribsBase_constructor, 1, NULL },

    { 0, 0, 0, 0 },
};

int wxGLAttribsBase_methodCount = sizeof(wxGLAttribsBase_methods)/sizeof(wxLuaBindMethod) - 1;

#endif  // (wxCHECK_VERSION(3,1,0)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)


#if (wxCHECK_VERSION(3,1,0)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)
// ---------------------------------------------------------------------------
// Bind class wxGLAttributes
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxGLAttributes'
int wxluatype_wxGLAttributes = WXLUA_TUNKNOWN;

static wxLuaArgType s_wxluatypeArray_wxLua_wxGLAttributes_AuxBuffers[] = { &wxluatype_wxGLAttributes, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxGLAttributes_AuxBuffers(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGLAttributes_AuxBuffers[1] = {{ wxLua_wxGLAttributes_AuxBuffers, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxGLAttributes_AuxBuffers }};
//     wxGLAttributes& AuxBuffers(int val);
static int LUACALL wxLua_wxGLAttributes_AuxBuffers(lua_State *L)
{
    // int val
    int val = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxGLAttributes * self = (wxGLAttributes *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGLAttributes);
    // call AuxBuffers
    wxGLAttributes* returns = (wxGLAttributes*)&self->AuxBuffers(val);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxGLAttributes);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGLAttributes_BufferSize[] = { &wxluatype_wxGLAttributes, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxGLAttributes_BufferSize(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGLAttributes_BufferSize[1] = {{ wxLua_wxGLAttributes_BufferSize, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxGLAttributes_BufferSize }};
//     wxGLAttributes& BufferSize(int val);
static int LUACALL wxLua_wxGLAttributes_BufferSize(lua_State *L)
{
    // int val
    int val = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxGLAttributes * self = (wxGLAttributes *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGLAttributes);
    // call BufferSize
    wxGLAttributes* returns = (wxGLAttributes*)&self->BufferSize(val);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxGLAttributes);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGLAttributes_Defaults[] = { &wxluatype_wxGLAttributes, NULL };
static int LUACALL wxLua_wxGLAttributes_Defaults(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGLAttributes_Defaults[1] = {{ wxLua_wxGLAttributes_Defaults, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxGLAttributes_Defaults }};
//     wxGLAttributes& Defaults();
static int LUACALL wxLua_wxGLAttributes_Defaults(lua_State *L)
{
    // get this
    wxGLAttributes * self = (wxGLAttributes *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGLAttributes);
    // call Defaults
    wxGLAttributes* returns = (wxGLAttributes*)&self->Defaults();
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxGLAttributes);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGLAttributes_Depth[] = { &wxluatype_wxGLAttributes, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxGLAttributes_Depth(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGLAttributes_Depth[1] = {{ wxLua_wxGLAttributes_Depth, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxGLAttributes_Depth }};
//     wxGLAttributes& Depth(int val);
static int LUACALL wxLua_wxGLAttributes_Depth(lua_State *L)
{
    // int val
    int val = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxGLAttributes * self = (wxGLAttributes *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGLAttributes);
    // call Depth
    wxGLAttributes* returns = (wxGLAttributes*)&self->Depth(val);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxGLAttributes);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGLAttributes_DoubleBuffer[] = { &wxluatype_wxGLAttributes, NULL };
static int LUACALL wxLua_wxGLAttributes_DoubleBuffer(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGLAttributes_DoubleBuffer[1] = {{ wxLua_wxGLAttributes_DoubleBuffer, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxGLAttributes_DoubleBuffer }};
//     wxGLAttributes& DoubleBuffer();
static int LUACALL wxLua_wxGLAttributes_DoubleBuffer(lua_State *L)
{
    // get this
    wxGLAttributes * self = (wxGLAttributes *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGLAttributes);
    // call DoubleBuffer
    wxGLAttributes* returns = (wxGLAttributes*)&self->DoubleBuffer();
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxGLAttributes);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGLAttributes_EndList[] = { &wxluatype_wxGLAttributes, NULL };
static int LUACALL wxLua_wxGLAttributes_EndList(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGLAttributes_EndList[1] = {{ wxLua_wxGLAttributes_EndList, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxGLAttributes_EndList }};
//     void EndList();
static int LUACALL wxLua_wxGLAttributes_EndList(lua_State *L)
{
    // get this
    wxGLAttributes * self = (wxGLAttributes *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGLAttributes);
    // call EndList
    self->EndList();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGLAttributes_FrameBuffersRGB[] = { &wxluatype_wxGLAttributes, NULL };
static int LUACALL wxLua_wxGLAttributes_FrameBuffersRGB(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGLAttributes_FrameBuffersRGB[1] = {{ wxLua_wxGLAttributes_FrameBuffersRGB, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxGLAttributes_FrameBuffersRGB }};
//     wxGLAttributes& FrameBuffersRGB();
static int LUACALL wxLua_wxGLAttributes_FrameBuffersRGB(lua_State *L)
{
    // get this
    wxGLAttributes * self = (wxGLAttributes *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGLAttributes);
    // call FrameBuffersRGB
    wxGLAttributes* returns = (wxGLAttributes*)&self->FrameBuffersRGB();
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxGLAttributes);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGLAttributes_Level[] = { &wxluatype_wxGLAttributes, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxGLAttributes_Level(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGLAttributes_Level[1] = {{ wxLua_wxGLAttributes_Level, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxGLAttributes_Level }};
//     wxGLAttributes& Level(int val);
static int LUACALL wxLua_wxGLAttributes_Level(lua_State *L)
{
    // int val
    int val = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxGLAttributes * self = (wxGLAttributes *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGLAttributes);
    // call Level
    wxGLAttributes* returns = (wxGLAttributes*)&self->Level(val);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxGLAttributes);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGLAttributes_MinAcumRGBA[] = { &wxluatype_wxGLAttributes, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxGLAttributes_MinAcumRGBA(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGLAttributes_MinAcumRGBA[1] = {{ wxLua_wxGLAttributes_MinAcumRGBA, WXLUAMETHOD_METHOD, 5, 5, s_wxluatypeArray_wxLua_wxGLAttributes_MinAcumRGBA }};
//     wxGLAttributes& MinAcumRGBA(int mRed, int mGreen, int mBlue, int mAlpha);
static int LUACALL wxLua_wxGLAttributes_MinAcumRGBA(lua_State *L)
{
    // int mAlpha
    int mAlpha = (int)wxlua_getnumbertype(L, 5);
    // int mBlue
    int mBlue = (int)wxlua_getnumbertype(L, 4);
    // int mGreen
    int mGreen = (int)wxlua_getnumbertype(L, 3);
    // int mRed
    int mRed = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxGLAttributes * self = (wxGLAttributes *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGLAttributes);
    // call MinAcumRGBA
    wxGLAttributes* returns = (wxGLAttributes*)&self->MinAcumRGBA(mRed, mGreen, mBlue, mAlpha);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxGLAttributes);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGLAttributes_MinRGBA[] = { &wxluatype_wxGLAttributes, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxGLAttributes_MinRGBA(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGLAttributes_MinRGBA[1] = {{ wxLua_wxGLAttributes_MinRGBA, WXLUAMETHOD_METHOD, 5, 5, s_wxluatypeArray_wxLua_wxGLAttributes_MinRGBA }};
//     wxGLAttributes& MinRGBA(int mRed, int mGreen, int mBlue, int mAlpha);
static int LUACALL wxLua_wxGLAttributes_MinRGBA(lua_State *L)
{
    // int mAlpha
    int mAlpha = (int)wxlua_getnumbertype(L, 5);
    // int mBlue
    int mBlue = (int)wxlua_getnumbertype(L, 4);
    // int mGreen
    int mGreen = (int)wxlua_getnumbertype(L, 3);
    // int mRed
    int mRed = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxGLAttributes * self = (wxGLAttributes *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGLAttributes);
    // call MinRGBA
    wxGLAttributes* returns = (wxGLAttributes*)&self->MinRGBA(mRed, mGreen, mBlue, mAlpha);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxGLAttributes);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGLAttributes_PlatformDefaults[] = { &wxluatype_wxGLAttributes, NULL };
static int LUACALL wxLua_wxGLAttributes_PlatformDefaults(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGLAttributes_PlatformDefaults[1] = {{ wxLua_wxGLAttributes_PlatformDefaults, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxGLAttributes_PlatformDefaults }};
//     wxGLAttributes& PlatformDefaults();
static int LUACALL wxLua_wxGLAttributes_PlatformDefaults(lua_State *L)
{
    // get this
    wxGLAttributes * self = (wxGLAttributes *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGLAttributes);
    // call PlatformDefaults
    wxGLAttributes* returns = (wxGLAttributes*)&self->PlatformDefaults();
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxGLAttributes);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGLAttributes_RGBA[] = { &wxluatype_wxGLAttributes, NULL };
static int LUACALL wxLua_wxGLAttributes_RGBA(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGLAttributes_RGBA[1] = {{ wxLua_wxGLAttributes_RGBA, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxGLAttributes_RGBA }};
//     wxGLAttributes& RGBA();
static int LUACALL wxLua_wxGLAttributes_RGBA(lua_State *L)
{
    // get this
    wxGLAttributes * self = (wxGLAttributes *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGLAttributes);
    // call RGBA
    wxGLAttributes* returns = (wxGLAttributes*)&self->RGBA();
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxGLAttributes);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGLAttributes_SampleBuffers[] = { &wxluatype_wxGLAttributes, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxGLAttributes_SampleBuffers(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGLAttributes_SampleBuffers[1] = {{ wxLua_wxGLAttributes_SampleBuffers, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxGLAttributes_SampleBuffers }};
//     wxGLAttributes& SampleBuffers(int val);
static int LUACALL wxLua_wxGLAttributes_SampleBuffers(lua_State *L)
{
    // int val
    int val = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxGLAttributes * self = (wxGLAttributes *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGLAttributes);
    // call SampleBuffers
    wxGLAttributes* returns = (wxGLAttributes*)&self->SampleBuffers(val);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxGLAttributes);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGLAttributes_Samplers[] = { &wxluatype_wxGLAttributes, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxGLAttributes_Samplers(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGLAttributes_Samplers[1] = {{ wxLua_wxGLAttributes_Samplers, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxGLAttributes_Samplers }};
//     wxGLAttributes& Samplers(int val);
static int LUACALL wxLua_wxGLAttributes_Samplers(lua_State *L)
{
    // int val
    int val = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxGLAttributes * self = (wxGLAttributes *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGLAttributes);
    // call Samplers
    wxGLAttributes* returns = (wxGLAttributes*)&self->Samplers(val);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxGLAttributes);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGLAttributes_Stencil[] = { &wxluatype_wxGLAttributes, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxGLAttributes_Stencil(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGLAttributes_Stencil[1] = {{ wxLua_wxGLAttributes_Stencil, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxGLAttributes_Stencil }};
//     wxGLAttributes& Stencil(int val);
static int LUACALL wxLua_wxGLAttributes_Stencil(lua_State *L)
{
    // int val
    int val = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxGLAttributes * self = (wxGLAttributes *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGLAttributes);
    // call Stencil
    wxGLAttributes* returns = (wxGLAttributes*)&self->Stencil(val);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxGLAttributes);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGLAttributes_Stereo[] = { &wxluatype_wxGLAttributes, NULL };
static int LUACALL wxLua_wxGLAttributes_Stereo(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGLAttributes_Stereo[1] = {{ wxLua_wxGLAttributes_Stereo, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxGLAttributes_Stereo }};
//     wxGLAttributes& Stereo();
static int LUACALL wxLua_wxGLAttributes_Stereo(lua_State *L)
{
    // get this
    wxGLAttributes * self = (wxGLAttributes *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGLAttributes);
    // call Stereo
    wxGLAttributes* returns = (wxGLAttributes*)&self->Stereo();
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxGLAttributes);

    return 1;
}

static int LUACALL wxLua_wxGLAttributes_constructor(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGLAttributes_constructor[1] = {{ wxLua_wxGLAttributes_constructor, WXLUAMETHOD_CONSTRUCTOR, 0, 0, g_wxluaargtypeArray_None }};
//     wxGLAttributes();
static int LUACALL wxLua_wxGLAttributes_constructor(lua_State *L)
{
    // call constructor
    wxGLAttributes* returns = new wxGLAttributes();
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxGLAttributes);

    return 1;
}




void wxLua_wxGLAttributes_delete_function(void** p)
{
    wxGLAttributes* o = (wxGLAttributes*)(*p);
    delete o;
}

// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxGLAttributes_methods[] = {
    { "AuxBuffers", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGLAttributes_AuxBuffers, 1, NULL },
    { "BufferSize", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGLAttributes_BufferSize, 1, NULL },
    { "Defaults", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGLAttributes_Defaults, 1, NULL },
    { "Depth", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGLAttributes_Depth, 1, NULL },
    { "DoubleBuffer", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGLAttributes_DoubleBuffer, 1, NULL },
    { "EndList", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGLAttributes_EndList, 1, NULL },
    { "FrameBuffersRGB", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGLAttributes_FrameBuffersRGB, 1, NULL },
    { "Level", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGLAttributes_Level, 1, NULL },
    { "MinAcumRGBA", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGLAttributes_MinAcumRGBA, 1, NULL },
    { "MinRGBA", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGLAttributes_MinRGBA, 1, NULL },
    { "PlatformDefaults", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGLAttributes_PlatformDefaults, 1, NULL },
    { "RGBA", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGLAttributes_RGBA, 1, NULL },
    { "SampleBuffers", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGLAttributes_SampleBuffers, 1, NULL },
    { "Samplers", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGLAttributes_Samplers, 1, NULL },
    { "Stencil", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGLAttributes_Stencil, 1, NULL },
    { "Stereo", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGLAttributes_Stereo, 1, NULL },
    { "wxGLAttributes", WXLUAMETHOD_CONSTRUCTOR, s_wxluafunc_wxLua_wxGLAttributes_constructor, 1, NULL },

    { 0, 0, 0, 0 },
};

int wxGLAttributes_methodCount = sizeof(wxGLAttributes_methods)/sizeof(wxLuaBindMethod) - 1;

#endif  // (wxCHECK_VERSION(3,1,0)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)


#if (wxCHECK_VERSION(3,1,0)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)
// ---------------------------------------------------------------------------
// Bind class wxGLContextAttrs
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxGLContextAttrs'
int wxluatype_wxGLContextAttrs = WXLUA_TUNKNOWN;

static wxLuaArgType s_wxluatypeArray_wxLua_wxGLContextAttrs_CompatibilityProfile[] = { &wxluatype_wxGLContextAttrs, NULL };
static int LUACALL wxLua_wxGLContextAttrs_CompatibilityProfile(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGLContextAttrs_CompatibilityProfile[1] = {{ wxLua_wxGLContextAttrs_CompatibilityProfile, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxGLContextAttrs_CompatibilityProfile }};
//     wxGLContextAttrs& CompatibilityProfile();
static int LUACALL wxLua_wxGLContextAttrs_CompatibilityProfile(lua_State *L)
{
    // get this
    wxGLContextAttrs * self = (wxGLContextAttrs *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGLContextAttrs);
    // call CompatibilityProfile
    wxGLContextAttrs* returns = (wxGLContextAttrs*)&self->CompatibilityProfile();
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxGLContextAttrs);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGLContextAttrs_CoreProfile[] = { &wxluatype_wxGLContextAttrs, NULL };
static int LUACALL wxLua_wxGLContextAttrs_CoreProfile(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGLContextAttrs_CoreProfile[1] = {{ wxLua_wxGLContextAttrs_CoreProfile, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxGLContextAttrs_CoreProfile }};
//     wxGLContextAttrs& CoreProfile();
static int LUACALL wxLua_wxGLContextAttrs_CoreProfile(lua_State *L)
{
    // get this
    wxGLContextAttrs * self = (wxGLContextAttrs *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGLContextAttrs);
    // call CoreProfile
    wxGLContextAttrs* returns = (wxGLContextAttrs*)&self->CoreProfile();
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxGLContextAttrs);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGLContextAttrs_DebugCtx[] = { &wxluatype_wxGLContextAttrs, NULL };
static int LUACALL wxLua_wxGLContextAttrs_DebugCtx(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGLContextAttrs_DebugCtx[1] = {{ wxLua_wxGLContextAttrs_DebugCtx, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxGLContextAttrs_DebugCtx }};
//     wxGLContextAttrs& DebugCtx();
static int LUACALL wxLua_wxGLContextAttrs_DebugCtx(lua_State *L)
{
    // get this
    wxGLContextAttrs * self = (wxGLContextAttrs *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGLContextAttrs);
    // call DebugCtx
    wxGLContextAttrs* returns = (wxGLContextAttrs*)&self->DebugCtx();
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxGLContextAttrs);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGLContextAttrs_ES2[] = { &wxluatype_wxGLContextAttrs, NULL };
static int LUACALL wxLua_wxGLContextAttrs_ES2(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGLContextAttrs_ES2[1] = {{ wxLua_wxGLContextAttrs_ES2, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxGLContextAttrs_ES2 }};
//     wxGLContextAttrs& ES2();
static int LUACALL wxLua_wxGLContextAttrs_ES2(lua_State *L)
{
    // get this
    wxGLContextAttrs * self = (wxGLContextAttrs *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGLContextAttrs);
    // call ES2
    wxGLContextAttrs* returns = (wxGLContextAttrs*)&self->ES2();
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxGLContextAttrs);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGLContextAttrs_EndList[] = { &wxluatype_wxGLContextAttrs, NULL };
static int LUACALL wxLua_wxGLContextAttrs_EndList(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGLContextAttrs_EndList[1] = {{ wxLua_wxGLContextAttrs_EndList, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxGLContextAttrs_EndList }};
//     void EndList();
static int LUACALL wxLua_wxGLContextAttrs_EndList(lua_State *L)
{
    // get this
    wxGLContextAttrs * self = (wxGLContextAttrs *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGLContextAttrs);
    // call EndList
    self->EndList();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGLContextAttrs_ForwardCompatible[] = { &wxluatype_wxGLContextAttrs, NULL };
static int LUACALL wxLua_wxGLContextAttrs_ForwardCompatible(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGLContextAttrs_ForwardCompatible[1] = {{ wxLua_wxGLContextAttrs_ForwardCompatible, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxGLContextAttrs_ForwardCompatible }};
//     wxGLContextAttrs& ForwardCompatible();
static int LUACALL wxLua_wxGLContextAttrs_ForwardCompatible(lua_State *L)
{
    // get this
    wxGLContextAttrs * self = (wxGLContextAttrs *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGLContextAttrs);
    // call ForwardCompatible
    wxGLContextAttrs* returns = (wxGLContextAttrs*)&self->ForwardCompatible();
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxGLContextAttrs);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGLContextAttrs_LoseOnReset[] = { &wxluatype_wxGLContextAttrs, NULL };
static int LUACALL wxLua_wxGLContextAttrs_LoseOnReset(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGLContextAttrs_LoseOnReset[1] = {{ wxLua_wxGLContextAttrs_LoseOnReset, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxGLContextAttrs_LoseOnReset }};
//     wxGLContextAttrs& LoseOnReset();
static int LUACALL wxLua_wxGLContextAttrs_LoseOnReset(lua_State *L)
{
    // get this
    wxGLContextAttrs * self = (wxGLContextAttrs *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGLContextAttrs);
    // call LoseOnReset
    wxGLContextAttrs* returns = (wxGLContextAttrs*)&self->LoseOnReset();
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxGLContextAttrs);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGLContextAttrs_MajorVersion[] = { &wxluatype_wxGLContextAttrs, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxGLContextAttrs_MajorVersion(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGLContextAttrs_MajorVersion[1] = {{ wxLua_wxGLContextAttrs_MajorVersion, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxGLContextAttrs_MajorVersion }};
//     wxGLContextAttrs& MajorVersion(int val);
static int LUACALL wxLua_wxGLContextAttrs_MajorVersion(lua_State *L)
{
    // int val
    int val = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxGLContextAttrs * self = (wxGLContextAttrs *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGLContextAttrs);
    // call MajorVersion
    wxGLContextAttrs* returns = (wxGLContextAttrs*)&self->MajorVersion(val);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxGLContextAttrs);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGLContextAttrs_MinorVersion[] = { &wxluatype_wxGLContextAttrs, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxGLContextAttrs_MinorVersion(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGLContextAttrs_MinorVersion[1] = {{ wxLua_wxGLContextAttrs_MinorVersion, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxGLContextAttrs_MinorVersion }};
//     wxGLContextAttrs& MinorVersion(int val);
static int LUACALL wxLua_wxGLContextAttrs_MinorVersion(lua_State *L)
{
    // int val
    int val = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxGLContextAttrs * self = (wxGLContextAttrs *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGLContextAttrs);
    // call MinorVersion
    wxGLContextAttrs* returns = (wxGLContextAttrs*)&self->MinorVersion(val);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxGLContextAttrs);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGLContextAttrs_NoResetNotify[] = { &wxluatype_wxGLContextAttrs, NULL };
static int LUACALL wxLua_wxGLContextAttrs_NoResetNotify(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGLContextAttrs_NoResetNotify[1] = {{ wxLua_wxGLContextAttrs_NoResetNotify, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxGLContextAttrs_NoResetNotify }};
//     wxGLContextAttrs& NoResetNotify();
static int LUACALL wxLua_wxGLContextAttrs_NoResetNotify(lua_State *L)
{
    // get this
    wxGLContextAttrs * self = (wxGLContextAttrs *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGLContextAttrs);
    // call NoResetNotify
    wxGLContextAttrs* returns = (wxGLContextAttrs*)&self->NoResetNotify();
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxGLContextAttrs);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGLContextAttrs_OGLVersion[] = { &wxluatype_wxGLContextAttrs, &wxluatype_TNUMBER, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxGLContextAttrs_OGLVersion(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGLContextAttrs_OGLVersion[1] = {{ wxLua_wxGLContextAttrs_OGLVersion, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxGLContextAttrs_OGLVersion }};
//     wxGLContextAttrs& OGLVersion(int vmayor, int vminor);
static int LUACALL wxLua_wxGLContextAttrs_OGLVersion(lua_State *L)
{
    // int vminor
    int vminor = (int)wxlua_getnumbertype(L, 3);
    // int vmayor
    int vmayor = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxGLContextAttrs * self = (wxGLContextAttrs *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGLContextAttrs);
    // call OGLVersion
    wxGLContextAttrs* returns = (wxGLContextAttrs*)&self->OGLVersion(vmayor, vminor);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxGLContextAttrs);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGLContextAttrs_PlatformDefaults[] = { &wxluatype_wxGLContextAttrs, NULL };
static int LUACALL wxLua_wxGLContextAttrs_PlatformDefaults(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGLContextAttrs_PlatformDefaults[1] = {{ wxLua_wxGLContextAttrs_PlatformDefaults, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxGLContextAttrs_PlatformDefaults }};
//     wxGLContextAttrs& PlatformDefaults();
static int LUACALL wxLua_wxGLContextAttrs_PlatformDefaults(lua_State *L)
{
    // get this
    wxGLContextAttrs * self = (wxGLContextAttrs *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGLContextAttrs);
    // call PlatformDefaults
    wxGLContextAttrs* returns = (wxGLContextAttrs*)&self->PlatformDefaults();
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxGLContextAttrs);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGLContextAttrs_ReleaseFlush[] = { &wxluatype_wxGLContextAttrs, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxGLContextAttrs_ReleaseFlush(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGLContextAttrs_ReleaseFlush[1] = {{ wxLua_wxGLContextAttrs_ReleaseFlush, WXLUAMETHOD_METHOD, 1, 2, s_wxluatypeArray_wxLua_wxGLContextAttrs_ReleaseFlush }};
//     wxGLContextAttrs& ReleaseFlush(int val = 1);
static int LUACALL wxLua_wxGLContextAttrs_ReleaseFlush(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int val = 1
    int val = (argCount >= 2 ? (int)wxlua_getnumbertype(L, 2) : 1);
    // get this
    wxGLContextAttrs * self = (wxGLContextAttrs *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGLContextAttrs);
    // call ReleaseFlush
    wxGLContextAttrs* returns = (wxGLContextAttrs*)&self->ReleaseFlush(val);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxGLContextAttrs);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGLContextAttrs_ResetIsolation[] = { &wxluatype_wxGLContextAttrs, NULL };
static int LUACALL wxLua_wxGLContextAttrs_ResetIsolation(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGLContextAttrs_ResetIsolation[1] = {{ wxLua_wxGLContextAttrs_ResetIsolation, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxGLContextAttrs_ResetIsolation }};
//     wxGLContextAttrs& ResetIsolation();
static int LUACALL wxLua_wxGLContextAttrs_ResetIsolation(lua_State *L)
{
    // get this
    wxGLContextAttrs * self = (wxGLContextAttrs *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGLContextAttrs);
    // call ResetIsolation
    wxGLContextAttrs* returns = (wxGLContextAttrs*)&self->ResetIsolation();
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxGLContextAttrs);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGLContextAttrs_Robust[] = { &wxluatype_wxGLContextAttrs, NULL };
static int LUACALL wxLua_wxGLContextAttrs_Robust(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGLContextAttrs_Robust[1] = {{ wxLua_wxGLContextAttrs_Robust, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxGLContextAttrs_Robust }};
//     wxGLContextAttrs& Robust();
static int LUACALL wxLua_wxGLContextAttrs_Robust(lua_State *L)
{
    // get this
    wxGLContextAttrs * self = (wxGLContextAttrs *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGLContextAttrs);
    // call Robust
    wxGLContextAttrs* returns = (wxGLContextAttrs*)&self->Robust();
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxGLContextAttrs);

    return 1;
}

static int LUACALL wxLua_wxGLContextAttrs_constructor(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGLContextAttrs_constructor[1] = {{ wxLua_wxGLContextAttrs_constructor, WXLUAMETHOD_CONSTRUCTOR, 0, 0, g_wxluaargtypeArray_None }};
//     wxGLContextAttrs();
static int LUACALL wxLua_wxGLContextAttrs_constructor(lua_State *L)
{
    // call constructor
    wxGLContextAttrs* returns = new wxGLContextAttrs();
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxGLContextAttrs);

    return 1;
}




void wxLua_wxGLContextAttrs_delete_function(void** p)
{
    wxGLContextAttrs* o = (wxGLContextAttrs*)(*p);
    delete o;
}

// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxGLContextAttrs_methods[] = {
    { "CompatibilityProfile", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGLContextAttrs_CompatibilityProfile, 1, NULL },
    { "CoreProfile", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGLContextAttrs_CoreProfile, 1, NULL },
    { "DebugCtx", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGLContextAttrs_DebugCtx, 1, NULL },
    { "ES2", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGLContextAttrs_ES2, 1, NULL },
    { "EndList", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGLContextAttrs_EndList, 1, NULL },
    { "ForwardCompatible", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGLContextAttrs_ForwardCompatible, 1, NULL },
    { "LoseOnReset", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGLContextAttrs_LoseOnReset, 1, NULL },
    { "MajorVersion", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGLContextAttrs_MajorVersion, 1, NULL },
    { "MinorVersion", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGLContextAttrs_MinorVersion, 1, NULL },
    { "NoResetNotify", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGLContextAttrs_NoResetNotify, 1, NULL },
    { "OGLVersion", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGLContextAttrs_OGLVersion, 1, NULL },
    { "PlatformDefaults", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGLContextAttrs_PlatformDefaults, 1, NULL },
    { "ReleaseFlush", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGLContextAttrs_ReleaseFlush, 1, NULL },
    { "ResetIsolation", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGLContextAttrs_ResetIsolation, 1, NULL },
    { "Robust", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGLContextAttrs_Robust, 1, NULL },
    { "wxGLContextAttrs", WXLUAMETHOD_CONSTRUCTOR, s_wxluafunc_wxLua_wxGLContextAttrs_constructor, 1, NULL },

    { 0, 0, 0, 0 },
};

int wxGLContextAttrs_methodCount = sizeof(wxGLContextAttrs_methods)/sizeof(wxLuaBindMethod) - 1;

#endif  // (wxCHECK_VERSION(3,1,0)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)


#if wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS
// ---------------------------------------------------------------------------
// Bind class wxGLContext
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxGLContext'
int wxluatype_wxGLContext = WXLUA_TUNKNOWN;

#if (!wxCHECK_VERSION(2,8,0)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)
static wxLuaArgType s_wxluatypeArray_wxLua_wxGLContext_GetWindow[] = { &wxluatype_wxGLContext, NULL };
static int LUACALL wxLua_wxGLContext_GetWindow(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGLContext_GetWindow[1] = {{ wxLua_wxGLContext_GetWindow, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxGLContext_GetWindow }};
//         const wxWindow*  GetWindow();
static int LUACALL wxLua_wxGLContext_GetWindow(lua_State *L)
{
    // get this
    wxGLContext * self = (wxGLContext *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGLContext);
    // call GetWindow
    const wxWindow* returns = (const wxWindow*)self->GetWindow();
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxWindow);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGLContext_SetColour[] = { &wxluatype_wxGLContext, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxGLContext_SetColour(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGLContext_SetColour[1] = {{ wxLua_wxGLContext_SetColour, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxGLContext_SetColour }};
//         void SetColour(const wxString& colour);
static int LUACALL wxLua_wxGLContext_SetColour(lua_State *L)
{
    // const wxString colour
    const wxString colour = wxlua_getwxStringtype(L, 2);
    // get this
    wxGLContext * self = (wxGLContext *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGLContext);
    // call SetColour
    self->SetColour(colour);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGLContext_SetCurrent2[] = { &wxluatype_wxGLContext, NULL };
static int LUACALL wxLua_wxGLContext_SetCurrent2(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxGLContext_SetCurrent2[1] = {{ wxLua_wxGLContext_SetCurrent2, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxGLContext_SetCurrent2 }};
//         void SetCurrent();
static int LUACALL wxLua_wxGLContext_SetCurrent2(lua_State *L)
{
    // get this
    wxGLContext * self = (wxGLContext *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGLContext);
    // call SetCurrent
    self->SetCurrent();

    return 0;
}

#endif // (!wxCHECK_VERSION(2,8,0)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)

#if ((wxCHECK_VERSION(2,8,0)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)) && (defined(__WXMAC__) && !wxCHECK_VERSION(2,9,0))
static wxLuaArgType s_wxluatypeArray_wxLua_wxGLContext_SetCurrent1[] = { &wxluatype_wxGLContext, NULL };
static int LUACALL wxLua_wxGLContext_SetCurrent1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxGLContext_SetCurrent1[1] = {{ wxLua_wxGLContext_SetCurrent1, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxGLContext_SetCurrent1 }};
//         %mac & !%wxchkver_2_9 void SetCurrent() const;
static int LUACALL wxLua_wxGLContext_SetCurrent1(lua_State *L)
{
    // get this
    wxGLContext * self = (wxGLContext *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGLContext);
    // call SetCurrent
    self->SetCurrent();

    return 0;
}

#endif // ((wxCHECK_VERSION(2,8,0)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)) && (defined(__WXMAC__) && !wxCHECK_VERSION(2,9,0))

#if ((!defined(__WXMAC__) || wxCHECK_VERSION(2,9,0)) && ((wxCHECK_VERSION(2,8,0)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS))) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)
static wxLuaArgType s_wxluatypeArray_wxLua_wxGLContext_SetCurrent[] = { &wxluatype_wxGLContext, &wxluatype_wxGLCanvas, NULL };
static int LUACALL wxLua_wxGLContext_SetCurrent(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxGLContext_SetCurrent[1] = {{ wxLua_wxGLContext_SetCurrent, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxGLContext_SetCurrent }};
//         !%mac | %wxchkver_2_9 void SetCurrent(const wxGLCanvas& win) const;
static int LUACALL wxLua_wxGLContext_SetCurrent(lua_State *L)
{
    // const wxGLCanvas win
    const wxGLCanvas * win = (const wxGLCanvas *)wxluaT_getuserdatatype(L, 2, wxluatype_wxGLCanvas);
    // get this
    wxGLContext * self = (wxGLContext *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGLContext);
    // call SetCurrent
    self->SetCurrent(*win);

    return 0;
}

#endif // ((!defined(__WXMAC__) || wxCHECK_VERSION(2,9,0)) && ((wxCHECK_VERSION(2,8,0)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS))) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)

#if (!wxCHECK_VERSION(2,8,0)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)
static wxLuaArgType s_wxluatypeArray_wxLua_wxGLContext_SwapBuffers[] = { &wxluatype_wxGLContext, NULL };
static int LUACALL wxLua_wxGLContext_SwapBuffers(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGLContext_SwapBuffers[1] = {{ wxLua_wxGLContext_SwapBuffers, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxGLContext_SwapBuffers }};
//         void SwapBuffers();
static int LUACALL wxLua_wxGLContext_SwapBuffers(lua_State *L)
{
    // get this
    wxGLContext * self = (wxGLContext *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGLContext);
    // call SwapBuffers
    self->SwapBuffers();

    return 0;
}

#endif // (!wxCHECK_VERSION(2,8,0)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)

#if (((!wxCHECK_VERSION(2,8,0)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)) && (wxLUA_USE_wxPalette && wxUSE_PALETTE)
static wxLuaArgType s_wxluatypeArray_wxLua_wxGLContext_constructor2[] = { &wxluatype_TBOOLEAN, &wxluatype_wxGLCanvas, &wxluatype_wxPalette, &wxluatype_wxGLContext, NULL };
static int LUACALL wxLua_wxGLContext_constructor2(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxGLContext_constructor2[1] = {{ wxLua_wxGLContext_constructor2, WXLUAMETHOD_CONSTRUCTOR, 2, 4, s_wxluatypeArray_wxLua_wxGLContext_constructor2 }};
//         wxGLContext(bool isRGB, wxGLCanvas* win, const wxPalette& palette = wxNullPalette, const wxGLContext* other = NULL);
static int LUACALL wxLua_wxGLContext_constructor2(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // const wxGLContext other = NULL
    const wxGLContext * other = (argCount >= 4 ? (const wxGLContext *)wxluaT_getuserdatatype(L, 4, wxluatype_wxGLContext) : NULL);
    // const wxPalette palette = wxNullPalette
    const wxPalette * palette = (argCount >= 3 ? (const wxPalette *)wxluaT_getuserdatatype(L, 3, wxluatype_wxPalette) : &wxNullPalette);
    // wxGLCanvas win
    wxGLCanvas * win = (wxGLCanvas *)wxluaT_getuserdatatype(L, 2, wxluatype_wxGLCanvas);
    // bool isRGB
    bool isRGB = wxlua_getbooleantype(L, 1);
    // call constructor
    wxGLContext* returns = new wxGLContext(isRGB, win, *palette, other);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxGLContext);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGLContext_constructor1[] = { &wxluatype_TBOOLEAN, &wxluatype_wxGLCanvas, &wxluatype_wxPalette, NULL };
static int LUACALL wxLua_wxGLContext_constructor1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxGLContext_constructor1[1] = {{ wxLua_wxGLContext_constructor1, WXLUAMETHOD_CONSTRUCTOR, 2, 3, s_wxluatypeArray_wxLua_wxGLContext_constructor1 }};
//         wxGLContext(bool isRGB, wxGLCanvas* win, const wxPalette& palette = wxNullPalette);
static int LUACALL wxLua_wxGLContext_constructor1(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // const wxPalette palette = wxNullPalette
    const wxPalette * palette = (argCount >= 3 ? (const wxPalette *)wxluaT_getuserdatatype(L, 3, wxluatype_wxPalette) : &wxNullPalette);
    // wxGLCanvas win
    wxGLCanvas * win = (wxGLCanvas *)wxluaT_getuserdatatype(L, 2, wxluatype_wxGLCanvas);
    // bool isRGB
    bool isRGB = wxlua_getbooleantype(L, 1);
    // call constructor
    wxGLContext* returns = new wxGLContext(isRGB, win, *palette);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxGLContext);

    return 1;
}

#endif // (((!wxCHECK_VERSION(2,8,0)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)) && (wxLUA_USE_wxPalette && wxUSE_PALETTE)

#if ((!defined(__WXMAC__)) && ((wxCHECK_VERSION(2,8,0)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS))) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)
static wxLuaArgType s_wxluatypeArray_wxLua_wxGLContext_constructor[] = { &wxluatype_wxGLCanvas, &wxluatype_wxGLContext, NULL };
static int LUACALL wxLua_wxGLContext_constructor(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxGLContext_constructor[1] = {{ wxLua_wxGLContext_constructor, WXLUAMETHOD_CONSTRUCTOR, 1, 2, s_wxluatypeArray_wxLua_wxGLContext_constructor }};
//         !%mac wxGLContext(wxGLCanvas *win, const wxGLContext* other = NULL); // FIXME
static int LUACALL wxLua_wxGLContext_constructor(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // const wxGLContext other = NULL
    const wxGLContext * other = (argCount >= 2 ? (const wxGLContext *)wxluaT_getuserdatatype(L, 2, wxluatype_wxGLContext) : NULL);
    // wxGLCanvas win
    wxGLCanvas * win = (wxGLCanvas *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGLCanvas);
    // call constructor
    wxGLContext* returns = new wxGLContext(win, other);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxGLContext);

    return 1;
}

#endif // ((!defined(__WXMAC__)) && ((wxCHECK_VERSION(2,8,0)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS))) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)



#if ((!wxCHECK_VERSION(2,8,0)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS))||(((wxCHECK_VERSION(2,8,0)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)) && (defined(__WXMAC__) && !wxCHECK_VERSION(2,9,0)))||(((!defined(__WXMAC__) || wxCHECK_VERSION(2,9,0)) && ((wxCHECK_VERSION(2,8,0)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS))) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS))
// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGLContext_SetCurrent_overload[] =
{

#if (!wxCHECK_VERSION(2,8,0)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)
    { wxLua_wxGLContext_SetCurrent2, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxGLContext_SetCurrent2 },
#endif // (!wxCHECK_VERSION(2,8,0)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)

#if ((wxCHECK_VERSION(2,8,0)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)) && (defined(__WXMAC__) && !wxCHECK_VERSION(2,9,0))
    { wxLua_wxGLContext_SetCurrent1, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxGLContext_SetCurrent1 },
#endif // ((wxCHECK_VERSION(2,8,0)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)) && (defined(__WXMAC__) && !wxCHECK_VERSION(2,9,0))

#if ((!defined(__WXMAC__) || wxCHECK_VERSION(2,9,0)) && ((wxCHECK_VERSION(2,8,0)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS))) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)
    { wxLua_wxGLContext_SetCurrent, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxGLContext_SetCurrent },
#endif // ((!defined(__WXMAC__) || wxCHECK_VERSION(2,9,0)) && ((wxCHECK_VERSION(2,8,0)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS))) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)
};
static int s_wxluafunc_wxLua_wxGLContext_SetCurrent_overload_count = sizeof(s_wxluafunc_wxLua_wxGLContext_SetCurrent_overload)/sizeof(wxLuaBindCFunc);

#endif // ((!wxCHECK_VERSION(2,8,0)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS))||(((wxCHECK_VERSION(2,8,0)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)) && (defined(__WXMAC__) && !wxCHECK_VERSION(2,9,0)))||(((!defined(__WXMAC__) || wxCHECK_VERSION(2,9,0)) && ((wxCHECK_VERSION(2,8,0)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS))) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS))

#if ((((!wxCHECK_VERSION(2,8,0)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)) && (wxLUA_USE_wxPalette && wxUSE_PALETTE))||(((!defined(__WXMAC__)) && ((wxCHECK_VERSION(2,8,0)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS))) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS))
// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGLContext_constructor_overload[] =
{

#if (((!wxCHECK_VERSION(2,8,0)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)) && (wxLUA_USE_wxPalette && wxUSE_PALETTE)
    { wxLua_wxGLContext_constructor2, WXLUAMETHOD_CONSTRUCTOR, 2, 4, s_wxluatypeArray_wxLua_wxGLContext_constructor2 },
#endif // (((!wxCHECK_VERSION(2,8,0)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)) && (wxLUA_USE_wxPalette && wxUSE_PALETTE)

#if (((!wxCHECK_VERSION(2,8,0)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)) && (wxLUA_USE_wxPalette && wxUSE_PALETTE)
    { wxLua_wxGLContext_constructor1, WXLUAMETHOD_CONSTRUCTOR, 2, 3, s_wxluatypeArray_wxLua_wxGLContext_constructor1 },
#endif // (((!wxCHECK_VERSION(2,8,0)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)) && (wxLUA_USE_wxPalette && wxUSE_PALETTE)

#if ((!defined(__WXMAC__)) && ((wxCHECK_VERSION(2,8,0)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS))) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)
    { wxLua_wxGLContext_constructor, WXLUAMETHOD_CONSTRUCTOR, 1, 2, s_wxluatypeArray_wxLua_wxGLContext_constructor },
#endif // ((!defined(__WXMAC__)) && ((wxCHECK_VERSION(2,8,0)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS))) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)
};
static int s_wxluafunc_wxLua_wxGLContext_constructor_overload_count = sizeof(s_wxluafunc_wxLua_wxGLContext_constructor_overload)/sizeof(wxLuaBindCFunc);

#endif // ((((!wxCHECK_VERSION(2,8,0)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)) && (wxLUA_USE_wxPalette && wxUSE_PALETTE))||(((!defined(__WXMAC__)) && ((wxCHECK_VERSION(2,8,0)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS))) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS))

void wxLua_wxGLContext_delete_function(void** p)
{
    wxGLContext* o = (wxGLContext*)(*p);
    delete o;
}

// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxGLContext_methods[] = {
#if (!wxCHECK_VERSION(2,8,0)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)
    { "GetWindow", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGLContext_GetWindow, 1, NULL },
    { "SetColour", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGLContext_SetColour, 1, NULL },
#endif // (!wxCHECK_VERSION(2,8,0)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)

#if ((!wxCHECK_VERSION(2,8,0)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS))||(((wxCHECK_VERSION(2,8,0)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)) && (defined(__WXMAC__) && !wxCHECK_VERSION(2,9,0)))||(((!defined(__WXMAC__) || wxCHECK_VERSION(2,9,0)) && ((wxCHECK_VERSION(2,8,0)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS))) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS))
    { "SetCurrent", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGLContext_SetCurrent_overload, s_wxluafunc_wxLua_wxGLContext_SetCurrent_overload_count, 0 },
#endif // ((!wxCHECK_VERSION(2,8,0)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS))||(((wxCHECK_VERSION(2,8,0)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)) && (defined(__WXMAC__) && !wxCHECK_VERSION(2,9,0)))||(((!defined(__WXMAC__) || wxCHECK_VERSION(2,9,0)) && ((wxCHECK_VERSION(2,8,0)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS))) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS))

#if (!wxCHECK_VERSION(2,8,0)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)
    { "SwapBuffers", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGLContext_SwapBuffers, 1, NULL },
#endif // (!wxCHECK_VERSION(2,8,0)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)

#if ((((!wxCHECK_VERSION(2,8,0)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)) && (wxLUA_USE_wxPalette && wxUSE_PALETTE))||(((!defined(__WXMAC__)) && ((wxCHECK_VERSION(2,8,0)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS))) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS))
    { "wxGLContext", WXLUAMETHOD_CONSTRUCTOR, s_wxluafunc_wxLua_wxGLContext_constructor_overload, s_wxluafunc_wxLua_wxGLContext_constructor_overload_count, 0 },
#endif // ((((!wxCHECK_VERSION(2,8,0)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)) && (wxLUA_USE_wxPalette && wxUSE_PALETTE))||(((!defined(__WXMAC__)) && ((wxCHECK_VERSION(2,8,0)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS))) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS))

    { 0, 0, 0, 0 },
};

int wxGLContext_methodCount = sizeof(wxGLContext_methods)/sizeof(wxLuaBindMethod) - 1;

#endif  // wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS



// ---------------------------------------------------------------------------
// ../modules/wxbind/src/wxgl_bind.cpp was generated by genwxbind.lua 
//
// Any changes made to this file will be lost when the file is regenerated.
// ---------------------------------------------------------------------------


// ---------------------------------------------------------------------------
// wxLuaGetEventList_wxgl() is called to register events
// ---------------------------------------------------------------------------

wxLuaBindEvent* wxLuaGetEventList_wxgl(size_t &count)
{
    static wxLuaBindEvent eventList[] =
    {

        { 0, 0, 0 },
    };
    count = sizeof(eventList)/sizeof(wxLuaBindEvent) - 1;
    return eventList;
}

// ---------------------------------------------------------------------------
// wxLuaGetDefineList_wxgl() is called to register #define and enum
// ---------------------------------------------------------------------------

wxLuaBindNumber* wxLuaGetDefineList_wxgl(size_t &count)
{
    static wxLuaBindNumber numberList[] =
    {
#if wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS
        { "WX_GL_AUX_BUFFERS", WX_GL_AUX_BUFFERS },
        { "WX_GL_BUFFER_SIZE", WX_GL_BUFFER_SIZE },
        { "WX_GL_DEPTH_SIZE", WX_GL_DEPTH_SIZE },
        { "WX_GL_DOUBLEBUFFER", WX_GL_DOUBLEBUFFER },
        { "WX_GL_LEVEL", WX_GL_LEVEL },
        { "WX_GL_MIN_ACCUM_ALPHA", WX_GL_MIN_ACCUM_ALPHA },
        { "WX_GL_MIN_ACCUM_BLUE", WX_GL_MIN_ACCUM_BLUE },
        { "WX_GL_MIN_ACCUM_GREEN", WX_GL_MIN_ACCUM_GREEN },
        { "WX_GL_MIN_ACCUM_RED", WX_GL_MIN_ACCUM_RED },
        { "WX_GL_MIN_ALPHA", WX_GL_MIN_ALPHA },
        { "WX_GL_MIN_BLUE", WX_GL_MIN_BLUE },
        { "WX_GL_MIN_GREEN", WX_GL_MIN_GREEN },
        { "WX_GL_MIN_RED", WX_GL_MIN_RED },
        { "WX_GL_RGBA", WX_GL_RGBA },
        { "WX_GL_STENCIL_SIZE", WX_GL_STENCIL_SIZE },
        { "WX_GL_STEREO", WX_GL_STEREO },
#endif // wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS


        { 0, 0 },
    };
    count = sizeof(numberList)/sizeof(wxLuaBindNumber) - 1;
    return numberList;
}

// ---------------------------------------------------------------------------

// wxLuaGetStringList_wxgl() is called to register #define_string
// ---------------------------------------------------------------------------

wxLuaBindString* wxLuaGetStringList_wxgl(size_t &count)
{
    static wxLuaBindString stringList[] =
    {

        { 0, 0 },
    };
    count = sizeof(stringList)/sizeof(wxLuaBindString) - 1;
    return stringList;
}

// ---------------------------------------------------------------------------
// wxLuaGetObjectList_wxgl() is called to register object and pointer bindings
// ---------------------------------------------------------------------------

wxLuaBindObject* wxLuaGetObjectList_wxgl(size_t &count)
{
    static wxLuaBindObject objectList[] =
    {

        { 0, 0, 0, 0 },
    };
    count = sizeof(objectList)/sizeof(wxLuaBindObject) - 1;
    return objectList;
}

// ---------------------------------------------------------------------------
// wxLuaGetFunctionList_wxgl() is called to register global functions
// ---------------------------------------------------------------------------

// ---------------------------------------------------------------------------
// wxLuaGetFunctionList_wxgl() is called to register global functions
// ---------------------------------------------------------------------------

wxLuaBindMethod* wxLuaGetFunctionList_wxgl(size_t &count)
{
    static wxLuaBindMethod functionList[] =
    {

        { 0, 0, 0, 0 }, 
    };
    count = sizeof(functionList)/sizeof(wxLuaBindMethod) - 1;
    return functionList;
}



// ---------------------------------------------------------------------------
// wxLuaGetClassList_wxgl() is called to register classes
// ---------------------------------------------------------------------------

static const char* wxluaclassname_wxGLAttribsBase = "wxGLAttribsBase";
static const char* wxluaclassname_wxGLAttributes = "wxGLAttributes";
static const char* wxluaclassname_wxGLCanvas = "wxGLCanvas";
static const char* wxluaclassname_wxGLContext = "wxGLContext";
static const char* wxluaclassname_wxGLContextAttrs = "wxGLContextAttrs";
static const char* wxluaclassname_wxObject = "wxObject";
static const char* wxluaclassname_wxWindow = "wxWindow";

static const char* wxluabaseclassnames_wxGLAttributes[] = { wxluaclassname_wxGLAttribsBase, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxGLAttributes[] = { NULL };
static const char* wxluabaseclassnames_wxGLCanvas[] = { wxluaclassname_wxWindow, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxGLCanvas[] = { NULL };
static const char* wxluabaseclassnames_wxGLContext[] = { wxluaclassname_wxObject, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxGLContext[] = { NULL };
static const char* wxluabaseclassnames_wxGLContextAttrs[] = { wxluaclassname_wxGLAttribsBase, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxGLContextAttrs[] = { NULL };
// ---------------------------------------------------------------------------
// Lua Tag Method Values and Tables for each Class
// ---------------------------------------------------------------------------

#if (wxCHECK_VERSION(3,1,0)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)
    extern wxLuaBindMethod wxGLAttribsBase_methods[];
    extern int wxGLAttribsBase_methodCount;
    extern void wxLua_wxGLAttribsBase_delete_function(void** p);
    extern wxLuaBindMethod wxGLAttributes_methods[];
    extern int wxGLAttributes_methodCount;
    extern void wxLua_wxGLAttributes_delete_function(void** p);
    extern wxLuaBindMethod wxGLContextAttrs_methods[];
    extern int wxGLContextAttrs_methodCount;
    extern void wxLua_wxGLContextAttrs_delete_function(void** p);
#endif // (wxCHECK_VERSION(3,1,0)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)

#if wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS
    extern wxLuaBindMethod wxGLCanvas_methods[];
    extern int wxGLCanvas_methodCount;
    extern void wxLua_wxGLCanvas_delete_function(void** p);
    extern wxLuaBindMethod wxGLContext_methods[];
    extern int wxGLContext_methodCount;
    extern void wxLua_wxGLContext_delete_function(void** p);
#endif // wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS




wxLuaBindClass* wxLuaGetClassList_wxgl(size_t &count)
{
    static wxLuaBindClass classList[] =
    {
#if (wxCHECK_VERSION(3,1,0)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)
        { wxluaclassname_wxGLAttribsBase, wxGLAttribsBase_methods, wxGLAttribsBase_methodCount, NULL, &wxluatype_wxGLAttribsBase, NULL, NULL, NULL, NULL, NULL, 0, &wxLua_wxGLAttribsBase_delete_function, }, 
        { wxluaclassname_wxGLAttributes, wxGLAttributes_methods, wxGLAttributes_methodCount, NULL, &wxluatype_wxGLAttributes, wxluabaseclassnames_wxGLAttributes, wxluabaseclassbinds_wxGLAttributes, NULL, NULL, NULL, 0, &wxLua_wxGLAttributes_delete_function, }, 
#endif // (wxCHECK_VERSION(3,1,0)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)

#if wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS
        { wxluaclassname_wxGLCanvas, wxGLCanvas_methods, wxGLCanvas_methodCount, CLASSINFO(wxGLCanvas), &wxluatype_wxGLCanvas, wxluabaseclassnames_wxGLCanvas, wxluabaseclassbinds_wxGLCanvas, NULL, NULL, NULL, 0, &wxLua_wxGLCanvas_delete_function, }, 
        { wxluaclassname_wxGLContext, wxGLContext_methods, wxGLContext_methodCount, CLASSINFO(wxGLContext), &wxluatype_wxGLContext, wxluabaseclassnames_wxGLContext, wxluabaseclassbinds_wxGLContext, NULL, NULL, NULL, 0, &wxLua_wxGLContext_delete_function, }, 
#endif // wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS

#if (wxCHECK_VERSION(3,1,0)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)
        { wxluaclassname_wxGLContextAttrs, wxGLContextAttrs_methods, wxGLContextAttrs_methodCount, NULL, &wxluatype_wxGLContextAttrs, wxluabaseclassnames_wxGLContextAttrs, wxluabaseclassbinds_wxGLContextAttrs, NULL, NULL, NULL, 0, &wxLua_wxGLContextAttrs_delete_function, }, 
#endif // (wxCHECK_VERSION(3,1,0)) && (wxLUA_USE_wxGLCanvas && wxUSE_GLCANVAS)


        { 0, 0, 0, 0, 0, 0, 0 }, 
    };
    count = sizeof(classList)/sizeof(wxLuaBindClass) - 1;

    return classList;
}

// ---------------------------------------------------------------------------
// wxLuaBinding_wxgl() - the binding class
// ---------------------------------------------------------------------------

IMPLEMENT_DYNAMIC_CLASS(wxLuaBinding_wxgl, wxLuaBinding)

wxLuaBinding_wxgl::wxLuaBinding_wxgl() : wxLuaBinding()
{
    m_bindingName   = wxT("wxgl");
    m_nameSpace     = wxT("wx");
    m_classArray    = wxLuaGetClassList_wxgl(m_classCount);
    m_numberArray   = wxLuaGetDefineList_wxgl(m_numberCount);
    m_stringArray   = wxLuaGetStringList_wxgl(m_stringCount);
    m_eventArray    = wxLuaGetEventList_wxgl(m_eventCount);
    m_objectArray   = wxLuaGetObjectList_wxgl(m_objectCount);
    m_functionArray = wxLuaGetFunctionList_wxgl(m_functionCount);
    InitBinding();
}



// ---------------------------------------------------------------------------

wxLuaBinding* wxLuaBinding_wxgl_init()
{
    static wxLuaBinding_wxgl m_binding;

    if (wxLuaBinding::GetBindingArray().Index(&m_binding) == wxNOT_FOUND)
        wxLuaBinding::GetBindingArray().Add(&m_binding);

    return &m_binding;
}


