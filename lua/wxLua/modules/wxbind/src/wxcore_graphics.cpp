// ---------------------------------------------------------------------------
// ../modules/wxbind/src/wxcore_graphics.cpp was generated by genwxbind.lua 
//
// Any changes made to this file will be lost when the file is regenerated.
// ---------------------------------------------------------------------------


#include "wx/wxprec.h"

#ifdef __BORLANDC__
    #pragma hdrstop
#endif

#ifndef WX_PRECOMP
     #include "wx/wx.h"
#endif

#include "wxlua/wxlstate.h"
#include "wxbind/include/wxcore_bind.h"
#ifdef Above
    #undef Above
#endif
#ifdef Below
    #undef Below
#endif

#ifdef __GNUC__
    #pragma GCC diagnostic ignored "-Wunused-variable"
#endif // __GNUC__

#if LUA_VERSION_NUM < 503
#define lua_pushinteger lua_pushnumber
#endif


#if wxUSE_GRAPHICS_CONTEXT
// ---------------------------------------------------------------------------
// Bind class wxGraphicsObject
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxGraphicsObject'
int wxluatype_wxGraphicsObject = WXLUA_TUNKNOWN;

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsObject_GetRenderer[] = { &wxluatype_wxGraphicsObject, NULL };
static int LUACALL wxLua_wxGraphicsObject_GetRenderer(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsObject_GetRenderer[1] = {{ wxLua_wxGraphicsObject_GetRenderer, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxGraphicsObject_GetRenderer }};
//     wxGraphicsRenderer* GetRenderer() const;
static int LUACALL wxLua_wxGraphicsObject_GetRenderer(lua_State *L)
{
    // get this
    wxGraphicsObject * self = (wxGraphicsObject *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsObject);
    // call GetRenderer
    wxGraphicsRenderer* returns = (wxGraphicsRenderer*)self->GetRenderer();
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxGraphicsRenderer);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsObject_IsNull[] = { &wxluatype_wxGraphicsObject, NULL };
static int LUACALL wxLua_wxGraphicsObject_IsNull(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsObject_IsNull[1] = {{ wxLua_wxGraphicsObject_IsNull, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxGraphicsObject_IsNull }};
//     bool IsNull() const;
static int LUACALL wxLua_wxGraphicsObject_IsNull(lua_State *L)
{
    // get this
    wxGraphicsObject * self = (wxGraphicsObject *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsObject);
    // call IsNull
    bool returns = (self->IsNull());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsObject_delete[] = { &wxluatype_wxGraphicsObject, NULL };
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsObject_delete[1] = {{ wxlua_userdata_delete, WXLUAMETHOD_METHOD|WXLUAMETHOD_DELETE, 1, 1, s_wxluatypeArray_wxLua_wxGraphicsObject_delete }};

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsObject_constructor1[] = { &wxluatype_wxGraphicsRenderer, NULL };
static int LUACALL wxLua_wxGraphicsObject_constructor1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsObject_constructor1[1] = {{ wxLua_wxGraphicsObject_constructor1, WXLUAMETHOD_CONSTRUCTOR, 1, 1, s_wxluatypeArray_wxLua_wxGraphicsObject_constructor1 }};
//     wxGraphicsObject( wxGraphicsRenderer* renderer );
static int LUACALL wxLua_wxGraphicsObject_constructor1(lua_State *L)
{
    // wxGraphicsRenderer renderer
    wxGraphicsRenderer * renderer = (wxGraphicsRenderer *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsRenderer);
    // call constructor
    wxGraphicsObject* returns = new wxGraphicsObject(renderer);
    // add to tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxGraphicsObject);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxGraphicsObject);

    return 1;
}

static int LUACALL wxLua_wxGraphicsObject_constructor(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsObject_constructor[1] = {{ wxLua_wxGraphicsObject_constructor, WXLUAMETHOD_CONSTRUCTOR, 0, 0, g_wxluaargtypeArray_None }};
//     wxGraphicsObject();
static int LUACALL wxLua_wxGraphicsObject_constructor(lua_State *L)
{
    // call constructor
    wxGraphicsObject* returns = new wxGraphicsObject();
    // add to tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxGraphicsObject);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxGraphicsObject);

    return 1;
}




#if (wxUSE_GRAPHICS_CONTEXT)
// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsObject_constructor_overload[] =
{
    { wxLua_wxGraphicsObject_constructor1, WXLUAMETHOD_CONSTRUCTOR, 1, 1, s_wxluatypeArray_wxLua_wxGraphicsObject_constructor1 },
    { wxLua_wxGraphicsObject_constructor, WXLUAMETHOD_CONSTRUCTOR, 0, 0, g_wxluaargtypeArray_None },
};
static int s_wxluafunc_wxLua_wxGraphicsObject_constructor_overload_count = sizeof(s_wxluafunc_wxLua_wxGraphicsObject_constructor_overload)/sizeof(wxLuaBindCFunc);

#endif // (wxUSE_GRAPHICS_CONTEXT)

void wxLua_wxGraphicsObject_delete_function(void** p)
{
    wxGraphicsObject* o = (wxGraphicsObject*)(*p);
    delete o;
}

// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxGraphicsObject_methods[] = {
    { "GetRenderer", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsObject_GetRenderer, 1, NULL },
    { "IsNull", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsObject_IsNull, 1, NULL },
    { "delete", WXLUAMETHOD_METHOD|WXLUAMETHOD_DELETE, s_wxluafunc_wxLua_wxGraphicsObject_delete, 1, NULL },

#if (wxUSE_GRAPHICS_CONTEXT)
    { "wxGraphicsObject", WXLUAMETHOD_CONSTRUCTOR, s_wxluafunc_wxLua_wxGraphicsObject_constructor_overload, s_wxluafunc_wxLua_wxGraphicsObject_constructor_overload_count, 0 },
#endif // (wxUSE_GRAPHICS_CONTEXT)

    { 0, 0, 0, 0 },
};

int wxGraphicsObject_methodCount = sizeof(wxGraphicsObject_methods)/sizeof(wxLuaBindMethod) - 1;

#endif  // wxUSE_GRAPHICS_CONTEXT


#if (wxCHECK_VERSION(3,1,1)) && (wxUSE_GRAPHICS_CONTEXT)
// ---------------------------------------------------------------------------
// Bind class wxGraphicsPenInfo
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxGraphicsPenInfo'
int wxluatype_wxGraphicsPenInfo = WXLUA_TUNKNOWN;

#if ((wxCHECK_VERSION(3,1,1)) && (wxUSE_GRAPHICS_CONTEXT)) && (wxLUA_USE_wxColourPenBrush)
static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsPenInfo_Cap[] = { &wxluatype_wxGraphicsPenInfo, &wxluatype_TINTEGER, NULL };
static int LUACALL wxLua_wxGraphicsPenInfo_Cap(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsPenInfo_Cap[1] = {{ wxLua_wxGraphicsPenInfo_Cap, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxGraphicsPenInfo_Cap }};
//     wxGraphicsPenInfo& Cap(wxPenCap cap);
static int LUACALL wxLua_wxGraphicsPenInfo_Cap(lua_State *L)
{
    // wxPenCap cap
    wxPenCap cap = (wxPenCap)wxlua_getenumtype(L, 2);
    // get this
    wxGraphicsPenInfo * self = (wxGraphicsPenInfo *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsPenInfo);
    // call Cap
    wxGraphicsPenInfo* returns = (wxGraphicsPenInfo*)&self->Cap(cap);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxGraphicsPenInfo);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsPenInfo_Colour[] = { &wxluatype_wxGraphicsPenInfo, &wxluatype_wxColour, NULL };
static int LUACALL wxLua_wxGraphicsPenInfo_Colour(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsPenInfo_Colour[1] = {{ wxLua_wxGraphicsPenInfo_Colour, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxGraphicsPenInfo_Colour }};
//     wxGraphicsPenInfo& Colour(const wxColour& colour);
static int LUACALL wxLua_wxGraphicsPenInfo_Colour(lua_State *L)
{
    // const wxColour colour
    const wxColour * colour = (const wxColour *)wxluaT_getuserdatatype(L, 2, wxluatype_wxColour);
    // get this
    wxGraphicsPenInfo * self = (wxGraphicsPenInfo *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsPenInfo);
    // call Colour
    wxGraphicsPenInfo* returns = (wxGraphicsPenInfo*)&self->Colour(*colour);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxGraphicsPenInfo);

    return 1;
}

#endif // ((wxCHECK_VERSION(3,1,1)) && (wxUSE_GRAPHICS_CONTEXT)) && (wxLUA_USE_wxColourPenBrush)

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsPenInfo_Dashes[] = { &wxluatype_wxGraphicsPenInfo, NULL };
static int LUACALL wxLua_wxGraphicsPenInfo_Dashes(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsPenInfo_Dashes[1] = {{ wxLua_wxGraphicsPenInfo_Dashes, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxGraphicsPenInfo_Dashes }};
// %override wxLua_wxGraphicsPenInfo_Dashes
// wxGraphicsPenInfo& Dashes()
static int LUACALL wxLua_wxGraphicsPenInfo_Dashes(lua_State *L)
{
    // get this
    wxGraphicsPenInfo *self = (wxGraphicsPenInfo *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsPenInfo);
    // check if we have a table argument
    if (!wxlua_iswxluatype(lua_type(L, 2), WXLUA_TTABLE))
        wxlua_argerror(L, 2, wxT("a 'table'"));
    int count = lua_objlen(L, 2);
    // allocate an array of wxDashes
    // TODO: this memory will leak when wxGraphicsPenInfo is destroyed.
    wxDash *dashes = new wxDash[count];
    for (int idx = 1; idx <= count; idx++) {
        lua_rawgeti(L, 2, idx);
        dashes[idx - 1] = (wxDash)lua_tonumber(L, -1);
        lua_pop(L, 1);
    }
    wxGraphicsPenInfo *returns = &(self->Dashes(count, dashes));
    // push the result data
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxGraphicsPenInfo);
    return 1;
}



#if ((wxCHECK_VERSION(3,1,1)) && (wxUSE_GRAPHICS_CONTEXT)) && (wxLUA_USE_wxColourPenBrush)
static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsPenInfo_GetCap[] = { &wxluatype_wxGraphicsPenInfo, NULL };
static int LUACALL wxLua_wxGraphicsPenInfo_GetCap(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsPenInfo_GetCap[1] = {{ wxLua_wxGraphicsPenInfo_GetCap, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxGraphicsPenInfo_GetCap }};
//     wxPenCap GetCap() const;
static int LUACALL wxLua_wxGraphicsPenInfo_GetCap(lua_State *L)
{
    // get this
    wxGraphicsPenInfo * self = (wxGraphicsPenInfo *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsPenInfo);
    // call GetCap
    wxPenCap returns = (self->GetCap());
    // push the result number
#if LUA_VERSION_NUM >= 503
if ((double)(lua_Integer)returns == (double)returns) {
    // Exactly representable as lua_Integer
    lua_pushinteger(L, returns);
} else
#endif
{
    lua_pushnumber(L, returns);
}

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsPenInfo_GetColour[] = { &wxluatype_wxGraphicsPenInfo, NULL };
static int LUACALL wxLua_wxGraphicsPenInfo_GetColour(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsPenInfo_GetColour[1] = {{ wxLua_wxGraphicsPenInfo_GetColour, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxGraphicsPenInfo_GetColour }};
//     wxColour GetColour() const;
static int LUACALL wxLua_wxGraphicsPenInfo_GetColour(lua_State *L)
{
    // get this
    wxGraphicsPenInfo * self = (wxGraphicsPenInfo *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsPenInfo);
    // call GetColour
    // allocate a new object using the copy constructor
    wxColour* returns = new wxColour(self->GetColour());
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxColour);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxColour);

    return 1;
}

#endif // ((wxCHECK_VERSION(3,1,1)) && (wxUSE_GRAPHICS_CONTEXT)) && (wxLUA_USE_wxColourPenBrush)

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsPenInfo_GetDashCount[] = { &wxluatype_wxGraphicsPenInfo, NULL };
static int LUACALL wxLua_wxGraphicsPenInfo_GetDashCount(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsPenInfo_GetDashCount[1] = {{ wxLua_wxGraphicsPenInfo_GetDashCount, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxGraphicsPenInfo_GetDashCount }};
//     int GetDashCount() const;
static int LUACALL wxLua_wxGraphicsPenInfo_GetDashCount(lua_State *L)
{
    // get this
    wxGraphicsPenInfo * self = (wxGraphicsPenInfo *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsPenInfo);
    // call GetDashCount
    int returns = (self->GetDashCount());
    // push the result number
#if LUA_VERSION_NUM >= 503
if ((double)(lua_Integer)returns == (double)returns) {
    // Exactly representable as lua_Integer
    lua_pushinteger(L, returns);
} else
#endif
{
    lua_pushnumber(L, returns);
}

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsPenInfo_GetDashes[] = { &wxluatype_wxGraphicsPenInfo, NULL };
static int LUACALL wxLua_wxGraphicsPenInfo_GetDashes(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsPenInfo_GetDashes[1] = {{ wxLua_wxGraphicsPenInfo_GetDashes, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxGraphicsPenInfo_GetDashes }};
// %override wxLua_wxGraphicsPenInfo_GetDashes
// void GetDashes()
static int LUACALL wxLua_wxGraphicsPenInfo_GetDashes(lua_State *L)
{
    // get this
    wxGraphicsPenInfo *self = (wxGraphicsPenInfo *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsPenInfo);
    // get dashes
    wxDash *dashes;
    int nb_dashes = self->GetDashes(&dashes);
    if (nb_dashes == 0)
        return 0;  //  No dashes are defined
    // create a table (which will be the return value)
    lua_newtable(L);
    for (int idx = 0; idx < nb_dashes; ++idx) {
        lua_pushinteger(L, dashes[idx]);
        lua_rawseti(L, -2, idx + 1);
    }
    //  return the number of parameters
    return 1;
}


static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsPenInfo_GetEndX[] = { &wxluatype_wxGraphicsPenInfo, NULL };
static int LUACALL wxLua_wxGraphicsPenInfo_GetEndX(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsPenInfo_GetEndX[1] = {{ wxLua_wxGraphicsPenInfo_GetEndX, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxGraphicsPenInfo_GetEndX }};
//     wxDouble GetEndX() const;
static int LUACALL wxLua_wxGraphicsPenInfo_GetEndX(lua_State *L)
{
    // get this
    wxGraphicsPenInfo * self = (wxGraphicsPenInfo *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsPenInfo);
    // call GetEndX
    wxDouble returns = (self->GetEndX());
    // push the result floating point number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsPenInfo_GetEndY[] = { &wxluatype_wxGraphicsPenInfo, NULL };
static int LUACALL wxLua_wxGraphicsPenInfo_GetEndY(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsPenInfo_GetEndY[1] = {{ wxLua_wxGraphicsPenInfo_GetEndY, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxGraphicsPenInfo_GetEndY }};
//     wxDouble GetEndY() const;
static int LUACALL wxLua_wxGraphicsPenInfo_GetEndY(lua_State *L)
{
    // get this
    wxGraphicsPenInfo * self = (wxGraphicsPenInfo *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsPenInfo);
    // call GetEndY
    wxDouble returns = (self->GetEndY());
    // push the result floating point number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsPenInfo_GetGradientType[] = { &wxluatype_wxGraphicsPenInfo, NULL };
static int LUACALL wxLua_wxGraphicsPenInfo_GetGradientType(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsPenInfo_GetGradientType[1] = {{ wxLua_wxGraphicsPenInfo_GetGradientType, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxGraphicsPenInfo_GetGradientType }};
//     wxGradientType GetGradientType() const;
static int LUACALL wxLua_wxGraphicsPenInfo_GetGradientType(lua_State *L)
{
    // get this
    wxGraphicsPenInfo * self = (wxGraphicsPenInfo *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsPenInfo);
    // call GetGradientType
    wxGradientType returns = (self->GetGradientType());
    // push the result number
#if LUA_VERSION_NUM >= 503
if ((double)(lua_Integer)returns == (double)returns) {
    // Exactly representable as lua_Integer
    lua_pushinteger(L, returns);
} else
#endif
{
    lua_pushnumber(L, returns);
}

    return 1;
}


#if ((wxCHECK_VERSION(3,1,1)) && (wxUSE_GRAPHICS_CONTEXT)) && (wxLUA_USE_wxColourPenBrush)
static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsPenInfo_GetJoin[] = { &wxluatype_wxGraphicsPenInfo, NULL };
static int LUACALL wxLua_wxGraphicsPenInfo_GetJoin(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsPenInfo_GetJoin[1] = {{ wxLua_wxGraphicsPenInfo_GetJoin, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxGraphicsPenInfo_GetJoin }};
//     wxPenJoin GetJoin() const;
static int LUACALL wxLua_wxGraphicsPenInfo_GetJoin(lua_State *L)
{
    // get this
    wxGraphicsPenInfo * self = (wxGraphicsPenInfo *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsPenInfo);
    // call GetJoin
    wxPenJoin returns = (self->GetJoin());
    // push the result number
#if LUA_VERSION_NUM >= 503
if ((double)(lua_Integer)returns == (double)returns) {
    // Exactly representable as lua_Integer
    lua_pushinteger(L, returns);
} else
#endif
{
    lua_pushnumber(L, returns);
}

    return 1;
}

#endif // ((wxCHECK_VERSION(3,1,1)) && (wxUSE_GRAPHICS_CONTEXT)) && (wxLUA_USE_wxColourPenBrush)

#if ((wxCHECK_VERSION(3,1,1)) && (wxUSE_GRAPHICS_CONTEXT)) && (wxUSE_GRAPHICS_CONTEXT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsPenInfo_GetMatrix[] = { &wxluatype_wxGraphicsPenInfo, NULL };
static int LUACALL wxLua_wxGraphicsPenInfo_GetMatrix(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsPenInfo_GetMatrix[1] = {{ wxLua_wxGraphicsPenInfo_GetMatrix, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxGraphicsPenInfo_GetMatrix }};
//     const wxGraphicsMatrix& GetMatrix() const;
static int LUACALL wxLua_wxGraphicsPenInfo_GetMatrix(lua_State *L)
{
    // get this
    wxGraphicsPenInfo * self = (wxGraphicsPenInfo *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsPenInfo);
    // call GetMatrix
    const wxGraphicsMatrix* returns = (const wxGraphicsMatrix*)&self->GetMatrix();
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxGraphicsMatrix);

    return 1;
}

#endif // ((wxCHECK_VERSION(3,1,1)) && (wxUSE_GRAPHICS_CONTEXT)) && (wxUSE_GRAPHICS_CONTEXT)

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsPenInfo_GetRadius[] = { &wxluatype_wxGraphicsPenInfo, NULL };
static int LUACALL wxLua_wxGraphicsPenInfo_GetRadius(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsPenInfo_GetRadius[1] = {{ wxLua_wxGraphicsPenInfo_GetRadius, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxGraphicsPenInfo_GetRadius }};
//     wxDouble GetRadius() const;
static int LUACALL wxLua_wxGraphicsPenInfo_GetRadius(lua_State *L)
{
    // get this
    wxGraphicsPenInfo * self = (wxGraphicsPenInfo *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsPenInfo);
    // call GetRadius
    wxDouble returns = (self->GetRadius());
    // push the result floating point number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsPenInfo_GetStartX[] = { &wxluatype_wxGraphicsPenInfo, NULL };
static int LUACALL wxLua_wxGraphicsPenInfo_GetStartX(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsPenInfo_GetStartX[1] = {{ wxLua_wxGraphicsPenInfo_GetStartX, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxGraphicsPenInfo_GetStartX }};
//     wxDouble GetStartX() const;
static int LUACALL wxLua_wxGraphicsPenInfo_GetStartX(lua_State *L)
{
    // get this
    wxGraphicsPenInfo * self = (wxGraphicsPenInfo *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsPenInfo);
    // call GetStartX
    wxDouble returns = (self->GetStartX());
    // push the result floating point number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsPenInfo_GetStartY[] = { &wxluatype_wxGraphicsPenInfo, NULL };
static int LUACALL wxLua_wxGraphicsPenInfo_GetStartY(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsPenInfo_GetStartY[1] = {{ wxLua_wxGraphicsPenInfo_GetStartY, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxGraphicsPenInfo_GetStartY }};
//     wxDouble GetStartY() const;
static int LUACALL wxLua_wxGraphicsPenInfo_GetStartY(lua_State *L)
{
    // get this
    wxGraphicsPenInfo * self = (wxGraphicsPenInfo *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsPenInfo);
    // call GetStartY
    wxDouble returns = (self->GetStartY());
    // push the result floating point number
    lua_pushnumber(L, returns);

    return 1;
}


#if ((wxCHECK_VERSION(3,1,1)) && (wxUSE_GRAPHICS_CONTEXT)) && (wxLUA_USE_wxBitmap)
static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsPenInfo_GetStipple[] = { &wxluatype_wxGraphicsPenInfo, NULL };
static int LUACALL wxLua_wxGraphicsPenInfo_GetStipple(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsPenInfo_GetStipple[1] = {{ wxLua_wxGraphicsPenInfo_GetStipple, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxGraphicsPenInfo_GetStipple }};
//     wxBitmap GetStipple() const;
static int LUACALL wxLua_wxGraphicsPenInfo_GetStipple(lua_State *L)
{
    // get this
    wxGraphicsPenInfo * self = (wxGraphicsPenInfo *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsPenInfo);
    // call GetStipple
    // allocate a new object using the copy constructor
    wxBitmap* returns = new wxBitmap(self->GetStipple());
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxBitmap);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxBitmap);

    return 1;
}

#endif // ((wxCHECK_VERSION(3,1,1)) && (wxUSE_GRAPHICS_CONTEXT)) && (wxLUA_USE_wxBitmap)

#if ((wxCHECK_VERSION(3,1,1)) && (wxUSE_GRAPHICS_CONTEXT)) && (wxUSE_GRAPHICS_CONTEXT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsPenInfo_GetStops[] = { &wxluatype_wxGraphicsPenInfo, NULL };
static int LUACALL wxLua_wxGraphicsPenInfo_GetStops(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsPenInfo_GetStops[1] = {{ wxLua_wxGraphicsPenInfo_GetStops, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxGraphicsPenInfo_GetStops }};
//     const wxGraphicsGradientStops& GetStops() const;
static int LUACALL wxLua_wxGraphicsPenInfo_GetStops(lua_State *L)
{
    // get this
    wxGraphicsPenInfo * self = (wxGraphicsPenInfo *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsPenInfo);
    // call GetStops
    const wxGraphicsGradientStops* returns = (const wxGraphicsGradientStops*)&self->GetStops();
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxGraphicsGradientStops);

    return 1;
}

#endif // ((wxCHECK_VERSION(3,1,1)) && (wxUSE_GRAPHICS_CONTEXT)) && (wxUSE_GRAPHICS_CONTEXT)

#if ((wxCHECK_VERSION(3,1,1)) && (wxUSE_GRAPHICS_CONTEXT)) && (wxLUA_USE_wxColourPenBrush)
static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsPenInfo_GetStyle[] = { &wxluatype_wxGraphicsPenInfo, NULL };
static int LUACALL wxLua_wxGraphicsPenInfo_GetStyle(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsPenInfo_GetStyle[1] = {{ wxLua_wxGraphicsPenInfo_GetStyle, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxGraphicsPenInfo_GetStyle }};
//     wxPenStyle GetStyle() const;
static int LUACALL wxLua_wxGraphicsPenInfo_GetStyle(lua_State *L)
{
    // get this
    wxGraphicsPenInfo * self = (wxGraphicsPenInfo *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsPenInfo);
    // call GetStyle
    wxPenStyle returns = (self->GetStyle());
    // push the result number
#if LUA_VERSION_NUM >= 503
if ((double)(lua_Integer)returns == (double)returns) {
    // Exactly representable as lua_Integer
    lua_pushinteger(L, returns);
} else
#endif
{
    lua_pushnumber(L, returns);
}

    return 1;
}

#endif // ((wxCHECK_VERSION(3,1,1)) && (wxUSE_GRAPHICS_CONTEXT)) && (wxLUA_USE_wxColourPenBrush)

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsPenInfo_GetWidth[] = { &wxluatype_wxGraphicsPenInfo, NULL };
static int LUACALL wxLua_wxGraphicsPenInfo_GetWidth(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsPenInfo_GetWidth[1] = {{ wxLua_wxGraphicsPenInfo_GetWidth, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxGraphicsPenInfo_GetWidth }};
//     wxDouble GetWidth() const;
static int LUACALL wxLua_wxGraphicsPenInfo_GetWidth(lua_State *L)
{
    // get this
    wxGraphicsPenInfo * self = (wxGraphicsPenInfo *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsPenInfo);
    // call GetWidth
    wxDouble returns = (self->GetWidth());
    // push the result floating point number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsPenInfo_GetX1[] = { &wxluatype_wxGraphicsPenInfo, NULL };
static int LUACALL wxLua_wxGraphicsPenInfo_GetX1(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsPenInfo_GetX1[1] = {{ wxLua_wxGraphicsPenInfo_GetX1, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxGraphicsPenInfo_GetX1 }};
//     wxDouble GetX1() const;
static int LUACALL wxLua_wxGraphicsPenInfo_GetX1(lua_State *L)
{
    // get this
    wxGraphicsPenInfo * self = (wxGraphicsPenInfo *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsPenInfo);
    // call GetX1
    wxDouble returns = (self->GetX1());
    // push the result floating point number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsPenInfo_GetX2[] = { &wxluatype_wxGraphicsPenInfo, NULL };
static int LUACALL wxLua_wxGraphicsPenInfo_GetX2(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsPenInfo_GetX2[1] = {{ wxLua_wxGraphicsPenInfo_GetX2, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxGraphicsPenInfo_GetX2 }};
//     wxDouble GetX2() const;
static int LUACALL wxLua_wxGraphicsPenInfo_GetX2(lua_State *L)
{
    // get this
    wxGraphicsPenInfo * self = (wxGraphicsPenInfo *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsPenInfo);
    // call GetX2
    wxDouble returns = (self->GetX2());
    // push the result floating point number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsPenInfo_GetY1[] = { &wxluatype_wxGraphicsPenInfo, NULL };
static int LUACALL wxLua_wxGraphicsPenInfo_GetY1(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsPenInfo_GetY1[1] = {{ wxLua_wxGraphicsPenInfo_GetY1, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxGraphicsPenInfo_GetY1 }};
//     wxDouble GetY1() const;
static int LUACALL wxLua_wxGraphicsPenInfo_GetY1(lua_State *L)
{
    // get this
    wxGraphicsPenInfo * self = (wxGraphicsPenInfo *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsPenInfo);
    // call GetY1
    wxDouble returns = (self->GetY1());
    // push the result floating point number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsPenInfo_GetY2[] = { &wxluatype_wxGraphicsPenInfo, NULL };
static int LUACALL wxLua_wxGraphicsPenInfo_GetY2(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsPenInfo_GetY2[1] = {{ wxLua_wxGraphicsPenInfo_GetY2, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxGraphicsPenInfo_GetY2 }};
//     wxDouble GetY2() const;
static int LUACALL wxLua_wxGraphicsPenInfo_GetY2(lua_State *L)
{
    // get this
    wxGraphicsPenInfo * self = (wxGraphicsPenInfo *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsPenInfo);
    // call GetY2
    wxDouble returns = (self->GetY2());
    // push the result floating point number
    lua_pushnumber(L, returns);

    return 1;
}


#if ((wxCHECK_VERSION(3,1,1)) && (wxUSE_GRAPHICS_CONTEXT)) && (wxLUA_USE_wxColourPenBrush)
static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsPenInfo_Join[] = { &wxluatype_wxGraphicsPenInfo, &wxluatype_TINTEGER, NULL };
static int LUACALL wxLua_wxGraphicsPenInfo_Join(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsPenInfo_Join[1] = {{ wxLua_wxGraphicsPenInfo_Join, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxGraphicsPenInfo_Join }};
//     wxGraphicsPenInfo& Join(wxPenJoin join);
static int LUACALL wxLua_wxGraphicsPenInfo_Join(lua_State *L)
{
    // wxPenJoin join
    wxPenJoin join = (wxPenJoin)wxlua_getenumtype(L, 2);
    // get this
    wxGraphicsPenInfo * self = (wxGraphicsPenInfo *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsPenInfo);
    // call Join
    wxGraphicsPenInfo* returns = (wxGraphicsPenInfo*)&self->Join(join);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxGraphicsPenInfo);

    return 1;
}

#endif // ((wxCHECK_VERSION(3,1,1)) && (wxUSE_GRAPHICS_CONTEXT)) && (wxLUA_USE_wxColourPenBrush)

#if ((wxCHECK_VERSION(3,1,1)) && (wxUSE_GRAPHICS_CONTEXT)) && (wxUSE_GRAPHICS_CONTEXT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsPenInfo_LinearGradient1[] = { &wxluatype_wxGraphicsPenInfo, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_wxGraphicsGradientStops, &wxluatype_wxGraphicsMatrix, NULL };
static int LUACALL wxLua_wxGraphicsPenInfo_LinearGradient1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsPenInfo_LinearGradient1[1] = {{ wxLua_wxGraphicsPenInfo_LinearGradient1, WXLUAMETHOD_METHOD, 6, 7, s_wxluatypeArray_wxLua_wxGraphicsPenInfo_LinearGradient1 }};
//                    const wxGraphicsMatrix& matrix = wxNullGraphicsMatrix);
static int LUACALL wxLua_wxGraphicsPenInfo_LinearGradient1(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // const wxGraphicsMatrix matrix = wxNullGraphicsMatrix
    const wxGraphicsMatrix * matrix = (argCount >= 7 ? (const wxGraphicsMatrix *)wxluaT_getuserdatatype(L, 7, wxluatype_wxGraphicsMatrix) : &wxNullGraphicsMatrix);
    // const wxGraphicsGradientStops stops
    const wxGraphicsGradientStops * stops = (const wxGraphicsGradientStops *)wxluaT_getuserdatatype(L, 6, wxluatype_wxGraphicsGradientStops);
    // wxDouble y2
    wxDouble y2 = (wxDouble)wxlua_getnumbertype(L, 5);
    // wxDouble x2
    wxDouble x2 = (wxDouble)wxlua_getnumbertype(L, 4);
    // wxDouble y1
    wxDouble y1 = (wxDouble)wxlua_getnumbertype(L, 3);
    // wxDouble x1
    wxDouble x1 = (wxDouble)wxlua_getnumbertype(L, 2);
    // get this
    wxGraphicsPenInfo * self = (wxGraphicsPenInfo *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsPenInfo);
    // call LinearGradient
    wxGraphicsPenInfo* returns = (wxGraphicsPenInfo*)&self->LinearGradient(x1, y1, x2, y2, *stops, *matrix);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxGraphicsPenInfo);

    return 1;
}

#endif // ((wxCHECK_VERSION(3,1,1)) && (wxUSE_GRAPHICS_CONTEXT)) && (wxUSE_GRAPHICS_CONTEXT)

#if (((wxCHECK_VERSION(3,1,1)) && (wxUSE_GRAPHICS_CONTEXT)) && (wxLUA_USE_wxColourPenBrush)) && (wxUSE_GRAPHICS_CONTEXT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsPenInfo_LinearGradient[] = { &wxluatype_wxGraphicsPenInfo, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_wxColour, &wxluatype_wxColour, &wxluatype_wxGraphicsMatrix, NULL };
static int LUACALL wxLua_wxGraphicsPenInfo_LinearGradient(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsPenInfo_LinearGradient[1] = {{ wxLua_wxGraphicsPenInfo_LinearGradient, WXLUAMETHOD_METHOD, 7, 8, s_wxluatypeArray_wxLua_wxGraphicsPenInfo_LinearGradient }};
//                    const wxGraphicsMatrix& matrix = wxNullGraphicsMatrix);
static int LUACALL wxLua_wxGraphicsPenInfo_LinearGradient(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // const wxGraphicsMatrix matrix = wxNullGraphicsMatrix
    const wxGraphicsMatrix * matrix = (argCount >= 8 ? (const wxGraphicsMatrix *)wxluaT_getuserdatatype(L, 8, wxluatype_wxGraphicsMatrix) : &wxNullGraphicsMatrix);
    // const wxColour c2
    const wxColour * c2 = (const wxColour *)wxluaT_getuserdatatype(L, 7, wxluatype_wxColour);
    // const wxColour c1
    const wxColour * c1 = (const wxColour *)wxluaT_getuserdatatype(L, 6, wxluatype_wxColour);
    // wxDouble y2
    wxDouble y2 = (wxDouble)wxlua_getnumbertype(L, 5);
    // wxDouble x2
    wxDouble x2 = (wxDouble)wxlua_getnumbertype(L, 4);
    // wxDouble y1
    wxDouble y1 = (wxDouble)wxlua_getnumbertype(L, 3);
    // wxDouble x1
    wxDouble x1 = (wxDouble)wxlua_getnumbertype(L, 2);
    // get this
    wxGraphicsPenInfo * self = (wxGraphicsPenInfo *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsPenInfo);
    // call LinearGradient
    wxGraphicsPenInfo* returns = (wxGraphicsPenInfo*)&self->LinearGradient(x1, y1, x2, y2, *c1, *c2, *matrix);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxGraphicsPenInfo);

    return 1;
}

#endif // (((wxCHECK_VERSION(3,1,1)) && (wxUSE_GRAPHICS_CONTEXT)) && (wxLUA_USE_wxColourPenBrush)) && (wxUSE_GRAPHICS_CONTEXT)

#if ((wxCHECK_VERSION(3,1,1)) && (wxUSE_GRAPHICS_CONTEXT)) && (wxUSE_GRAPHICS_CONTEXT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsPenInfo_RadialGradient1[] = { &wxluatype_wxGraphicsPenInfo, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_wxGraphicsGradientStops, &wxluatype_wxGraphicsMatrix, NULL };
static int LUACALL wxLua_wxGraphicsPenInfo_RadialGradient1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsPenInfo_RadialGradient1[1] = {{ wxLua_wxGraphicsPenInfo_RadialGradient1, WXLUAMETHOD_METHOD, 7, 8, s_wxluatypeArray_wxLua_wxGraphicsPenInfo_RadialGradient1 }};
//                    const wxGraphicsMatrix& matrix = wxNullGraphicsMatrix);
static int LUACALL wxLua_wxGraphicsPenInfo_RadialGradient1(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // const wxGraphicsMatrix matrix = wxNullGraphicsMatrix
    const wxGraphicsMatrix * matrix = (argCount >= 8 ? (const wxGraphicsMatrix *)wxluaT_getuserdatatype(L, 8, wxluatype_wxGraphicsMatrix) : &wxNullGraphicsMatrix);
    // const wxGraphicsGradientStops stops
    const wxGraphicsGradientStops * stops = (const wxGraphicsGradientStops *)wxluaT_getuserdatatype(L, 7, wxluatype_wxGraphicsGradientStops);
    // wxDouble radius
    wxDouble radius = (wxDouble)wxlua_getnumbertype(L, 6);
    // wxDouble endY
    wxDouble endY = (wxDouble)wxlua_getnumbertype(L, 5);
    // wxDouble endX
    wxDouble endX = (wxDouble)wxlua_getnumbertype(L, 4);
    // wxDouble startY
    wxDouble startY = (wxDouble)wxlua_getnumbertype(L, 3);
    // wxDouble startX
    wxDouble startX = (wxDouble)wxlua_getnumbertype(L, 2);
    // get this
    wxGraphicsPenInfo * self = (wxGraphicsPenInfo *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsPenInfo);
    // call RadialGradient
    wxGraphicsPenInfo* returns = (wxGraphicsPenInfo*)&self->RadialGradient(startX, startY, endX, endY, radius, *stops, *matrix);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxGraphicsPenInfo);

    return 1;
}

#endif // ((wxCHECK_VERSION(3,1,1)) && (wxUSE_GRAPHICS_CONTEXT)) && (wxUSE_GRAPHICS_CONTEXT)

#if (((wxCHECK_VERSION(3,1,1)) && (wxUSE_GRAPHICS_CONTEXT)) && (wxLUA_USE_wxColourPenBrush)) && (wxUSE_GRAPHICS_CONTEXT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsPenInfo_RadialGradient[] = { &wxluatype_wxGraphicsPenInfo, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_wxColour, &wxluatype_wxColour, &wxluatype_wxGraphicsMatrix, NULL };
static int LUACALL wxLua_wxGraphicsPenInfo_RadialGradient(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsPenInfo_RadialGradient[1] = {{ wxLua_wxGraphicsPenInfo_RadialGradient, WXLUAMETHOD_METHOD, 8, 9, s_wxluatypeArray_wxLua_wxGraphicsPenInfo_RadialGradient }};
//                    const wxGraphicsMatrix& matrix = wxNullGraphicsMatrix);
static int LUACALL wxLua_wxGraphicsPenInfo_RadialGradient(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // const wxGraphicsMatrix matrix = wxNullGraphicsMatrix
    const wxGraphicsMatrix * matrix = (argCount >= 9 ? (const wxGraphicsMatrix *)wxluaT_getuserdatatype(L, 9, wxluatype_wxGraphicsMatrix) : &wxNullGraphicsMatrix);
    // const wxColour cColor
    const wxColour * cColor = (const wxColour *)wxluaT_getuserdatatype(L, 8, wxluatype_wxColour);
    // const wxColour oColor
    const wxColour * oColor = (const wxColour *)wxluaT_getuserdatatype(L, 7, wxluatype_wxColour);
    // wxDouble radius
    wxDouble radius = (wxDouble)wxlua_getnumbertype(L, 6);
    // wxDouble endY
    wxDouble endY = (wxDouble)wxlua_getnumbertype(L, 5);
    // wxDouble endX
    wxDouble endX = (wxDouble)wxlua_getnumbertype(L, 4);
    // wxDouble startY
    wxDouble startY = (wxDouble)wxlua_getnumbertype(L, 3);
    // wxDouble startX
    wxDouble startX = (wxDouble)wxlua_getnumbertype(L, 2);
    // get this
    wxGraphicsPenInfo * self = (wxGraphicsPenInfo *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsPenInfo);
    // call RadialGradient
    wxGraphicsPenInfo* returns = (wxGraphicsPenInfo*)&self->RadialGradient(startX, startY, endX, endY, radius, *oColor, *cColor, *matrix);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxGraphicsPenInfo);

    return 1;
}

#endif // (((wxCHECK_VERSION(3,1,1)) && (wxUSE_GRAPHICS_CONTEXT)) && (wxLUA_USE_wxColourPenBrush)) && (wxUSE_GRAPHICS_CONTEXT)

#if ((wxCHECK_VERSION(3,1,1)) && (wxUSE_GRAPHICS_CONTEXT)) && (wxLUA_USE_wxBitmap)
static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsPenInfo_Stipple[] = { &wxluatype_wxGraphicsPenInfo, &wxluatype_wxBitmap, NULL };
static int LUACALL wxLua_wxGraphicsPenInfo_Stipple(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsPenInfo_Stipple[1] = {{ wxLua_wxGraphicsPenInfo_Stipple, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxGraphicsPenInfo_Stipple }};
//     wxGraphicsPenInfo& Stipple(const wxBitmap& stipple);
static int LUACALL wxLua_wxGraphicsPenInfo_Stipple(lua_State *L)
{
    // const wxBitmap stipple
    const wxBitmap * stipple = (const wxBitmap *)wxluaT_getuserdatatype(L, 2, wxluatype_wxBitmap);
    // get this
    wxGraphicsPenInfo * self = (wxGraphicsPenInfo *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsPenInfo);
    // call Stipple
    wxGraphicsPenInfo* returns = (wxGraphicsPenInfo*)&self->Stipple(*stipple);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxGraphicsPenInfo);

    return 1;
}

#endif // ((wxCHECK_VERSION(3,1,1)) && (wxUSE_GRAPHICS_CONTEXT)) && (wxLUA_USE_wxBitmap)

#if ((wxCHECK_VERSION(3,1,1)) && (wxUSE_GRAPHICS_CONTEXT)) && (wxLUA_USE_wxColourPenBrush)
static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsPenInfo_Style[] = { &wxluatype_wxGraphicsPenInfo, &wxluatype_TINTEGER, NULL };
static int LUACALL wxLua_wxGraphicsPenInfo_Style(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsPenInfo_Style[1] = {{ wxLua_wxGraphicsPenInfo_Style, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxGraphicsPenInfo_Style }};
//     wxGraphicsPenInfo& Style(wxPenStyle style);
static int LUACALL wxLua_wxGraphicsPenInfo_Style(lua_State *L)
{
    // wxPenStyle style
    wxPenStyle style = (wxPenStyle)wxlua_getenumtype(L, 2);
    // get this
    wxGraphicsPenInfo * self = (wxGraphicsPenInfo *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsPenInfo);
    // call Style
    wxGraphicsPenInfo* returns = (wxGraphicsPenInfo*)&self->Style(style);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxGraphicsPenInfo);

    return 1;
}

#endif // ((wxCHECK_VERSION(3,1,1)) && (wxUSE_GRAPHICS_CONTEXT)) && (wxLUA_USE_wxColourPenBrush)

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsPenInfo_Width[] = { &wxluatype_wxGraphicsPenInfo, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxGraphicsPenInfo_Width(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsPenInfo_Width[1] = {{ wxLua_wxGraphicsPenInfo_Width, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxGraphicsPenInfo_Width }};
//     wxGraphicsPenInfo& Width(wxDouble width);
static int LUACALL wxLua_wxGraphicsPenInfo_Width(lua_State *L)
{
    // wxDouble width
    wxDouble width = (wxDouble)wxlua_getnumbertype(L, 2);
    // get this
    wxGraphicsPenInfo * self = (wxGraphicsPenInfo *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsPenInfo);
    // call Width
    wxGraphicsPenInfo* returns = (wxGraphicsPenInfo*)&self->Width(width);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxGraphicsPenInfo);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsPenInfo_delete[] = { &wxluatype_wxGraphicsPenInfo, NULL };
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsPenInfo_delete[1] = {{ wxlua_userdata_delete, WXLUAMETHOD_METHOD|WXLUAMETHOD_DELETE, 1, 1, s_wxluatypeArray_wxLua_wxGraphicsPenInfo_delete }};


#if ((wxCHECK_VERSION(3,1,1)) && (wxUSE_GRAPHICS_CONTEXT)) && (wxLUA_USE_wxColourPenBrush)
static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsPenInfo_constructor1[] = { &wxluatype_wxColour, &wxluatype_TNUMBER, &wxluatype_TINTEGER, NULL };
static int LUACALL wxLua_wxGraphicsPenInfo_constructor1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsPenInfo_constructor1[1] = {{ wxLua_wxGraphicsPenInfo_constructor1, WXLUAMETHOD_CONSTRUCTOR, 1, 3, s_wxluatypeArray_wxLua_wxGraphicsPenInfo_constructor1 }};
//                       wxPenStyle style = wxPENSTYLE_SOLID);
static int LUACALL wxLua_wxGraphicsPenInfo_constructor1(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // wxPenStyle style = wxPENSTYLE_SOLID
    wxPenStyle style = (argCount >= 3 ? (wxPenStyle)wxlua_getenumtype(L, 3) : wxPENSTYLE_SOLID);
    // wxDouble width = 1.0
    wxDouble width = (argCount >= 2 ? (wxDouble)wxlua_getnumbertype(L, 2) : 1.0);
    // const wxColour colour
    const wxColour * colour = (const wxColour *)wxluaT_getuserdatatype(L, 1, wxluatype_wxColour);
    // call constructor
    wxGraphicsPenInfo* returns = new wxGraphicsPenInfo(*colour, width, style);
    // add to tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxGraphicsPenInfo);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxGraphicsPenInfo);

    return 1;
}

#endif // ((wxCHECK_VERSION(3,1,1)) && (wxUSE_GRAPHICS_CONTEXT)) && (wxLUA_USE_wxColourPenBrush)

static int LUACALL wxLua_wxGraphicsPenInfo_constructor(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsPenInfo_constructor[1] = {{ wxLua_wxGraphicsPenInfo_constructor, WXLUAMETHOD_CONSTRUCTOR, 0, 0, g_wxluaargtypeArray_None }};
//     wxGraphicsPenInfo();
static int LUACALL wxLua_wxGraphicsPenInfo_constructor(lua_State *L)
{
    // call constructor
    wxGraphicsPenInfo* returns = new wxGraphicsPenInfo();
    // add to tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxGraphicsPenInfo);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxGraphicsPenInfo);

    return 1;
}




#if (((wxCHECK_VERSION(3,1,1)) && (wxUSE_GRAPHICS_CONTEXT)) && (wxUSE_GRAPHICS_CONTEXT))||((((wxCHECK_VERSION(3,1,1)) && (wxUSE_GRAPHICS_CONTEXT)) && (wxLUA_USE_wxColourPenBrush)) && (wxUSE_GRAPHICS_CONTEXT))
// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsPenInfo_LinearGradient_overload[] =
{

#if ((wxCHECK_VERSION(3,1,1)) && (wxUSE_GRAPHICS_CONTEXT)) && (wxUSE_GRAPHICS_CONTEXT)
    { wxLua_wxGraphicsPenInfo_LinearGradient1, WXLUAMETHOD_METHOD, 6, 7, s_wxluatypeArray_wxLua_wxGraphicsPenInfo_LinearGradient1 },
#endif // ((wxCHECK_VERSION(3,1,1)) && (wxUSE_GRAPHICS_CONTEXT)) && (wxUSE_GRAPHICS_CONTEXT)

#if (((wxCHECK_VERSION(3,1,1)) && (wxUSE_GRAPHICS_CONTEXT)) && (wxLUA_USE_wxColourPenBrush)) && (wxUSE_GRAPHICS_CONTEXT)
    { wxLua_wxGraphicsPenInfo_LinearGradient, WXLUAMETHOD_METHOD, 7, 8, s_wxluatypeArray_wxLua_wxGraphicsPenInfo_LinearGradient },
#endif // (((wxCHECK_VERSION(3,1,1)) && (wxUSE_GRAPHICS_CONTEXT)) && (wxLUA_USE_wxColourPenBrush)) && (wxUSE_GRAPHICS_CONTEXT)
};
static int s_wxluafunc_wxLua_wxGraphicsPenInfo_LinearGradient_overload_count = sizeof(s_wxluafunc_wxLua_wxGraphicsPenInfo_LinearGradient_overload)/sizeof(wxLuaBindCFunc);

// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsPenInfo_RadialGradient_overload[] =
{

#if ((wxCHECK_VERSION(3,1,1)) && (wxUSE_GRAPHICS_CONTEXT)) && (wxUSE_GRAPHICS_CONTEXT)
    { wxLua_wxGraphicsPenInfo_RadialGradient1, WXLUAMETHOD_METHOD, 7, 8, s_wxluatypeArray_wxLua_wxGraphicsPenInfo_RadialGradient1 },
#endif // ((wxCHECK_VERSION(3,1,1)) && (wxUSE_GRAPHICS_CONTEXT)) && (wxUSE_GRAPHICS_CONTEXT)

#if (((wxCHECK_VERSION(3,1,1)) && (wxUSE_GRAPHICS_CONTEXT)) && (wxLUA_USE_wxColourPenBrush)) && (wxUSE_GRAPHICS_CONTEXT)
    { wxLua_wxGraphicsPenInfo_RadialGradient, WXLUAMETHOD_METHOD, 8, 9, s_wxluatypeArray_wxLua_wxGraphicsPenInfo_RadialGradient },
#endif // (((wxCHECK_VERSION(3,1,1)) && (wxUSE_GRAPHICS_CONTEXT)) && (wxLUA_USE_wxColourPenBrush)) && (wxUSE_GRAPHICS_CONTEXT)
};
static int s_wxluafunc_wxLua_wxGraphicsPenInfo_RadialGradient_overload_count = sizeof(s_wxluafunc_wxLua_wxGraphicsPenInfo_RadialGradient_overload)/sizeof(wxLuaBindCFunc);

#endif // (((wxCHECK_VERSION(3,1,1)) && (wxUSE_GRAPHICS_CONTEXT)) && (wxUSE_GRAPHICS_CONTEXT))||((((wxCHECK_VERSION(3,1,1)) && (wxUSE_GRAPHICS_CONTEXT)) && (wxLUA_USE_wxColourPenBrush)) && (wxUSE_GRAPHICS_CONTEXT))

#if (((wxCHECK_VERSION(3,1,1)) && (wxUSE_GRAPHICS_CONTEXT)) && (wxLUA_USE_wxColourPenBrush))||((wxCHECK_VERSION(3,1,1)) && (wxUSE_GRAPHICS_CONTEXT))
// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsPenInfo_constructor_overload[] =
{

#if ((wxCHECK_VERSION(3,1,1)) && (wxUSE_GRAPHICS_CONTEXT)) && (wxLUA_USE_wxColourPenBrush)
    { wxLua_wxGraphicsPenInfo_constructor1, WXLUAMETHOD_CONSTRUCTOR, 1, 3, s_wxluatypeArray_wxLua_wxGraphicsPenInfo_constructor1 },
#endif // ((wxCHECK_VERSION(3,1,1)) && (wxUSE_GRAPHICS_CONTEXT)) && (wxLUA_USE_wxColourPenBrush)
    { wxLua_wxGraphicsPenInfo_constructor, WXLUAMETHOD_CONSTRUCTOR, 0, 0, g_wxluaargtypeArray_None },
};
static int s_wxluafunc_wxLua_wxGraphicsPenInfo_constructor_overload_count = sizeof(s_wxluafunc_wxLua_wxGraphicsPenInfo_constructor_overload)/sizeof(wxLuaBindCFunc);

#endif // (((wxCHECK_VERSION(3,1,1)) && (wxUSE_GRAPHICS_CONTEXT)) && (wxLUA_USE_wxColourPenBrush))||((wxCHECK_VERSION(3,1,1)) && (wxUSE_GRAPHICS_CONTEXT))

void wxLua_wxGraphicsPenInfo_delete_function(void** p)
{
    wxGraphicsPenInfo* o = (wxGraphicsPenInfo*)(*p);
    delete o;
}

// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxGraphicsPenInfo_methods[] = {
#if ((wxCHECK_VERSION(3,1,1)) && (wxUSE_GRAPHICS_CONTEXT)) && (wxLUA_USE_wxColourPenBrush)
    { "Cap", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsPenInfo_Cap, 1, NULL },
    { "Colour", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsPenInfo_Colour, 1, NULL },
#endif // ((wxCHECK_VERSION(3,1,1)) && (wxUSE_GRAPHICS_CONTEXT)) && (wxLUA_USE_wxColourPenBrush)

    { "Dashes", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsPenInfo_Dashes, 1, NULL },

#if ((wxCHECK_VERSION(3,1,1)) && (wxUSE_GRAPHICS_CONTEXT)) && (wxLUA_USE_wxColourPenBrush)
    { "GetCap", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsPenInfo_GetCap, 1, NULL },
    { "GetColour", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsPenInfo_GetColour, 1, NULL },
#endif // ((wxCHECK_VERSION(3,1,1)) && (wxUSE_GRAPHICS_CONTEXT)) && (wxLUA_USE_wxColourPenBrush)

    { "GetDashCount", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsPenInfo_GetDashCount, 1, NULL },
    { "GetDashes", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsPenInfo_GetDashes, 1, NULL },
    { "GetEndX", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsPenInfo_GetEndX, 1, NULL },
    { "GetEndY", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsPenInfo_GetEndY, 1, NULL },
    { "GetGradientType", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsPenInfo_GetGradientType, 1, NULL },

#if ((wxCHECK_VERSION(3,1,1)) && (wxUSE_GRAPHICS_CONTEXT)) && (wxLUA_USE_wxColourPenBrush)
    { "GetJoin", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsPenInfo_GetJoin, 1, NULL },
#endif // ((wxCHECK_VERSION(3,1,1)) && (wxUSE_GRAPHICS_CONTEXT)) && (wxLUA_USE_wxColourPenBrush)

#if ((wxCHECK_VERSION(3,1,1)) && (wxUSE_GRAPHICS_CONTEXT)) && (wxUSE_GRAPHICS_CONTEXT)
    { "GetMatrix", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsPenInfo_GetMatrix, 1, NULL },
#endif // ((wxCHECK_VERSION(3,1,1)) && (wxUSE_GRAPHICS_CONTEXT)) && (wxUSE_GRAPHICS_CONTEXT)

    { "GetRadius", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsPenInfo_GetRadius, 1, NULL },
    { "GetStartX", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsPenInfo_GetStartX, 1, NULL },
    { "GetStartY", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsPenInfo_GetStartY, 1, NULL },

#if ((wxCHECK_VERSION(3,1,1)) && (wxUSE_GRAPHICS_CONTEXT)) && (wxLUA_USE_wxBitmap)
    { "GetStipple", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsPenInfo_GetStipple, 1, NULL },
#endif // ((wxCHECK_VERSION(3,1,1)) && (wxUSE_GRAPHICS_CONTEXT)) && (wxLUA_USE_wxBitmap)

#if ((wxCHECK_VERSION(3,1,1)) && (wxUSE_GRAPHICS_CONTEXT)) && (wxUSE_GRAPHICS_CONTEXT)
    { "GetStops", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsPenInfo_GetStops, 1, NULL },
#endif // ((wxCHECK_VERSION(3,1,1)) && (wxUSE_GRAPHICS_CONTEXT)) && (wxUSE_GRAPHICS_CONTEXT)

#if ((wxCHECK_VERSION(3,1,1)) && (wxUSE_GRAPHICS_CONTEXT)) && (wxLUA_USE_wxColourPenBrush)
    { "GetStyle", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsPenInfo_GetStyle, 1, NULL },
#endif // ((wxCHECK_VERSION(3,1,1)) && (wxUSE_GRAPHICS_CONTEXT)) && (wxLUA_USE_wxColourPenBrush)

    { "GetWidth", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsPenInfo_GetWidth, 1, NULL },
    { "GetX1", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsPenInfo_GetX1, 1, NULL },
    { "GetX2", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsPenInfo_GetX2, 1, NULL },
    { "GetY1", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsPenInfo_GetY1, 1, NULL },
    { "GetY2", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsPenInfo_GetY2, 1, NULL },

#if ((wxCHECK_VERSION(3,1,1)) && (wxUSE_GRAPHICS_CONTEXT)) && (wxLUA_USE_wxColourPenBrush)
    { "Join", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsPenInfo_Join, 1, NULL },
#endif // ((wxCHECK_VERSION(3,1,1)) && (wxUSE_GRAPHICS_CONTEXT)) && (wxLUA_USE_wxColourPenBrush)

#if (((wxCHECK_VERSION(3,1,1)) && (wxUSE_GRAPHICS_CONTEXT)) && (wxUSE_GRAPHICS_CONTEXT))||((((wxCHECK_VERSION(3,1,1)) && (wxUSE_GRAPHICS_CONTEXT)) && (wxLUA_USE_wxColourPenBrush)) && (wxUSE_GRAPHICS_CONTEXT))
    { "LinearGradient", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsPenInfo_LinearGradient_overload, s_wxluafunc_wxLua_wxGraphicsPenInfo_LinearGradient_overload_count, 0 },
    { "RadialGradient", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsPenInfo_RadialGradient_overload, s_wxluafunc_wxLua_wxGraphicsPenInfo_RadialGradient_overload_count, 0 },
#endif // (((wxCHECK_VERSION(3,1,1)) && (wxUSE_GRAPHICS_CONTEXT)) && (wxUSE_GRAPHICS_CONTEXT))||((((wxCHECK_VERSION(3,1,1)) && (wxUSE_GRAPHICS_CONTEXT)) && (wxLUA_USE_wxColourPenBrush)) && (wxUSE_GRAPHICS_CONTEXT))

#if ((wxCHECK_VERSION(3,1,1)) && (wxUSE_GRAPHICS_CONTEXT)) && (wxLUA_USE_wxBitmap)
    { "Stipple", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsPenInfo_Stipple, 1, NULL },
#endif // ((wxCHECK_VERSION(3,1,1)) && (wxUSE_GRAPHICS_CONTEXT)) && (wxLUA_USE_wxBitmap)

#if ((wxCHECK_VERSION(3,1,1)) && (wxUSE_GRAPHICS_CONTEXT)) && (wxLUA_USE_wxColourPenBrush)
    { "Style", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsPenInfo_Style, 1, NULL },
#endif // ((wxCHECK_VERSION(3,1,1)) && (wxUSE_GRAPHICS_CONTEXT)) && (wxLUA_USE_wxColourPenBrush)

    { "Width", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsPenInfo_Width, 1, NULL },
    { "delete", WXLUAMETHOD_METHOD|WXLUAMETHOD_DELETE, s_wxluafunc_wxLua_wxGraphicsPenInfo_delete, 1, NULL },

#if (((wxCHECK_VERSION(3,1,1)) && (wxUSE_GRAPHICS_CONTEXT)) && (wxLUA_USE_wxColourPenBrush))||((wxCHECK_VERSION(3,1,1)) && (wxUSE_GRAPHICS_CONTEXT))
    { "wxGraphicsPenInfo", WXLUAMETHOD_CONSTRUCTOR, s_wxluafunc_wxLua_wxGraphicsPenInfo_constructor_overload, s_wxluafunc_wxLua_wxGraphicsPenInfo_constructor_overload_count, 0 },
#endif // (((wxCHECK_VERSION(3,1,1)) && (wxUSE_GRAPHICS_CONTEXT)) && (wxLUA_USE_wxColourPenBrush))||((wxCHECK_VERSION(3,1,1)) && (wxUSE_GRAPHICS_CONTEXT))

    { 0, 0, 0, 0 },
};

int wxGraphicsPenInfo_methodCount = sizeof(wxGraphicsPenInfo_methods)/sizeof(wxLuaBindMethod) - 1;

#endif  // (wxCHECK_VERSION(3,1,1)) && (wxUSE_GRAPHICS_CONTEXT)


#if wxUSE_GRAPHICS_CONTEXT
// ---------------------------------------------------------------------------
// Bind class wxGraphicsPen
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxGraphicsPen'
int wxluatype_wxGraphicsPen = WXLUA_TUNKNOWN;

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsPen_delete[] = { &wxluatype_wxGraphicsPen, NULL };
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsPen_delete[1] = {{ wxlua_userdata_delete, WXLUAMETHOD_METHOD|WXLUAMETHOD_DELETE, 1, 1, s_wxluatypeArray_wxLua_wxGraphicsPen_delete }};

static int LUACALL wxLua_wxGraphicsPen_constructor(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsPen_constructor[1] = {{ wxLua_wxGraphicsPen_constructor, WXLUAMETHOD_CONSTRUCTOR, 0, 0, g_wxluaargtypeArray_None }};
//     wxGraphicsPen();
static int LUACALL wxLua_wxGraphicsPen_constructor(lua_State *L)
{
    // call constructor
    wxGraphicsPen* returns = new wxGraphicsPen();
    // add to tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxGraphicsPen);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxGraphicsPen);

    return 1;
}




void wxLua_wxGraphicsPen_delete_function(void** p)
{
    wxGraphicsPen* o = (wxGraphicsPen*)(*p);
    delete o;
}

// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxGraphicsPen_methods[] = {
    { "delete", WXLUAMETHOD_METHOD|WXLUAMETHOD_DELETE, s_wxluafunc_wxLua_wxGraphicsPen_delete, 1, NULL },
    { "wxGraphicsPen", WXLUAMETHOD_CONSTRUCTOR, s_wxluafunc_wxLua_wxGraphicsPen_constructor, 1, NULL },

    { 0, 0, 0, 0 },
};

int wxGraphicsPen_methodCount = sizeof(wxGraphicsPen_methods)/sizeof(wxLuaBindMethod) - 1;

#endif  // wxUSE_GRAPHICS_CONTEXT


#if wxUSE_GRAPHICS_CONTEXT
// ---------------------------------------------------------------------------
// Bind class wxGraphicsBrush
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxGraphicsBrush'
int wxluatype_wxGraphicsBrush = WXLUA_TUNKNOWN;

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsBrush_delete[] = { &wxluatype_wxGraphicsBrush, NULL };
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsBrush_delete[1] = {{ wxlua_userdata_delete, WXLUAMETHOD_METHOD|WXLUAMETHOD_DELETE, 1, 1, s_wxluatypeArray_wxLua_wxGraphicsBrush_delete }};

static int LUACALL wxLua_wxGraphicsBrush_constructor(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsBrush_constructor[1] = {{ wxLua_wxGraphicsBrush_constructor, WXLUAMETHOD_CONSTRUCTOR, 0, 0, g_wxluaargtypeArray_None }};
//     wxGraphicsBrush();
static int LUACALL wxLua_wxGraphicsBrush_constructor(lua_State *L)
{
    // call constructor
    wxGraphicsBrush* returns = new wxGraphicsBrush();
    // add to tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxGraphicsBrush);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxGraphicsBrush);

    return 1;
}




void wxLua_wxGraphicsBrush_delete_function(void** p)
{
    wxGraphicsBrush* o = (wxGraphicsBrush*)(*p);
    delete o;
}

// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxGraphicsBrush_methods[] = {
    { "delete", WXLUAMETHOD_METHOD|WXLUAMETHOD_DELETE, s_wxluafunc_wxLua_wxGraphicsBrush_delete, 1, NULL },
    { "wxGraphicsBrush", WXLUAMETHOD_CONSTRUCTOR, s_wxluafunc_wxLua_wxGraphicsBrush_constructor, 1, NULL },

    { 0, 0, 0, 0 },
};

int wxGraphicsBrush_methodCount = sizeof(wxGraphicsBrush_methods)/sizeof(wxLuaBindMethod) - 1;

#endif  // wxUSE_GRAPHICS_CONTEXT


#if wxUSE_GRAPHICS_CONTEXT
// ---------------------------------------------------------------------------
// Bind class wxGraphicsFont
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxGraphicsFont'
int wxluatype_wxGraphicsFont = WXLUA_TUNKNOWN;

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsFont_delete[] = { &wxluatype_wxGraphicsFont, NULL };
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsFont_delete[1] = {{ wxlua_userdata_delete, WXLUAMETHOD_METHOD|WXLUAMETHOD_DELETE, 1, 1, s_wxluatypeArray_wxLua_wxGraphicsFont_delete }};

static int LUACALL wxLua_wxGraphicsFont_constructor(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsFont_constructor[1] = {{ wxLua_wxGraphicsFont_constructor, WXLUAMETHOD_CONSTRUCTOR, 0, 0, g_wxluaargtypeArray_None }};
//     wxGraphicsFont();
static int LUACALL wxLua_wxGraphicsFont_constructor(lua_State *L)
{
    // call constructor
    wxGraphicsFont* returns = new wxGraphicsFont();
    // add to tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxGraphicsFont);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxGraphicsFont);

    return 1;
}




void wxLua_wxGraphicsFont_delete_function(void** p)
{
    wxGraphicsFont* o = (wxGraphicsFont*)(*p);
    delete o;
}

// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxGraphicsFont_methods[] = {
    { "delete", WXLUAMETHOD_METHOD|WXLUAMETHOD_DELETE, s_wxluafunc_wxLua_wxGraphicsFont_delete, 1, NULL },
    { "wxGraphicsFont", WXLUAMETHOD_CONSTRUCTOR, s_wxluafunc_wxLua_wxGraphicsFont_constructor, 1, NULL },

    { 0, 0, 0, 0 },
};

int wxGraphicsFont_methodCount = sizeof(wxGraphicsFont_methods)/sizeof(wxLuaBindMethod) - 1;

#endif  // wxUSE_GRAPHICS_CONTEXT


#if wxUSE_GRAPHICS_CONTEXT
// ---------------------------------------------------------------------------
// Bind class wxGraphicsBitmap
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxGraphicsBitmap'
int wxluatype_wxGraphicsBitmap = WXLUA_TUNKNOWN;

#if ((wxUSE_GRAPHICS_CONTEXT) && (wxUSE_IMAGE)) && (wxLUA_USE_wxImage && wxUSE_IMAGE)
static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsBitmap_ConvertToImage[] = { &wxluatype_wxGraphicsBitmap, NULL };
static int LUACALL wxLua_wxGraphicsBitmap_ConvertToImage(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsBitmap_ConvertToImage[1] = {{ wxLua_wxGraphicsBitmap_ConvertToImage, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxGraphicsBitmap_ConvertToImage }};
//     wxImage ConvertToImage() const;
static int LUACALL wxLua_wxGraphicsBitmap_ConvertToImage(lua_State *L)
{
    // get this
    wxGraphicsBitmap * self = (wxGraphicsBitmap *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsBitmap);
    // call ConvertToImage
    // allocate a new object using the copy constructor
    wxImage* returns = new wxImage(self->ConvertToImage());
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxImage);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxImage);

    return 1;
}

#endif // ((wxUSE_GRAPHICS_CONTEXT) && (wxUSE_IMAGE)) && (wxLUA_USE_wxImage && wxUSE_IMAGE)

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsBitmap_GetNativeBitmap[] = { &wxluatype_wxGraphicsBitmap, NULL };
static int LUACALL wxLua_wxGraphicsBitmap_GetNativeBitmap(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsBitmap_GetNativeBitmap[1] = {{ wxLua_wxGraphicsBitmap_GetNativeBitmap, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxGraphicsBitmap_GetNativeBitmap }};
//     void* GetNativeBitmap() const;
static int LUACALL wxLua_wxGraphicsBitmap_GetNativeBitmap(lua_State *L)
{
    // get this
    wxGraphicsBitmap * self = (wxGraphicsBitmap *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsBitmap);
    // call GetNativeBitmap
    void* returns = (void*)self->GetNativeBitmap();
    // push the result pointer
    lua_pushlightuserdata(L, (void *)returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsBitmap_delete[] = { &wxluatype_wxGraphicsBitmap, NULL };
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsBitmap_delete[1] = {{ wxlua_userdata_delete, WXLUAMETHOD_METHOD|WXLUAMETHOD_DELETE, 1, 1, s_wxluatypeArray_wxLua_wxGraphicsBitmap_delete }};

static int LUACALL wxLua_wxGraphicsBitmap_constructor(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsBitmap_constructor[1] = {{ wxLua_wxGraphicsBitmap_constructor, WXLUAMETHOD_CONSTRUCTOR, 0, 0, g_wxluaargtypeArray_None }};
//     wxGraphicsBitmap();
static int LUACALL wxLua_wxGraphicsBitmap_constructor(lua_State *L)
{
    // call constructor
    wxGraphicsBitmap* returns = new wxGraphicsBitmap();
    // add to tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxGraphicsBitmap);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxGraphicsBitmap);

    return 1;
}




void wxLua_wxGraphicsBitmap_delete_function(void** p)
{
    wxGraphicsBitmap* o = (wxGraphicsBitmap*)(*p);
    delete o;
}

// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxGraphicsBitmap_methods[] = {
#if ((wxUSE_GRAPHICS_CONTEXT) && (wxUSE_IMAGE)) && (wxLUA_USE_wxImage && wxUSE_IMAGE)
    { "ConvertToImage", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsBitmap_ConvertToImage, 1, NULL },
#endif // ((wxUSE_GRAPHICS_CONTEXT) && (wxUSE_IMAGE)) && (wxLUA_USE_wxImage && wxUSE_IMAGE)

    { "GetNativeBitmap", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsBitmap_GetNativeBitmap, 1, NULL },
    { "delete", WXLUAMETHOD_METHOD|WXLUAMETHOD_DELETE, s_wxluafunc_wxLua_wxGraphicsBitmap_delete, 1, NULL },
    { "wxGraphicsBitmap", WXLUAMETHOD_CONSTRUCTOR, s_wxluafunc_wxLua_wxGraphicsBitmap_constructor, 1, NULL },

    { 0, 0, 0, 0 },
};

int wxGraphicsBitmap_methodCount = sizeof(wxGraphicsBitmap_methods)/sizeof(wxLuaBindMethod) - 1;

#endif  // wxUSE_GRAPHICS_CONTEXT


#if wxUSE_GRAPHICS_CONTEXT
// ---------------------------------------------------------------------------
// Bind class wxGraphicsMatrix
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxGraphicsMatrix'
int wxluatype_wxGraphicsMatrix = WXLUA_TUNKNOWN;

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsMatrix_Concat1[] = { &wxluatype_wxGraphicsMatrix, &wxluatype_wxGraphicsMatrix, NULL };
static int LUACALL wxLua_wxGraphicsMatrix_Concat1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsMatrix_Concat1[1] = {{ wxLua_wxGraphicsMatrix_Concat1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxGraphicsMatrix_Concat1 }};
//     void Concat( const wxGraphicsMatrix &t );
static int LUACALL wxLua_wxGraphicsMatrix_Concat1(lua_State *L)
{
    // const wxGraphicsMatrix t
    const wxGraphicsMatrix * t = (const wxGraphicsMatrix *)wxluaT_getuserdatatype(L, 2, wxluatype_wxGraphicsMatrix);
    // get this
    wxGraphicsMatrix * self = (wxGraphicsMatrix *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsMatrix);
    // call Concat
    self->Concat(*t);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsMatrix_Concat[] = { &wxluatype_wxGraphicsMatrix, &wxluatype_wxGraphicsMatrix, NULL };
static int LUACALL wxLua_wxGraphicsMatrix_Concat(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsMatrix_Concat[1] = {{ wxLua_wxGraphicsMatrix_Concat, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxGraphicsMatrix_Concat }};
//     virtual void Concat( const wxGraphicsMatrix *t );
static int LUACALL wxLua_wxGraphicsMatrix_Concat(lua_State *L)
{
    // const wxGraphicsMatrix t
    const wxGraphicsMatrix * t = (const wxGraphicsMatrix *)wxluaT_getuserdatatype(L, 2, wxluatype_wxGraphicsMatrix);
    // get this
    wxGraphicsMatrix * self = (wxGraphicsMatrix *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsMatrix);
    // call Concat
    self->Concat(t);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsMatrix_Get[] = { &wxluatype_wxGraphicsMatrix, &wxluatype_TLIGHTUSERDATA, &wxluatype_TLIGHTUSERDATA, &wxluatype_TLIGHTUSERDATA, &wxluatype_TLIGHTUSERDATA, &wxluatype_TLIGHTUSERDATA, &wxluatype_TLIGHTUSERDATA, NULL };
static int LUACALL wxLua_wxGraphicsMatrix_Get(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsMatrix_Get[1] = {{ wxLua_wxGraphicsMatrix_Get, WXLUAMETHOD_METHOD, 1, 7, s_wxluatypeArray_wxLua_wxGraphicsMatrix_Get }};
//                      wxDouble* d=NULL, wxDouble* tx=NULL, wxDouble* ty=NULL) const;
static int LUACALL wxLua_wxGraphicsMatrix_Get(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // wxDouble ty = NULL
    wxDouble * ty = (argCount >= 7 ? (wxDouble *)wxlua_touserdata(L, 7) : NULL);
    // wxDouble tx = NULL
    wxDouble * tx = (argCount >= 6 ? (wxDouble *)wxlua_touserdata(L, 6) : NULL);
    // wxDouble d = NULL
    wxDouble * d = (argCount >= 5 ? (wxDouble *)wxlua_touserdata(L, 5) : NULL);
    // wxDouble c = NULL
    wxDouble * c = (argCount >= 4 ? (wxDouble *)wxlua_touserdata(L, 4) : NULL);
    // wxDouble b = NULL
    wxDouble * b = (argCount >= 3 ? (wxDouble *)wxlua_touserdata(L, 3) : NULL);
    // wxDouble a = NULL
    wxDouble * a = (argCount >= 2 ? (wxDouble *)wxlua_touserdata(L, 2) : NULL);
    // get this
    wxGraphicsMatrix * self = (wxGraphicsMatrix *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsMatrix);
    // call Get
    self->Get(a, b, c, d, tx, ty);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsMatrix_GetNativeMatrix[] = { &wxluatype_wxGraphicsMatrix, NULL };
static int LUACALL wxLua_wxGraphicsMatrix_GetNativeMatrix(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsMatrix_GetNativeMatrix[1] = {{ wxLua_wxGraphicsMatrix_GetNativeMatrix, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxGraphicsMatrix_GetNativeMatrix }};
//     virtual void * GetNativeMatrix() const;
static int LUACALL wxLua_wxGraphicsMatrix_GetNativeMatrix(lua_State *L)
{
    // get this
    wxGraphicsMatrix * self = (wxGraphicsMatrix *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsMatrix);
    // call GetNativeMatrix
    void* returns = (void*)self->GetNativeMatrix();
    // push the result pointer
    lua_pushlightuserdata(L, (void *)returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsMatrix_Invert[] = { &wxluatype_wxGraphicsMatrix, NULL };
static int LUACALL wxLua_wxGraphicsMatrix_Invert(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsMatrix_Invert[1] = {{ wxLua_wxGraphicsMatrix_Invert, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxGraphicsMatrix_Invert }};
//     virtual void Invert();
static int LUACALL wxLua_wxGraphicsMatrix_Invert(lua_State *L)
{
    // get this
    wxGraphicsMatrix * self = (wxGraphicsMatrix *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsMatrix);
    // call Invert
    self->Invert();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsMatrix_IsEqual1[] = { &wxluatype_wxGraphicsMatrix, &wxluatype_wxGraphicsMatrix, NULL };
static int LUACALL wxLua_wxGraphicsMatrix_IsEqual1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsMatrix_IsEqual1[1] = {{ wxLua_wxGraphicsMatrix_IsEqual1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxGraphicsMatrix_IsEqual1 }};
//     bool IsEqual( const wxGraphicsMatrix& t) const;
static int LUACALL wxLua_wxGraphicsMatrix_IsEqual1(lua_State *L)
{
    // const wxGraphicsMatrix t
    const wxGraphicsMatrix * t = (const wxGraphicsMatrix *)wxluaT_getuserdatatype(L, 2, wxluatype_wxGraphicsMatrix);
    // get this
    wxGraphicsMatrix * self = (wxGraphicsMatrix *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsMatrix);
    // call IsEqual
    bool returns = (self->IsEqual(*t));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsMatrix_IsEqual[] = { &wxluatype_wxGraphicsMatrix, &wxluatype_wxGraphicsMatrix, NULL };
static int LUACALL wxLua_wxGraphicsMatrix_IsEqual(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsMatrix_IsEqual[1] = {{ wxLua_wxGraphicsMatrix_IsEqual, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxGraphicsMatrix_IsEqual }};
//     virtual bool IsEqual( const wxGraphicsMatrix* t) const;
static int LUACALL wxLua_wxGraphicsMatrix_IsEqual(lua_State *L)
{
    // const wxGraphicsMatrix t
    const wxGraphicsMatrix * t = (const wxGraphicsMatrix *)wxluaT_getuserdatatype(L, 2, wxluatype_wxGraphicsMatrix);
    // get this
    wxGraphicsMatrix * self = (wxGraphicsMatrix *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsMatrix);
    // call IsEqual
    bool returns = (self->IsEqual(t));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsMatrix_IsIdentity[] = { &wxluatype_wxGraphicsMatrix, NULL };
static int LUACALL wxLua_wxGraphicsMatrix_IsIdentity(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsMatrix_IsIdentity[1] = {{ wxLua_wxGraphicsMatrix_IsIdentity, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxGraphicsMatrix_IsIdentity }};
//     virtual bool IsIdentity() const;
static int LUACALL wxLua_wxGraphicsMatrix_IsIdentity(lua_State *L)
{
    // get this
    wxGraphicsMatrix * self = (wxGraphicsMatrix *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsMatrix);
    // call IsIdentity
    bool returns = (self->IsIdentity());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsMatrix_Rotate[] = { &wxluatype_wxGraphicsMatrix, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxGraphicsMatrix_Rotate(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsMatrix_Rotate[1] = {{ wxLua_wxGraphicsMatrix_Rotate, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxGraphicsMatrix_Rotate }};
//     virtual void Rotate( wxDouble angle );
static int LUACALL wxLua_wxGraphicsMatrix_Rotate(lua_State *L)
{
    // wxDouble angle
    wxDouble angle = (wxDouble)wxlua_getnumbertype(L, 2);
    // get this
    wxGraphicsMatrix * self = (wxGraphicsMatrix *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsMatrix);
    // call Rotate
    self->Rotate(angle);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsMatrix_Scale[] = { &wxluatype_wxGraphicsMatrix, &wxluatype_TNUMBER, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxGraphicsMatrix_Scale(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsMatrix_Scale[1] = {{ wxLua_wxGraphicsMatrix_Scale, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxGraphicsMatrix_Scale }};
//     virtual void Scale( wxDouble xScale , wxDouble yScale );
static int LUACALL wxLua_wxGraphicsMatrix_Scale(lua_State *L)
{
    // wxDouble yScale
    wxDouble yScale = (wxDouble)wxlua_getnumbertype(L, 3);
    // wxDouble xScale
    wxDouble xScale = (wxDouble)wxlua_getnumbertype(L, 2);
    // get this
    wxGraphicsMatrix * self = (wxGraphicsMatrix *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsMatrix);
    // call Scale
    self->Scale(xScale, yScale);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsMatrix_Set[] = { &wxluatype_wxGraphicsMatrix, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxGraphicsMatrix_Set(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsMatrix_Set[1] = {{ wxLua_wxGraphicsMatrix_Set, WXLUAMETHOD_METHOD, 1, 7, s_wxluatypeArray_wxLua_wxGraphicsMatrix_Set }};
//         wxDouble tx=0.0, wxDouble ty=0.0);
static int LUACALL wxLua_wxGraphicsMatrix_Set(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // wxDouble ty = 0.0
    wxDouble ty = (argCount >= 7 ? (wxDouble)wxlua_getnumbertype(L, 7) : 0.0);
    // wxDouble tx = 0.0
    wxDouble tx = (argCount >= 6 ? (wxDouble)wxlua_getnumbertype(L, 6) : 0.0);
    // wxDouble d = 1.0
    wxDouble d = (argCount >= 5 ? (wxDouble)wxlua_getnumbertype(L, 5) : 1.0);
    // wxDouble c = 0.0
    wxDouble c = (argCount >= 4 ? (wxDouble)wxlua_getnumbertype(L, 4) : 0.0);
    // wxDouble b = 0.0
    wxDouble b = (argCount >= 3 ? (wxDouble)wxlua_getnumbertype(L, 3) : 0.0);
    // wxDouble a = 1.0
    wxDouble a = (argCount >= 2 ? (wxDouble)wxlua_getnumbertype(L, 2) : 1.0);
    // get this
    wxGraphicsMatrix * self = (wxGraphicsMatrix *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsMatrix);
    // call Set
    self->Set(a, b, c, d, tx, ty);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsMatrix_TransformDistance[] = { &wxluatype_wxGraphicsMatrix, &wxluatype_TLIGHTUSERDATA, &wxluatype_TLIGHTUSERDATA, NULL };
static int LUACALL wxLua_wxGraphicsMatrix_TransformDistance(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsMatrix_TransformDistance[1] = {{ wxLua_wxGraphicsMatrix_TransformDistance, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxGraphicsMatrix_TransformDistance }};
//     virtual void TransformDistance( wxDouble *dx, wxDouble *dy ) const;
static int LUACALL wxLua_wxGraphicsMatrix_TransformDistance(lua_State *L)
{
    // wxDouble dy
    wxDouble * dy = (wxDouble *)wxlua_touserdata(L, 3);
    // wxDouble dx
    wxDouble * dx = (wxDouble *)wxlua_touserdata(L, 2);
    // get this
    wxGraphicsMatrix * self = (wxGraphicsMatrix *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsMatrix);
    // call TransformDistance
    self->TransformDistance(dx, dy);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsMatrix_TransformPoint[] = { &wxluatype_wxGraphicsMatrix, &wxluatype_TLIGHTUSERDATA, &wxluatype_TLIGHTUSERDATA, NULL };
static int LUACALL wxLua_wxGraphicsMatrix_TransformPoint(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsMatrix_TransformPoint[1] = {{ wxLua_wxGraphicsMatrix_TransformPoint, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxGraphicsMatrix_TransformPoint }};
//     virtual void TransformPoint( wxDouble *x, wxDouble *y ) const;
static int LUACALL wxLua_wxGraphicsMatrix_TransformPoint(lua_State *L)
{
    // wxDouble y
    wxDouble * y = (wxDouble *)wxlua_touserdata(L, 3);
    // wxDouble x
    wxDouble * x = (wxDouble *)wxlua_touserdata(L, 2);
    // get this
    wxGraphicsMatrix * self = (wxGraphicsMatrix *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsMatrix);
    // call TransformPoint
    self->TransformPoint(x, y);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsMatrix_Translate[] = { &wxluatype_wxGraphicsMatrix, &wxluatype_TNUMBER, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxGraphicsMatrix_Translate(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsMatrix_Translate[1] = {{ wxLua_wxGraphicsMatrix_Translate, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxGraphicsMatrix_Translate }};
//     virtual void Translate( wxDouble dx , wxDouble dy );
static int LUACALL wxLua_wxGraphicsMatrix_Translate(lua_State *L)
{
    // wxDouble dy
    wxDouble dy = (wxDouble)wxlua_getnumbertype(L, 3);
    // wxDouble dx
    wxDouble dx = (wxDouble)wxlua_getnumbertype(L, 2);
    // get this
    wxGraphicsMatrix * self = (wxGraphicsMatrix *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsMatrix);
    // call Translate
    self->Translate(dx, dy);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsMatrix_delete[] = { &wxluatype_wxGraphicsMatrix, NULL };
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsMatrix_delete[1] = {{ wxlua_userdata_delete, WXLUAMETHOD_METHOD|WXLUAMETHOD_DELETE, 1, 1, s_wxluatypeArray_wxLua_wxGraphicsMatrix_delete }};

static int LUACALL wxLua_wxGraphicsMatrix_constructor(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsMatrix_constructor[1] = {{ wxLua_wxGraphicsMatrix_constructor, WXLUAMETHOD_CONSTRUCTOR, 0, 0, g_wxluaargtypeArray_None }};
//     wxGraphicsMatrix();
static int LUACALL wxLua_wxGraphicsMatrix_constructor(lua_State *L)
{
    // call constructor
    wxGraphicsMatrix* returns = new wxGraphicsMatrix();
    // add to tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxGraphicsMatrix);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxGraphicsMatrix);

    return 1;
}




#if (wxUSE_GRAPHICS_CONTEXT)
// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsMatrix_Concat_overload[] =
{
    { wxLua_wxGraphicsMatrix_Concat1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxGraphicsMatrix_Concat1 },
    { wxLua_wxGraphicsMatrix_Concat, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxGraphicsMatrix_Concat },
};
static int s_wxluafunc_wxLua_wxGraphicsMatrix_Concat_overload_count = sizeof(s_wxluafunc_wxLua_wxGraphicsMatrix_Concat_overload)/sizeof(wxLuaBindCFunc);

// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsMatrix_IsEqual_overload[] =
{
    { wxLua_wxGraphicsMatrix_IsEqual1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxGraphicsMatrix_IsEqual1 },
    { wxLua_wxGraphicsMatrix_IsEqual, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxGraphicsMatrix_IsEqual },
};
static int s_wxluafunc_wxLua_wxGraphicsMatrix_IsEqual_overload_count = sizeof(s_wxluafunc_wxLua_wxGraphicsMatrix_IsEqual_overload)/sizeof(wxLuaBindCFunc);

#endif // (wxUSE_GRAPHICS_CONTEXT)

void wxLua_wxGraphicsMatrix_delete_function(void** p)
{
    wxGraphicsMatrix* o = (wxGraphicsMatrix*)(*p);
    delete o;
}

// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxGraphicsMatrix_methods[] = {
#if (wxUSE_GRAPHICS_CONTEXT)
    { "Concat", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsMatrix_Concat_overload, s_wxluafunc_wxLua_wxGraphicsMatrix_Concat_overload_count, 0 },
#endif // (wxUSE_GRAPHICS_CONTEXT)

    { "Get", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsMatrix_Get, 1, NULL },
    { "GetNativeMatrix", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsMatrix_GetNativeMatrix, 1, NULL },
    { "Invert", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsMatrix_Invert, 1, NULL },

#if (wxUSE_GRAPHICS_CONTEXT)
    { "IsEqual", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsMatrix_IsEqual_overload, s_wxluafunc_wxLua_wxGraphicsMatrix_IsEqual_overload_count, 0 },
#endif // (wxUSE_GRAPHICS_CONTEXT)

    { "IsIdentity", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsMatrix_IsIdentity, 1, NULL },
    { "Rotate", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsMatrix_Rotate, 1, NULL },
    { "Scale", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsMatrix_Scale, 1, NULL },
    { "Set", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsMatrix_Set, 1, NULL },
    { "TransformDistance", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsMatrix_TransformDistance, 1, NULL },
    { "TransformPoint", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsMatrix_TransformPoint, 1, NULL },
    { "Translate", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsMatrix_Translate, 1, NULL },
    { "delete", WXLUAMETHOD_METHOD|WXLUAMETHOD_DELETE, s_wxluafunc_wxLua_wxGraphicsMatrix_delete, 1, NULL },
    { "wxGraphicsMatrix", WXLUAMETHOD_CONSTRUCTOR, s_wxluafunc_wxLua_wxGraphicsMatrix_constructor, 1, NULL },

    { 0, 0, 0, 0 },
};

int wxGraphicsMatrix_methodCount = sizeof(wxGraphicsMatrix_methods)/sizeof(wxLuaBindMethod) - 1;

#endif  // wxUSE_GRAPHICS_CONTEXT


#if wxUSE_GRAPHICS_CONTEXT
// ---------------------------------------------------------------------------
// Bind class wxGraphicsPath
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxGraphicsPath'
int wxluatype_wxGraphicsPath = WXLUA_TUNKNOWN;

#if (wxLUA_USE_Geometry && wxUSE_GEOMETRY) && (wxUSE_GRAPHICS_CONTEXT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsPath_AddArc1[] = { &wxluatype_wxGraphicsPath, &wxluatype_wxPoint2DDouble, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TBOOLEAN, NULL };
static int LUACALL wxLua_wxGraphicsPath_AddArc1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsPath_AddArc1[1] = {{ wxLua_wxGraphicsPath_AddArc1, WXLUAMETHOD_METHOD, 6, 6, s_wxluatypeArray_wxLua_wxGraphicsPath_AddArc1 }};
//     void AddArc( const wxPoint2DDouble& c, wxDouble r, wxDouble startAngle, wxDouble endAngle, bool clockwise);
static int LUACALL wxLua_wxGraphicsPath_AddArc1(lua_State *L)
{
    // bool clockwise
    bool clockwise = wxlua_getbooleantype(L, 6);
    // wxDouble endAngle
    wxDouble endAngle = (wxDouble)wxlua_getnumbertype(L, 5);
    // wxDouble startAngle
    wxDouble startAngle = (wxDouble)wxlua_getnumbertype(L, 4);
    // wxDouble r
    wxDouble r = (wxDouble)wxlua_getnumbertype(L, 3);
    // const wxPoint2DDouble c
    const wxPoint2DDouble * c = (const wxPoint2DDouble *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPoint2DDouble);
    // get this
    wxGraphicsPath * self = (wxGraphicsPath *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsPath);
    // call AddArc
    self->AddArc(*c, r, startAngle, endAngle, clockwise);

    return 0;
}

#endif // (wxLUA_USE_Geometry && wxUSE_GEOMETRY) && (wxUSE_GRAPHICS_CONTEXT)

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsPath_AddArc[] = { &wxluatype_wxGraphicsPath, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TBOOLEAN, NULL };
static int LUACALL wxLua_wxGraphicsPath_AddArc(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsPath_AddArc[1] = {{ wxLua_wxGraphicsPath_AddArc, WXLUAMETHOD_METHOD, 7, 7, s_wxluatypeArray_wxLua_wxGraphicsPath_AddArc }};
//     virtual void AddArc( wxDouble x, wxDouble y, wxDouble r, wxDouble startAngle, wxDouble endAngle, bool clockwise );
static int LUACALL wxLua_wxGraphicsPath_AddArc(lua_State *L)
{
    // bool clockwise
    bool clockwise = wxlua_getbooleantype(L, 7);
    // wxDouble endAngle
    wxDouble endAngle = (wxDouble)wxlua_getnumbertype(L, 6);
    // wxDouble startAngle
    wxDouble startAngle = (wxDouble)wxlua_getnumbertype(L, 5);
    // wxDouble r
    wxDouble r = (wxDouble)wxlua_getnumbertype(L, 4);
    // wxDouble y
    wxDouble y = (wxDouble)wxlua_getnumbertype(L, 3);
    // wxDouble x
    wxDouble x = (wxDouble)wxlua_getnumbertype(L, 2);
    // get this
    wxGraphicsPath * self = (wxGraphicsPath *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsPath);
    // call AddArc
    self->AddArc(x, y, r, startAngle, endAngle, clockwise);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsPath_AddArcToPoint[] = { &wxluatype_wxGraphicsPath, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxGraphicsPath_AddArcToPoint(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsPath_AddArcToPoint[1] = {{ wxLua_wxGraphicsPath_AddArcToPoint, WXLUAMETHOD_METHOD, 6, 6, s_wxluatypeArray_wxLua_wxGraphicsPath_AddArcToPoint }};
//     virtual void AddArcToPoint( wxDouble x1, wxDouble y1 , wxDouble x2, wxDouble y2, wxDouble r );
static int LUACALL wxLua_wxGraphicsPath_AddArcToPoint(lua_State *L)
{
    // wxDouble r
    wxDouble r = (wxDouble)wxlua_getnumbertype(L, 6);
    // wxDouble y2
    wxDouble y2 = (wxDouble)wxlua_getnumbertype(L, 5);
    // wxDouble x2
    wxDouble x2 = (wxDouble)wxlua_getnumbertype(L, 4);
    // wxDouble y1
    wxDouble y1 = (wxDouble)wxlua_getnumbertype(L, 3);
    // wxDouble x1
    wxDouble x1 = (wxDouble)wxlua_getnumbertype(L, 2);
    // get this
    wxGraphicsPath * self = (wxGraphicsPath *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsPath);
    // call AddArcToPoint
    self->AddArcToPoint(x1, y1, x2, y2, r);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsPath_AddCircle[] = { &wxluatype_wxGraphicsPath, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxGraphicsPath_AddCircle(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsPath_AddCircle[1] = {{ wxLua_wxGraphicsPath_AddCircle, WXLUAMETHOD_METHOD, 4, 4, s_wxluatypeArray_wxLua_wxGraphicsPath_AddCircle }};
//     virtual void AddCircle( wxDouble x, wxDouble y, wxDouble r );
static int LUACALL wxLua_wxGraphicsPath_AddCircle(lua_State *L)
{
    // wxDouble r
    wxDouble r = (wxDouble)wxlua_getnumbertype(L, 4);
    // wxDouble y
    wxDouble y = (wxDouble)wxlua_getnumbertype(L, 3);
    // wxDouble x
    wxDouble x = (wxDouble)wxlua_getnumbertype(L, 2);
    // get this
    wxGraphicsPath * self = (wxGraphicsPath *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsPath);
    // call AddCircle
    self->AddCircle(x, y, r);

    return 0;
}


#if (wxLUA_USE_Geometry && wxUSE_GEOMETRY) && (wxUSE_GRAPHICS_CONTEXT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsPath_AddCurveToPoint1[] = { &wxluatype_wxGraphicsPath, &wxluatype_wxPoint2DDouble, &wxluatype_wxPoint2DDouble, &wxluatype_wxPoint2DDouble, NULL };
static int LUACALL wxLua_wxGraphicsPath_AddCurveToPoint1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsPath_AddCurveToPoint1[1] = {{ wxLua_wxGraphicsPath_AddCurveToPoint1, WXLUAMETHOD_METHOD, 4, 4, s_wxluatypeArray_wxLua_wxGraphicsPath_AddCurveToPoint1 }};
//     void AddCurveToPoint( const wxPoint2DDouble& c1, const wxPoint2DDouble& c2, const wxPoint2DDouble& e);
static int LUACALL wxLua_wxGraphicsPath_AddCurveToPoint1(lua_State *L)
{
    // const wxPoint2DDouble e
    const wxPoint2DDouble * e = (const wxPoint2DDouble *)wxluaT_getuserdatatype(L, 4, wxluatype_wxPoint2DDouble);
    // const wxPoint2DDouble c2
    const wxPoint2DDouble * c2 = (const wxPoint2DDouble *)wxluaT_getuserdatatype(L, 3, wxluatype_wxPoint2DDouble);
    // const wxPoint2DDouble c1
    const wxPoint2DDouble * c1 = (const wxPoint2DDouble *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPoint2DDouble);
    // get this
    wxGraphicsPath * self = (wxGraphicsPath *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsPath);
    // call AddCurveToPoint
    self->AddCurveToPoint(*c1, *c2, *e);

    return 0;
}

#endif // (wxLUA_USE_Geometry && wxUSE_GEOMETRY) && (wxUSE_GRAPHICS_CONTEXT)

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsPath_AddCurveToPoint[] = { &wxluatype_wxGraphicsPath, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxGraphicsPath_AddCurveToPoint(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsPath_AddCurveToPoint[1] = {{ wxLua_wxGraphicsPath_AddCurveToPoint, WXLUAMETHOD_METHOD, 7, 7, s_wxluatypeArray_wxLua_wxGraphicsPath_AddCurveToPoint }};
//     virtual void AddCurveToPoint( wxDouble cx1, wxDouble cy1, wxDouble cx2, wxDouble cy2, wxDouble x, wxDouble y );
static int LUACALL wxLua_wxGraphicsPath_AddCurveToPoint(lua_State *L)
{
    // wxDouble y
    wxDouble y = (wxDouble)wxlua_getnumbertype(L, 7);
    // wxDouble x
    wxDouble x = (wxDouble)wxlua_getnumbertype(L, 6);
    // wxDouble cy2
    wxDouble cy2 = (wxDouble)wxlua_getnumbertype(L, 5);
    // wxDouble cx2
    wxDouble cx2 = (wxDouble)wxlua_getnumbertype(L, 4);
    // wxDouble cy1
    wxDouble cy1 = (wxDouble)wxlua_getnumbertype(L, 3);
    // wxDouble cx1
    wxDouble cx1 = (wxDouble)wxlua_getnumbertype(L, 2);
    // get this
    wxGraphicsPath * self = (wxGraphicsPath *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsPath);
    // call AddCurveToPoint
    self->AddCurveToPoint(cx1, cy1, cx2, cy2, x, y);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsPath_AddEllipse[] = { &wxluatype_wxGraphicsPath, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxGraphicsPath_AddEllipse(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsPath_AddEllipse[1] = {{ wxLua_wxGraphicsPath_AddEllipse, WXLUAMETHOD_METHOD, 5, 5, s_wxluatypeArray_wxLua_wxGraphicsPath_AddEllipse }};
//     virtual void AddEllipse( wxDouble x, wxDouble y, wxDouble w, wxDouble h);
static int LUACALL wxLua_wxGraphicsPath_AddEllipse(lua_State *L)
{
    // wxDouble h
    wxDouble h = (wxDouble)wxlua_getnumbertype(L, 5);
    // wxDouble w
    wxDouble w = (wxDouble)wxlua_getnumbertype(L, 4);
    // wxDouble y
    wxDouble y = (wxDouble)wxlua_getnumbertype(L, 3);
    // wxDouble x
    wxDouble x = (wxDouble)wxlua_getnumbertype(L, 2);
    // get this
    wxGraphicsPath * self = (wxGraphicsPath *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsPath);
    // call AddEllipse
    self->AddEllipse(x, y, w, h);

    return 0;
}


#if (wxLUA_USE_Geometry && wxUSE_GEOMETRY) && (wxUSE_GRAPHICS_CONTEXT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsPath_AddLineToPoint1[] = { &wxluatype_wxGraphicsPath, &wxluatype_wxPoint2DDouble, NULL };
static int LUACALL wxLua_wxGraphicsPath_AddLineToPoint1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsPath_AddLineToPoint1[1] = {{ wxLua_wxGraphicsPath_AddLineToPoint1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxGraphicsPath_AddLineToPoint1 }};
//     void AddLineToPoint( const wxPoint2DDouble& p);
static int LUACALL wxLua_wxGraphicsPath_AddLineToPoint1(lua_State *L)
{
    // const wxPoint2DDouble p
    const wxPoint2DDouble * p = (const wxPoint2DDouble *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPoint2DDouble);
    // get this
    wxGraphicsPath * self = (wxGraphicsPath *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsPath);
    // call AddLineToPoint
    self->AddLineToPoint(*p);

    return 0;
}

#endif // (wxLUA_USE_Geometry && wxUSE_GEOMETRY) && (wxUSE_GRAPHICS_CONTEXT)

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsPath_AddLineToPoint[] = { &wxluatype_wxGraphicsPath, &wxluatype_TNUMBER, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxGraphicsPath_AddLineToPoint(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsPath_AddLineToPoint[1] = {{ wxLua_wxGraphicsPath_AddLineToPoint, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxGraphicsPath_AddLineToPoint }};
//     virtual void AddLineToPoint( wxDouble x, wxDouble y );
static int LUACALL wxLua_wxGraphicsPath_AddLineToPoint(lua_State *L)
{
    // wxDouble y
    wxDouble y = (wxDouble)wxlua_getnumbertype(L, 3);
    // wxDouble x
    wxDouble x = (wxDouble)wxlua_getnumbertype(L, 2);
    // get this
    wxGraphicsPath * self = (wxGraphicsPath *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsPath);
    // call AddLineToPoint
    self->AddLineToPoint(x, y);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsPath_AddPath[] = { &wxluatype_wxGraphicsPath, &wxluatype_wxGraphicsPath, NULL };
static int LUACALL wxLua_wxGraphicsPath_AddPath(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsPath_AddPath[1] = {{ wxLua_wxGraphicsPath_AddPath, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxGraphicsPath_AddPath }};
//     virtual void AddPath( const wxGraphicsPath& path );
static int LUACALL wxLua_wxGraphicsPath_AddPath(lua_State *L)
{
    // const wxGraphicsPath path
    const wxGraphicsPath * path = (const wxGraphicsPath *)wxluaT_getuserdatatype(L, 2, wxluatype_wxGraphicsPath);
    // get this
    wxGraphicsPath * self = (wxGraphicsPath *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsPath);
    // call AddPath
    self->AddPath(*path);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsPath_AddQuadCurveToPoint[] = { &wxluatype_wxGraphicsPath, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxGraphicsPath_AddQuadCurveToPoint(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsPath_AddQuadCurveToPoint[1] = {{ wxLua_wxGraphicsPath_AddQuadCurveToPoint, WXLUAMETHOD_METHOD, 5, 5, s_wxluatypeArray_wxLua_wxGraphicsPath_AddQuadCurveToPoint }};
//     virtual void AddQuadCurveToPoint( wxDouble cx, wxDouble cy, wxDouble x, wxDouble y );
static int LUACALL wxLua_wxGraphicsPath_AddQuadCurveToPoint(lua_State *L)
{
    // wxDouble y
    wxDouble y = (wxDouble)wxlua_getnumbertype(L, 5);
    // wxDouble x
    wxDouble x = (wxDouble)wxlua_getnumbertype(L, 4);
    // wxDouble cy
    wxDouble cy = (wxDouble)wxlua_getnumbertype(L, 3);
    // wxDouble cx
    wxDouble cx = (wxDouble)wxlua_getnumbertype(L, 2);
    // get this
    wxGraphicsPath * self = (wxGraphicsPath *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsPath);
    // call AddQuadCurveToPoint
    self->AddQuadCurveToPoint(cx, cy, x, y);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsPath_AddRectangle[] = { &wxluatype_wxGraphicsPath, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxGraphicsPath_AddRectangle(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsPath_AddRectangle[1] = {{ wxLua_wxGraphicsPath_AddRectangle, WXLUAMETHOD_METHOD, 5, 5, s_wxluatypeArray_wxLua_wxGraphicsPath_AddRectangle }};
//     virtual void AddRectangle( wxDouble x, wxDouble y, wxDouble w, wxDouble h );
static int LUACALL wxLua_wxGraphicsPath_AddRectangle(lua_State *L)
{
    // wxDouble h
    wxDouble h = (wxDouble)wxlua_getnumbertype(L, 5);
    // wxDouble w
    wxDouble w = (wxDouble)wxlua_getnumbertype(L, 4);
    // wxDouble y
    wxDouble y = (wxDouble)wxlua_getnumbertype(L, 3);
    // wxDouble x
    wxDouble x = (wxDouble)wxlua_getnumbertype(L, 2);
    // get this
    wxGraphicsPath * self = (wxGraphicsPath *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsPath);
    // call AddRectangle
    self->AddRectangle(x, y, w, h);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsPath_AddRoundedRectangle[] = { &wxluatype_wxGraphicsPath, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxGraphicsPath_AddRoundedRectangle(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsPath_AddRoundedRectangle[1] = {{ wxLua_wxGraphicsPath_AddRoundedRectangle, WXLUAMETHOD_METHOD, 6, 6, s_wxluatypeArray_wxLua_wxGraphicsPath_AddRoundedRectangle }};
//     virtual void AddRoundedRectangle( wxDouble x, wxDouble y, wxDouble w, wxDouble h, wxDouble radius);
static int LUACALL wxLua_wxGraphicsPath_AddRoundedRectangle(lua_State *L)
{
    // wxDouble radius
    wxDouble radius = (wxDouble)wxlua_getnumbertype(L, 6);
    // wxDouble h
    wxDouble h = (wxDouble)wxlua_getnumbertype(L, 5);
    // wxDouble w
    wxDouble w = (wxDouble)wxlua_getnumbertype(L, 4);
    // wxDouble y
    wxDouble y = (wxDouble)wxlua_getnumbertype(L, 3);
    // wxDouble x
    wxDouble x = (wxDouble)wxlua_getnumbertype(L, 2);
    // get this
    wxGraphicsPath * self = (wxGraphicsPath *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsPath);
    // call AddRoundedRectangle
    self->AddRoundedRectangle(x, y, w, h, radius);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsPath_CloseSubpath[] = { &wxluatype_wxGraphicsPath, NULL };
static int LUACALL wxLua_wxGraphicsPath_CloseSubpath(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsPath_CloseSubpath[1] = {{ wxLua_wxGraphicsPath_CloseSubpath, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxGraphicsPath_CloseSubpath }};
//     virtual void CloseSubpath();
static int LUACALL wxLua_wxGraphicsPath_CloseSubpath(lua_State *L)
{
    // get this
    wxGraphicsPath * self = (wxGraphicsPath *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsPath);
    // call CloseSubpath
    self->CloseSubpath();

    return 0;
}


#if ((wxLUA_USE_Geometry && wxUSE_GEOMETRY) && (wxLUA_USE_wxDC)) && (wxUSE_GRAPHICS_CONTEXT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsPath_Contains1[] = { &wxluatype_wxGraphicsPath, &wxluatype_wxPoint2DDouble, &wxluatype_TINTEGER, NULL };
static int LUACALL wxLua_wxGraphicsPath_Contains1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsPath_Contains1[1] = {{ wxLua_wxGraphicsPath_Contains1, WXLUAMETHOD_METHOD, 2, 3, s_wxluatypeArray_wxLua_wxGraphicsPath_Contains1 }};
//     bool Contains( const wxPoint2DDouble& c, wxPolygonFillMode fillStyle = wxODDEVEN_RULE) const;
static int LUACALL wxLua_wxGraphicsPath_Contains1(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // wxPolygonFillMode fillStyle = wxODDEVEN_RULE
    wxPolygonFillMode fillStyle = (argCount >= 3 ? (wxPolygonFillMode)wxlua_getenumtype(L, 3) : wxODDEVEN_RULE);
    // const wxPoint2DDouble c
    const wxPoint2DDouble * c = (const wxPoint2DDouble *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPoint2DDouble);
    // get this
    wxGraphicsPath * self = (wxGraphicsPath *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsPath);
    // call Contains
    bool returns = (self->Contains(*c, fillStyle));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

#endif // ((wxLUA_USE_Geometry && wxUSE_GEOMETRY) && (wxLUA_USE_wxDC)) && (wxUSE_GRAPHICS_CONTEXT)

#if (wxLUA_USE_wxDC) && (wxUSE_GRAPHICS_CONTEXT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsPath_Contains[] = { &wxluatype_wxGraphicsPath, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TINTEGER, NULL };
static int LUACALL wxLua_wxGraphicsPath_Contains(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsPath_Contains[1] = {{ wxLua_wxGraphicsPath_Contains, WXLUAMETHOD_METHOD, 3, 4, s_wxluatypeArray_wxLua_wxGraphicsPath_Contains }};
//     virtual bool Contains( wxDouble x, wxDouble y, wxPolygonFillMode fillStyle = wxODDEVEN_RULE) const;
static int LUACALL wxLua_wxGraphicsPath_Contains(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // wxPolygonFillMode fillStyle = wxODDEVEN_RULE
    wxPolygonFillMode fillStyle = (argCount >= 4 ? (wxPolygonFillMode)wxlua_getenumtype(L, 4) : wxODDEVEN_RULE);
    // wxDouble y
    wxDouble y = (wxDouble)wxlua_getnumbertype(L, 3);
    // wxDouble x
    wxDouble x = (wxDouble)wxlua_getnumbertype(L, 2);
    // get this
    wxGraphicsPath * self = (wxGraphicsPath *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsPath);
    // call Contains
    bool returns = (self->Contains(x, y, fillStyle));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

#endif // (wxLUA_USE_wxDC) && (wxUSE_GRAPHICS_CONTEXT)

#if (wxLUA_USE_Geometry && wxUSE_GEOMETRY) && (wxUSE_GRAPHICS_CONTEXT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsPath_GetBox1[] = { &wxluatype_wxGraphicsPath, NULL };
static int LUACALL wxLua_wxGraphicsPath_GetBox1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsPath_GetBox1[1] = {{ wxLua_wxGraphicsPath_GetBox1, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxGraphicsPath_GetBox1 }};
//     wxRect2DDouble GetBox() const;
static int LUACALL wxLua_wxGraphicsPath_GetBox1(lua_State *L)
{
    // get this
    wxGraphicsPath * self = (wxGraphicsPath *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsPath);
    // call GetBox
    // allocate a new object using the copy constructor
    wxRect2DDouble* returns = new wxRect2DDouble(self->GetBox());
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxRect2DDouble);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxRect2DDouble);

    return 1;
}

#endif // (wxLUA_USE_Geometry && wxUSE_GEOMETRY) && (wxUSE_GRAPHICS_CONTEXT)

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsPath_GetBox[] = { &wxluatype_wxGraphicsPath, &wxluatype_TLIGHTUSERDATA, &wxluatype_TLIGHTUSERDATA, &wxluatype_TLIGHTUSERDATA, &wxluatype_TLIGHTUSERDATA, NULL };
static int LUACALL wxLua_wxGraphicsPath_GetBox(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsPath_GetBox[1] = {{ wxLua_wxGraphicsPath_GetBox, WXLUAMETHOD_METHOD, 5, 5, s_wxluatypeArray_wxLua_wxGraphicsPath_GetBox }};
//     virtual void GetBox(wxDouble *x, wxDouble *y, wxDouble *w, wxDouble *h) const;
static int LUACALL wxLua_wxGraphicsPath_GetBox(lua_State *L)
{
    // wxDouble h
    wxDouble * h = (wxDouble *)wxlua_touserdata(L, 5);
    // wxDouble w
    wxDouble * w = (wxDouble *)wxlua_touserdata(L, 4);
    // wxDouble y
    wxDouble * y = (wxDouble *)wxlua_touserdata(L, 3);
    // wxDouble x
    wxDouble * x = (wxDouble *)wxlua_touserdata(L, 2);
    // get this
    wxGraphicsPath * self = (wxGraphicsPath *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsPath);
    // call GetBox
    self->GetBox(x, y, w, h);

    return 0;
}


#if (wxLUA_USE_Geometry && wxUSE_GEOMETRY) && (wxUSE_GRAPHICS_CONTEXT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsPath_GetCurrentPoint1[] = { &wxluatype_wxGraphicsPath, NULL };
static int LUACALL wxLua_wxGraphicsPath_GetCurrentPoint1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsPath_GetCurrentPoint1[1] = {{ wxLua_wxGraphicsPath_GetCurrentPoint1, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxGraphicsPath_GetCurrentPoint1 }};
//     wxPoint2DDouble GetCurrentPoint() const;
static int LUACALL wxLua_wxGraphicsPath_GetCurrentPoint1(lua_State *L)
{
    // get this
    wxGraphicsPath * self = (wxGraphicsPath *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsPath);
    // call GetCurrentPoint
    // allocate a new object using the copy constructor
    wxPoint2DDouble* returns = new wxPoint2DDouble(self->GetCurrentPoint());
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxPoint2DDouble);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPoint2DDouble);

    return 1;
}

#endif // (wxLUA_USE_Geometry && wxUSE_GEOMETRY) && (wxUSE_GRAPHICS_CONTEXT)

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsPath_GetCurrentPoint[] = { &wxluatype_wxGraphicsPath, &wxluatype_TLIGHTUSERDATA, &wxluatype_TLIGHTUSERDATA, NULL };
static int LUACALL wxLua_wxGraphicsPath_GetCurrentPoint(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsPath_GetCurrentPoint[1] = {{ wxLua_wxGraphicsPath_GetCurrentPoint, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxGraphicsPath_GetCurrentPoint }};
//     virtual void GetCurrentPoint( wxDouble* x, wxDouble* y) const;
static int LUACALL wxLua_wxGraphicsPath_GetCurrentPoint(lua_State *L)
{
    // wxDouble y
    wxDouble * y = (wxDouble *)wxlua_touserdata(L, 3);
    // wxDouble x
    wxDouble * x = (wxDouble *)wxlua_touserdata(L, 2);
    // get this
    wxGraphicsPath * self = (wxGraphicsPath *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsPath);
    // call GetCurrentPoint
    self->GetCurrentPoint(x, y);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsPath_GetNativePath[] = { &wxluatype_wxGraphicsPath, NULL };
static int LUACALL wxLua_wxGraphicsPath_GetNativePath(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsPath_GetNativePath[1] = {{ wxLua_wxGraphicsPath_GetNativePath, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxGraphicsPath_GetNativePath }};
//     virtual void * GetNativePath() const;
static int LUACALL wxLua_wxGraphicsPath_GetNativePath(lua_State *L)
{
    // get this
    wxGraphicsPath * self = (wxGraphicsPath *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsPath);
    // call GetNativePath
    void* returns = (void*)self->GetNativePath();
    // push the result pointer
    lua_pushlightuserdata(L, (void *)returns);

    return 1;
}


#if (wxLUA_USE_Geometry && wxUSE_GEOMETRY) && (wxUSE_GRAPHICS_CONTEXT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsPath_MoveToPoint1[] = { &wxluatype_wxGraphicsPath, &wxluatype_wxPoint2DDouble, NULL };
static int LUACALL wxLua_wxGraphicsPath_MoveToPoint1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsPath_MoveToPoint1[1] = {{ wxLua_wxGraphicsPath_MoveToPoint1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxGraphicsPath_MoveToPoint1 }};
//     void MoveToPoint( const wxPoint2DDouble& p);
static int LUACALL wxLua_wxGraphicsPath_MoveToPoint1(lua_State *L)
{
    // const wxPoint2DDouble p
    const wxPoint2DDouble * p = (const wxPoint2DDouble *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPoint2DDouble);
    // get this
    wxGraphicsPath * self = (wxGraphicsPath *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsPath);
    // call MoveToPoint
    self->MoveToPoint(*p);

    return 0;
}

#endif // (wxLUA_USE_Geometry && wxUSE_GEOMETRY) && (wxUSE_GRAPHICS_CONTEXT)

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsPath_MoveToPoint[] = { &wxluatype_wxGraphicsPath, &wxluatype_TNUMBER, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxGraphicsPath_MoveToPoint(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsPath_MoveToPoint[1] = {{ wxLua_wxGraphicsPath_MoveToPoint, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxGraphicsPath_MoveToPoint }};
//     virtual void MoveToPoint( wxDouble x, wxDouble y );
static int LUACALL wxLua_wxGraphicsPath_MoveToPoint(lua_State *L)
{
    // wxDouble y
    wxDouble y = (wxDouble)wxlua_getnumbertype(L, 3);
    // wxDouble x
    wxDouble x = (wxDouble)wxlua_getnumbertype(L, 2);
    // get this
    wxGraphicsPath * self = (wxGraphicsPath *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsPath);
    // call MoveToPoint
    self->MoveToPoint(x, y);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsPath_Transform[] = { &wxluatype_wxGraphicsPath, &wxluatype_wxGraphicsMatrix, NULL };
static int LUACALL wxLua_wxGraphicsPath_Transform(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsPath_Transform[1] = {{ wxLua_wxGraphicsPath_Transform, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxGraphicsPath_Transform }};
//     virtual void Transform( const wxGraphicsMatrix& matrix );
static int LUACALL wxLua_wxGraphicsPath_Transform(lua_State *L)
{
    // const wxGraphicsMatrix matrix
    const wxGraphicsMatrix * matrix = (const wxGraphicsMatrix *)wxluaT_getuserdatatype(L, 2, wxluatype_wxGraphicsMatrix);
    // get this
    wxGraphicsPath * self = (wxGraphicsPath *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsPath);
    // call Transform
    self->Transform(*matrix);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsPath_UnGetNativePath[] = { &wxluatype_wxGraphicsPath, &wxluatype_TLIGHTUSERDATA, NULL };
static int LUACALL wxLua_wxGraphicsPath_UnGetNativePath(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsPath_UnGetNativePath[1] = {{ wxLua_wxGraphicsPath_UnGetNativePath, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxGraphicsPath_UnGetNativePath }};
//     virtual void UnGetNativePath(void *p) const;
static int LUACALL wxLua_wxGraphicsPath_UnGetNativePath(lua_State *L)
{
    // void p
    void * p = (void *)wxlua_touserdata(L, 2);
    // get this
    wxGraphicsPath * self = (wxGraphicsPath *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsPath);
    // call UnGetNativePath
    self->UnGetNativePath(p);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsPath_delete[] = { &wxluatype_wxGraphicsPath, NULL };
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsPath_delete[1] = {{ wxlua_userdata_delete, WXLUAMETHOD_METHOD|WXLUAMETHOD_DELETE, 1, 1, s_wxluatypeArray_wxLua_wxGraphicsPath_delete }};

static int LUACALL wxLua_wxGraphicsPath_constructor(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsPath_constructor[1] = {{ wxLua_wxGraphicsPath_constructor, WXLUAMETHOD_CONSTRUCTOR, 0, 0, g_wxluaargtypeArray_None }};
//     wxGraphicsPath();
static int LUACALL wxLua_wxGraphicsPath_constructor(lua_State *L)
{
    // call constructor
    wxGraphicsPath* returns = new wxGraphicsPath();
    // add to tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxGraphicsPath);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxGraphicsPath);

    return 1;
}




#if ((wxLUA_USE_Geometry && wxUSE_GEOMETRY) && (wxUSE_GRAPHICS_CONTEXT))||(wxUSE_GRAPHICS_CONTEXT)
// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsPath_AddArc_overload[] =
{

#if (wxLUA_USE_Geometry && wxUSE_GEOMETRY) && (wxUSE_GRAPHICS_CONTEXT)
    { wxLua_wxGraphicsPath_AddArc1, WXLUAMETHOD_METHOD, 6, 6, s_wxluatypeArray_wxLua_wxGraphicsPath_AddArc1 },
#endif // (wxLUA_USE_Geometry && wxUSE_GEOMETRY) && (wxUSE_GRAPHICS_CONTEXT)
    { wxLua_wxGraphicsPath_AddArc, WXLUAMETHOD_METHOD, 7, 7, s_wxluatypeArray_wxLua_wxGraphicsPath_AddArc },
};
static int s_wxluafunc_wxLua_wxGraphicsPath_AddArc_overload_count = sizeof(s_wxluafunc_wxLua_wxGraphicsPath_AddArc_overload)/sizeof(wxLuaBindCFunc);

// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsPath_AddCurveToPoint_overload[] =
{

#if (wxLUA_USE_Geometry && wxUSE_GEOMETRY) && (wxUSE_GRAPHICS_CONTEXT)
    { wxLua_wxGraphicsPath_AddCurveToPoint1, WXLUAMETHOD_METHOD, 4, 4, s_wxluatypeArray_wxLua_wxGraphicsPath_AddCurveToPoint1 },
#endif // (wxLUA_USE_Geometry && wxUSE_GEOMETRY) && (wxUSE_GRAPHICS_CONTEXT)
    { wxLua_wxGraphicsPath_AddCurveToPoint, WXLUAMETHOD_METHOD, 7, 7, s_wxluatypeArray_wxLua_wxGraphicsPath_AddCurveToPoint },
};
static int s_wxluafunc_wxLua_wxGraphicsPath_AddCurveToPoint_overload_count = sizeof(s_wxluafunc_wxLua_wxGraphicsPath_AddCurveToPoint_overload)/sizeof(wxLuaBindCFunc);

// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsPath_AddLineToPoint_overload[] =
{

#if (wxLUA_USE_Geometry && wxUSE_GEOMETRY) && (wxUSE_GRAPHICS_CONTEXT)
    { wxLua_wxGraphicsPath_AddLineToPoint1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxGraphicsPath_AddLineToPoint1 },
#endif // (wxLUA_USE_Geometry && wxUSE_GEOMETRY) && (wxUSE_GRAPHICS_CONTEXT)
    { wxLua_wxGraphicsPath_AddLineToPoint, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxGraphicsPath_AddLineToPoint },
};
static int s_wxluafunc_wxLua_wxGraphicsPath_AddLineToPoint_overload_count = sizeof(s_wxluafunc_wxLua_wxGraphicsPath_AddLineToPoint_overload)/sizeof(wxLuaBindCFunc);

#endif // ((wxLUA_USE_Geometry && wxUSE_GEOMETRY) && (wxUSE_GRAPHICS_CONTEXT))||(wxUSE_GRAPHICS_CONTEXT)

#if (((wxLUA_USE_Geometry && wxUSE_GEOMETRY) && (wxLUA_USE_wxDC)) && (wxUSE_GRAPHICS_CONTEXT))||((wxLUA_USE_wxDC) && (wxUSE_GRAPHICS_CONTEXT))
// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsPath_Contains_overload[] =
{

#if ((wxLUA_USE_Geometry && wxUSE_GEOMETRY) && (wxLUA_USE_wxDC)) && (wxUSE_GRAPHICS_CONTEXT)
    { wxLua_wxGraphicsPath_Contains1, WXLUAMETHOD_METHOD, 2, 3, s_wxluatypeArray_wxLua_wxGraphicsPath_Contains1 },
#endif // ((wxLUA_USE_Geometry && wxUSE_GEOMETRY) && (wxLUA_USE_wxDC)) && (wxUSE_GRAPHICS_CONTEXT)

#if (wxLUA_USE_wxDC) && (wxUSE_GRAPHICS_CONTEXT)
    { wxLua_wxGraphicsPath_Contains, WXLUAMETHOD_METHOD, 3, 4, s_wxluatypeArray_wxLua_wxGraphicsPath_Contains },
#endif // (wxLUA_USE_wxDC) && (wxUSE_GRAPHICS_CONTEXT)
};
static int s_wxluafunc_wxLua_wxGraphicsPath_Contains_overload_count = sizeof(s_wxluafunc_wxLua_wxGraphicsPath_Contains_overload)/sizeof(wxLuaBindCFunc);

#endif // (((wxLUA_USE_Geometry && wxUSE_GEOMETRY) && (wxLUA_USE_wxDC)) && (wxUSE_GRAPHICS_CONTEXT))||((wxLUA_USE_wxDC) && (wxUSE_GRAPHICS_CONTEXT))

#if ((wxLUA_USE_Geometry && wxUSE_GEOMETRY) && (wxUSE_GRAPHICS_CONTEXT))||(wxUSE_GRAPHICS_CONTEXT)
// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsPath_GetBox_overload[] =
{

#if (wxLUA_USE_Geometry && wxUSE_GEOMETRY) && (wxUSE_GRAPHICS_CONTEXT)
    { wxLua_wxGraphicsPath_GetBox1, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxGraphicsPath_GetBox1 },
#endif // (wxLUA_USE_Geometry && wxUSE_GEOMETRY) && (wxUSE_GRAPHICS_CONTEXT)
    { wxLua_wxGraphicsPath_GetBox, WXLUAMETHOD_METHOD, 5, 5, s_wxluatypeArray_wxLua_wxGraphicsPath_GetBox },
};
static int s_wxluafunc_wxLua_wxGraphicsPath_GetBox_overload_count = sizeof(s_wxluafunc_wxLua_wxGraphicsPath_GetBox_overload)/sizeof(wxLuaBindCFunc);

// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsPath_GetCurrentPoint_overload[] =
{

#if (wxLUA_USE_Geometry && wxUSE_GEOMETRY) && (wxUSE_GRAPHICS_CONTEXT)
    { wxLua_wxGraphicsPath_GetCurrentPoint1, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxGraphicsPath_GetCurrentPoint1 },
#endif // (wxLUA_USE_Geometry && wxUSE_GEOMETRY) && (wxUSE_GRAPHICS_CONTEXT)
    { wxLua_wxGraphicsPath_GetCurrentPoint, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxGraphicsPath_GetCurrentPoint },
};
static int s_wxluafunc_wxLua_wxGraphicsPath_GetCurrentPoint_overload_count = sizeof(s_wxluafunc_wxLua_wxGraphicsPath_GetCurrentPoint_overload)/sizeof(wxLuaBindCFunc);

// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsPath_MoveToPoint_overload[] =
{

#if (wxLUA_USE_Geometry && wxUSE_GEOMETRY) && (wxUSE_GRAPHICS_CONTEXT)
    { wxLua_wxGraphicsPath_MoveToPoint1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxGraphicsPath_MoveToPoint1 },
#endif // (wxLUA_USE_Geometry && wxUSE_GEOMETRY) && (wxUSE_GRAPHICS_CONTEXT)
    { wxLua_wxGraphicsPath_MoveToPoint, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxGraphicsPath_MoveToPoint },
};
static int s_wxluafunc_wxLua_wxGraphicsPath_MoveToPoint_overload_count = sizeof(s_wxluafunc_wxLua_wxGraphicsPath_MoveToPoint_overload)/sizeof(wxLuaBindCFunc);

#endif // ((wxLUA_USE_Geometry && wxUSE_GEOMETRY) && (wxUSE_GRAPHICS_CONTEXT))||(wxUSE_GRAPHICS_CONTEXT)

void wxLua_wxGraphicsPath_delete_function(void** p)
{
    wxGraphicsPath* o = (wxGraphicsPath*)(*p);
    delete o;
}

// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxGraphicsPath_methods[] = {
#if ((wxLUA_USE_Geometry && wxUSE_GEOMETRY) && (wxUSE_GRAPHICS_CONTEXT))||(wxUSE_GRAPHICS_CONTEXT)
    { "AddArc", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsPath_AddArc_overload, s_wxluafunc_wxLua_wxGraphicsPath_AddArc_overload_count, 0 },
#endif // ((wxLUA_USE_Geometry && wxUSE_GEOMETRY) && (wxUSE_GRAPHICS_CONTEXT))||(wxUSE_GRAPHICS_CONTEXT)

    { "AddArcToPoint", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsPath_AddArcToPoint, 1, NULL },
    { "AddCircle", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsPath_AddCircle, 1, NULL },

#if ((wxLUA_USE_Geometry && wxUSE_GEOMETRY) && (wxUSE_GRAPHICS_CONTEXT))||(wxUSE_GRAPHICS_CONTEXT)
    { "AddCurveToPoint", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsPath_AddCurveToPoint_overload, s_wxluafunc_wxLua_wxGraphicsPath_AddCurveToPoint_overload_count, 0 },
#endif // ((wxLUA_USE_Geometry && wxUSE_GEOMETRY) && (wxUSE_GRAPHICS_CONTEXT))||(wxUSE_GRAPHICS_CONTEXT)

    { "AddEllipse", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsPath_AddEllipse, 1, NULL },

#if ((wxLUA_USE_Geometry && wxUSE_GEOMETRY) && (wxUSE_GRAPHICS_CONTEXT))||(wxUSE_GRAPHICS_CONTEXT)
    { "AddLineToPoint", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsPath_AddLineToPoint_overload, s_wxluafunc_wxLua_wxGraphicsPath_AddLineToPoint_overload_count, 0 },
#endif // ((wxLUA_USE_Geometry && wxUSE_GEOMETRY) && (wxUSE_GRAPHICS_CONTEXT))||(wxUSE_GRAPHICS_CONTEXT)

    { "AddPath", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsPath_AddPath, 1, NULL },
    { "AddQuadCurveToPoint", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsPath_AddQuadCurveToPoint, 1, NULL },
    { "AddRectangle", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsPath_AddRectangle, 1, NULL },
    { "AddRoundedRectangle", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsPath_AddRoundedRectangle, 1, NULL },
    { "CloseSubpath", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsPath_CloseSubpath, 1, NULL },

#if (((wxLUA_USE_Geometry && wxUSE_GEOMETRY) && (wxLUA_USE_wxDC)) && (wxUSE_GRAPHICS_CONTEXT))||((wxLUA_USE_wxDC) && (wxUSE_GRAPHICS_CONTEXT))
    { "Contains", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsPath_Contains_overload, s_wxluafunc_wxLua_wxGraphicsPath_Contains_overload_count, 0 },
#endif // (((wxLUA_USE_Geometry && wxUSE_GEOMETRY) && (wxLUA_USE_wxDC)) && (wxUSE_GRAPHICS_CONTEXT))||((wxLUA_USE_wxDC) && (wxUSE_GRAPHICS_CONTEXT))

#if ((wxLUA_USE_Geometry && wxUSE_GEOMETRY) && (wxUSE_GRAPHICS_CONTEXT))||(wxUSE_GRAPHICS_CONTEXT)
    { "GetBox", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsPath_GetBox_overload, s_wxluafunc_wxLua_wxGraphicsPath_GetBox_overload_count, 0 },
    { "GetCurrentPoint", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsPath_GetCurrentPoint_overload, s_wxluafunc_wxLua_wxGraphicsPath_GetCurrentPoint_overload_count, 0 },
#endif // ((wxLUA_USE_Geometry && wxUSE_GEOMETRY) && (wxUSE_GRAPHICS_CONTEXT))||(wxUSE_GRAPHICS_CONTEXT)

    { "GetNativePath", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsPath_GetNativePath, 1, NULL },

#if ((wxLUA_USE_Geometry && wxUSE_GEOMETRY) && (wxUSE_GRAPHICS_CONTEXT))||(wxUSE_GRAPHICS_CONTEXT)
    { "MoveToPoint", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsPath_MoveToPoint_overload, s_wxluafunc_wxLua_wxGraphicsPath_MoveToPoint_overload_count, 0 },
#endif // ((wxLUA_USE_Geometry && wxUSE_GEOMETRY) && (wxUSE_GRAPHICS_CONTEXT))||(wxUSE_GRAPHICS_CONTEXT)

    { "Transform", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsPath_Transform, 1, NULL },
    { "UnGetNativePath", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsPath_UnGetNativePath, 1, NULL },
    { "delete", WXLUAMETHOD_METHOD|WXLUAMETHOD_DELETE, s_wxluafunc_wxLua_wxGraphicsPath_delete, 1, NULL },
    { "wxGraphicsPath", WXLUAMETHOD_CONSTRUCTOR, s_wxluafunc_wxLua_wxGraphicsPath_constructor, 1, NULL },

    { 0, 0, 0, 0 },
};

int wxGraphicsPath_methodCount = sizeof(wxGraphicsPath_methods)/sizeof(wxLuaBindMethod) - 1;

#endif  // wxUSE_GRAPHICS_CONTEXT


#if wxUSE_GRAPHICS_CONTEXT
// ---------------------------------------------------------------------------
// Bind class wxGraphicsGradientStop
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxGraphicsGradientStop'
int wxluatype_wxGraphicsGradientStop = WXLUA_TUNKNOWN;

#if (wxLUA_USE_wxColourPenBrush) && (wxUSE_GRAPHICS_CONTEXT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsGradientStop_GetColour[] = { &wxluatype_wxGraphicsGradientStop, NULL };
static int LUACALL wxLua_wxGraphicsGradientStop_GetColour(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsGradientStop_GetColour[1] = {{ wxLua_wxGraphicsGradientStop_GetColour, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxGraphicsGradientStop_GetColour }};
//     const wxColour& GetColour() const;
static int LUACALL wxLua_wxGraphicsGradientStop_GetColour(lua_State *L)
{
    // get this
    wxGraphicsGradientStop * self = (wxGraphicsGradientStop *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsGradientStop);
    // call GetColour
    const wxColour* returns = (const wxColour*)&self->GetColour();
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxColour);

    return 1;
}

#endif // (wxLUA_USE_wxColourPenBrush) && (wxUSE_GRAPHICS_CONTEXT)

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsGradientStop_GetPosition[] = { &wxluatype_wxGraphicsGradientStop, NULL };
static int LUACALL wxLua_wxGraphicsGradientStop_GetPosition(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsGradientStop_GetPosition[1] = {{ wxLua_wxGraphicsGradientStop_GetPosition, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxGraphicsGradientStop_GetPosition }};
//     float GetPosition() const;
static int LUACALL wxLua_wxGraphicsGradientStop_GetPosition(lua_State *L)
{
    // get this
    wxGraphicsGradientStop * self = (wxGraphicsGradientStop *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsGradientStop);
    // call GetPosition
    float returns = (self->GetPosition());
    // push the result floating point number
    lua_pushnumber(L, returns);

    return 1;
}


#if (wxLUA_USE_wxColourPenBrush) && (wxUSE_GRAPHICS_CONTEXT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsGradientStop_SetColour[] = { &wxluatype_wxGraphicsGradientStop, &wxluatype_wxColour, NULL };
static int LUACALL wxLua_wxGraphicsGradientStop_SetColour(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsGradientStop_SetColour[1] = {{ wxLua_wxGraphicsGradientStop_SetColour, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxGraphicsGradientStop_SetColour }};
//     void SetColour(const wxColour& col);
static int LUACALL wxLua_wxGraphicsGradientStop_SetColour(lua_State *L)
{
    // const wxColour col
    const wxColour * col = (const wxColour *)wxluaT_getuserdatatype(L, 2, wxluatype_wxColour);
    // get this
    wxGraphicsGradientStop * self = (wxGraphicsGradientStop *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsGradientStop);
    // call SetColour
    self->SetColour(*col);

    return 0;
}

#endif // (wxLUA_USE_wxColourPenBrush) && (wxUSE_GRAPHICS_CONTEXT)

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsGradientStop_SetPosition[] = { &wxluatype_wxGraphicsGradientStop, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxGraphicsGradientStop_SetPosition(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsGradientStop_SetPosition[1] = {{ wxLua_wxGraphicsGradientStop_SetPosition, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxGraphicsGradientStop_SetPosition }};
//     void SetPosition(float pos);
static int LUACALL wxLua_wxGraphicsGradientStop_SetPosition(lua_State *L)
{
    // float pos
    float pos = (float)wxlua_getnumbertype(L, 2);
    // get this
    wxGraphicsGradientStop * self = (wxGraphicsGradientStop *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsGradientStop);
    // call SetPosition
    self->SetPosition(pos);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsGradientStop_delete[] = { &wxluatype_wxGraphicsGradientStop, NULL };
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsGradientStop_delete[1] = {{ wxlua_userdata_delete, WXLUAMETHOD_METHOD|WXLUAMETHOD_DELETE, 1, 1, s_wxluatypeArray_wxLua_wxGraphicsGradientStop_delete }};


#if (wxLUA_USE_wxColourPenBrush) && (wxUSE_GRAPHICS_CONTEXT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsGradientStop_constructor[] = { &wxluatype_wxColour, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxGraphicsGradientStop_constructor(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsGradientStop_constructor[1] = {{ wxLua_wxGraphicsGradientStop_constructor, WXLUAMETHOD_CONSTRUCTOR, 0, 2, s_wxluatypeArray_wxLua_wxGraphicsGradientStop_constructor }};
//     wxGraphicsGradientStop(wxColour col = wxTransparentColour, float pos = 0.0);
static int LUACALL wxLua_wxGraphicsGradientStop_constructor(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // float pos = 0.0
    float pos = (argCount >= 2 ? (float)wxlua_getnumbertype(L, 2) : 0.0);
    // wxColour col = wxTransparentColour
    wxColour col = (argCount >= 1 ? *(wxColour*)wxluaT_getuserdatatype(L, 1, wxluatype_wxColour) : wxTransparentColour);
    // call constructor
    wxGraphicsGradientStop* returns = new wxGraphicsGradientStop(col, pos);
    // add to tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxGraphicsGradientStop);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxGraphicsGradientStop);

    return 1;
}

#endif // (wxLUA_USE_wxColourPenBrush) && (wxUSE_GRAPHICS_CONTEXT)



void wxLua_wxGraphicsGradientStop_delete_function(void** p)
{
    wxGraphicsGradientStop* o = (wxGraphicsGradientStop*)(*p);
    delete o;
}

// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxGraphicsGradientStop_methods[] = {
#if (wxLUA_USE_wxColourPenBrush) && (wxUSE_GRAPHICS_CONTEXT)
    { "GetColour", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsGradientStop_GetColour, 1, NULL },
#endif // (wxLUA_USE_wxColourPenBrush) && (wxUSE_GRAPHICS_CONTEXT)

    { "GetPosition", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsGradientStop_GetPosition, 1, NULL },

#if (wxLUA_USE_wxColourPenBrush) && (wxUSE_GRAPHICS_CONTEXT)
    { "SetColour", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsGradientStop_SetColour, 1, NULL },
#endif // (wxLUA_USE_wxColourPenBrush) && (wxUSE_GRAPHICS_CONTEXT)

    { "SetPosition", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsGradientStop_SetPosition, 1, NULL },
    { "delete", WXLUAMETHOD_METHOD|WXLUAMETHOD_DELETE, s_wxluafunc_wxLua_wxGraphicsGradientStop_delete, 1, NULL },

#if (wxLUA_USE_wxColourPenBrush) && (wxUSE_GRAPHICS_CONTEXT)
    { "wxGraphicsGradientStop", WXLUAMETHOD_CONSTRUCTOR, s_wxluafunc_wxLua_wxGraphicsGradientStop_constructor, 1, NULL },
#endif // (wxLUA_USE_wxColourPenBrush) && (wxUSE_GRAPHICS_CONTEXT)

    { 0, 0, 0, 0 },
};

int wxGraphicsGradientStop_methodCount = sizeof(wxGraphicsGradientStop_methods)/sizeof(wxLuaBindMethod) - 1;

#endif  // wxUSE_GRAPHICS_CONTEXT


#if wxUSE_GRAPHICS_CONTEXT
// ---------------------------------------------------------------------------
// Bind class wxGraphicsGradientStops
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxGraphicsGradientStops'
int wxluatype_wxGraphicsGradientStops = WXLUA_TUNKNOWN;

#if (wxLUA_USE_wxColourPenBrush) && (wxUSE_GRAPHICS_CONTEXT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsGradientStops_Add1[] = { &wxluatype_wxGraphicsGradientStops, &wxluatype_wxColour, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxGraphicsGradientStops_Add1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsGradientStops_Add1[1] = {{ wxLua_wxGraphicsGradientStops_Add1, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxGraphicsGradientStops_Add1 }};
//     void Add(wxColour col, float pos);
static int LUACALL wxLua_wxGraphicsGradientStops_Add1(lua_State *L)
{
    // float pos
    float pos = (float)wxlua_getnumbertype(L, 3);
    // wxColour col
    wxColour col = *(wxColour*)wxluaT_getuserdatatype(L, 2, wxluatype_wxColour);
    // get this
    wxGraphicsGradientStops * self = (wxGraphicsGradientStops *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsGradientStops);
    // call Add
    self->Add(col, pos);

    return 0;
}

#endif // (wxLUA_USE_wxColourPenBrush) && (wxUSE_GRAPHICS_CONTEXT)

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsGradientStops_Add[] = { &wxluatype_wxGraphicsGradientStops, &wxluatype_wxGraphicsGradientStop, NULL };
static int LUACALL wxLua_wxGraphicsGradientStops_Add(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsGradientStops_Add[1] = {{ wxLua_wxGraphicsGradientStops_Add, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxGraphicsGradientStops_Add }};
//     void Add(const wxGraphicsGradientStop& stop);
static int LUACALL wxLua_wxGraphicsGradientStops_Add(lua_State *L)
{
    // const wxGraphicsGradientStop stop
    const wxGraphicsGradientStop * stop = (const wxGraphicsGradientStop *)wxluaT_getuserdatatype(L, 2, wxluatype_wxGraphicsGradientStop);
    // get this
    wxGraphicsGradientStops * self = (wxGraphicsGradientStops *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsGradientStops);
    // call Add
    self->Add(*stop);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsGradientStops_GetCount[] = { &wxluatype_wxGraphicsGradientStops, NULL };
static int LUACALL wxLua_wxGraphicsGradientStops_GetCount(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsGradientStops_GetCount[1] = {{ wxLua_wxGraphicsGradientStops_GetCount, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxGraphicsGradientStops_GetCount }};
//     size_t GetCount() const;
static int LUACALL wxLua_wxGraphicsGradientStops_GetCount(lua_State *L)
{
    // get this
    wxGraphicsGradientStops * self = (wxGraphicsGradientStops *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsGradientStops);
    // call GetCount
    size_t returns = (self->GetCount());
    // push the result number
#if LUA_VERSION_NUM >= 503
if ((double)(lua_Integer)returns == (double)returns) {
    // Exactly representable as lua_Integer
    lua_pushinteger(L, returns);
} else
#endif
{
    lua_pushnumber(L, returns);
}

    return 1;
}


#if (wxLUA_USE_wxColourPenBrush) && (wxUSE_GRAPHICS_CONTEXT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsGradientStops_GetEndColour[] = { &wxluatype_wxGraphicsGradientStops, NULL };
static int LUACALL wxLua_wxGraphicsGradientStops_GetEndColour(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsGradientStops_GetEndColour[1] = {{ wxLua_wxGraphicsGradientStops_GetEndColour, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxGraphicsGradientStops_GetEndColour }};
//     wxColour GetEndColour() const;
static int LUACALL wxLua_wxGraphicsGradientStops_GetEndColour(lua_State *L)
{
    // get this
    wxGraphicsGradientStops * self = (wxGraphicsGradientStops *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsGradientStops);
    // call GetEndColour
    // allocate a new object using the copy constructor
    wxColour* returns = new wxColour(self->GetEndColour());
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxColour);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxColour);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsGradientStops_GetStartColour[] = { &wxluatype_wxGraphicsGradientStops, NULL };
static int LUACALL wxLua_wxGraphicsGradientStops_GetStartColour(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsGradientStops_GetStartColour[1] = {{ wxLua_wxGraphicsGradientStops_GetStartColour, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxGraphicsGradientStops_GetStartColour }};
//     wxColour GetStartColour() const;
static int LUACALL wxLua_wxGraphicsGradientStops_GetStartColour(lua_State *L)
{
    // get this
    wxGraphicsGradientStops * self = (wxGraphicsGradientStops *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsGradientStops);
    // call GetStartColour
    // allocate a new object using the copy constructor
    wxColour* returns = new wxColour(self->GetStartColour());
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxColour);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxColour);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsGradientStops_SetEndColour[] = { &wxluatype_wxGraphicsGradientStops, &wxluatype_wxColour, NULL };
static int LUACALL wxLua_wxGraphicsGradientStops_SetEndColour(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsGradientStops_SetEndColour[1] = {{ wxLua_wxGraphicsGradientStops_SetEndColour, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxGraphicsGradientStops_SetEndColour }};
//     void SetEndColour(wxColour col);
static int LUACALL wxLua_wxGraphicsGradientStops_SetEndColour(lua_State *L)
{
    // wxColour col
    wxColour col = *(wxColour*)wxluaT_getuserdatatype(L, 2, wxluatype_wxColour);
    // get this
    wxGraphicsGradientStops * self = (wxGraphicsGradientStops *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsGradientStops);
    // call SetEndColour
    self->SetEndColour(col);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsGradientStops_SetStartColour[] = { &wxluatype_wxGraphicsGradientStops, &wxluatype_wxColour, NULL };
static int LUACALL wxLua_wxGraphicsGradientStops_SetStartColour(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsGradientStops_SetStartColour[1] = {{ wxLua_wxGraphicsGradientStops_SetStartColour, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxGraphicsGradientStops_SetStartColour }};
//     void SetStartColour(wxColour col);
static int LUACALL wxLua_wxGraphicsGradientStops_SetStartColour(lua_State *L)
{
    // wxColour col
    wxColour col = *(wxColour*)wxluaT_getuserdatatype(L, 2, wxluatype_wxColour);
    // get this
    wxGraphicsGradientStops * self = (wxGraphicsGradientStops *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsGradientStops);
    // call SetStartColour
    self->SetStartColour(col);

    return 0;
}

#endif // (wxLUA_USE_wxColourPenBrush) && (wxUSE_GRAPHICS_CONTEXT)

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsGradientStops_delete[] = { &wxluatype_wxGraphicsGradientStops, NULL };
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsGradientStops_delete[1] = {{ wxlua_userdata_delete, WXLUAMETHOD_METHOD|WXLUAMETHOD_DELETE, 1, 1, s_wxluatypeArray_wxLua_wxGraphicsGradientStops_delete }};


#if (wxLUA_USE_wxColourPenBrush) && (wxUSE_GRAPHICS_CONTEXT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsGradientStops_constructor[] = { &wxluatype_wxColour, &wxluatype_wxColour, NULL };
static int LUACALL wxLua_wxGraphicsGradientStops_constructor(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsGradientStops_constructor[1] = {{ wxLua_wxGraphicsGradientStops_constructor, WXLUAMETHOD_CONSTRUCTOR, 0, 2, s_wxluatypeArray_wxLua_wxGraphicsGradientStops_constructor }};
//                             wxColour endCol = wxTransparentColour);
static int LUACALL wxLua_wxGraphicsGradientStops_constructor(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // wxColour endCol = wxTransparentColour
    wxColour endCol = (argCount >= 2 ? *(wxColour*)wxluaT_getuserdatatype(L, 2, wxluatype_wxColour) : wxTransparentColour);
    // wxColour startCol = wxTransparentColour
    wxColour startCol = (argCount >= 1 ? *(wxColour*)wxluaT_getuserdatatype(L, 1, wxluatype_wxColour) : wxTransparentColour);
    // call constructor
    wxGraphicsGradientStops* returns = new wxGraphicsGradientStops(startCol, endCol);
    // add to tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxGraphicsGradientStops);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxGraphicsGradientStops);

    return 1;
}

#endif // (wxLUA_USE_wxColourPenBrush) && (wxUSE_GRAPHICS_CONTEXT)



#if ((wxLUA_USE_wxColourPenBrush) && (wxUSE_GRAPHICS_CONTEXT))||(wxUSE_GRAPHICS_CONTEXT)
// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsGradientStops_Add_overload[] =
{

#if (wxLUA_USE_wxColourPenBrush) && (wxUSE_GRAPHICS_CONTEXT)
    { wxLua_wxGraphicsGradientStops_Add1, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxGraphicsGradientStops_Add1 },
#endif // (wxLUA_USE_wxColourPenBrush) && (wxUSE_GRAPHICS_CONTEXT)
    { wxLua_wxGraphicsGradientStops_Add, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxGraphicsGradientStops_Add },
};
static int s_wxluafunc_wxLua_wxGraphicsGradientStops_Add_overload_count = sizeof(s_wxluafunc_wxLua_wxGraphicsGradientStops_Add_overload)/sizeof(wxLuaBindCFunc);

#endif // ((wxLUA_USE_wxColourPenBrush) && (wxUSE_GRAPHICS_CONTEXT))||(wxUSE_GRAPHICS_CONTEXT)

void wxLua_wxGraphicsGradientStops_delete_function(void** p)
{
    wxGraphicsGradientStops* o = (wxGraphicsGradientStops*)(*p);
    delete o;
}

// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxGraphicsGradientStops_methods[] = {
#if ((wxLUA_USE_wxColourPenBrush) && (wxUSE_GRAPHICS_CONTEXT))||(wxUSE_GRAPHICS_CONTEXT)
    { "Add", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsGradientStops_Add_overload, s_wxluafunc_wxLua_wxGraphicsGradientStops_Add_overload_count, 0 },
#endif // ((wxLUA_USE_wxColourPenBrush) && (wxUSE_GRAPHICS_CONTEXT))||(wxUSE_GRAPHICS_CONTEXT)

    { "GetCount", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsGradientStops_GetCount, 1, NULL },

#if (wxLUA_USE_wxColourPenBrush) && (wxUSE_GRAPHICS_CONTEXT)
    { "GetEndColour", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsGradientStops_GetEndColour, 1, NULL },
    { "GetStartColour", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsGradientStops_GetStartColour, 1, NULL },
    { "SetEndColour", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsGradientStops_SetEndColour, 1, NULL },
    { "SetStartColour", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsGradientStops_SetStartColour, 1, NULL },
#endif // (wxLUA_USE_wxColourPenBrush) && (wxUSE_GRAPHICS_CONTEXT)

    { "delete", WXLUAMETHOD_METHOD|WXLUAMETHOD_DELETE, s_wxluafunc_wxLua_wxGraphicsGradientStops_delete, 1, NULL },

#if (wxLUA_USE_wxColourPenBrush) && (wxUSE_GRAPHICS_CONTEXT)
    { "wxGraphicsGradientStops", WXLUAMETHOD_CONSTRUCTOR, s_wxluafunc_wxLua_wxGraphicsGradientStops_constructor, 1, NULL },
#endif // (wxLUA_USE_wxColourPenBrush) && (wxUSE_GRAPHICS_CONTEXT)

    { 0, 0, 0, 0 },
};

int wxGraphicsGradientStops_methodCount = sizeof(wxGraphicsGradientStops_methods)/sizeof(wxLuaBindMethod) - 1;

#endif  // wxUSE_GRAPHICS_CONTEXT


#if wxUSE_GRAPHICS_CONTEXT
// ---------------------------------------------------------------------------
// Bind class wxGraphicsContext
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxGraphicsContext'
int wxluatype_wxGraphicsContext = WXLUA_TUNKNOWN;

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsContext_BeginLayer[] = { &wxluatype_wxGraphicsContext, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxGraphicsContext_BeginLayer(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsContext_BeginLayer[1] = {{ wxLua_wxGraphicsContext_BeginLayer, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxGraphicsContext_BeginLayer }};
//     virtual void BeginLayer(wxDouble opacity);// = 0;
static int LUACALL wxLua_wxGraphicsContext_BeginLayer(lua_State *L)
{
    // wxDouble opacity
    wxDouble opacity = (wxDouble)wxlua_getnumbertype(L, 2);
    // get this
    wxGraphicsContext * self = (wxGraphicsContext *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsContext);
    // call BeginLayer
    self->BeginLayer(opacity);

    return 0;
}


#if (wxCHECK_VERSION(3,1,1)) && (wxUSE_GRAPHICS_CONTEXT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsContext_ClearRectangle[] = { &wxluatype_wxGraphicsContext, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxGraphicsContext_ClearRectangle(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsContext_ClearRectangle[1] = {{ wxLua_wxGraphicsContext_ClearRectangle, WXLUAMETHOD_METHOD, 5, 5, s_wxluatypeArray_wxLua_wxGraphicsContext_ClearRectangle }};
//     %wxchkver_3_1_1 virtual void ClearRectangle(wxDouble x, wxDouble y, wxDouble w, wxDouble h);
static int LUACALL wxLua_wxGraphicsContext_ClearRectangle(lua_State *L)
{
    // wxDouble h
    wxDouble h = (wxDouble)wxlua_getnumbertype(L, 5);
    // wxDouble w
    wxDouble w = (wxDouble)wxlua_getnumbertype(L, 4);
    // wxDouble y
    wxDouble y = (wxDouble)wxlua_getnumbertype(L, 3);
    // wxDouble x
    wxDouble x = (wxDouble)wxlua_getnumbertype(L, 2);
    // get this
    wxGraphicsContext * self = (wxGraphicsContext *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsContext);
    // call ClearRectangle
    self->ClearRectangle(x, y, w, h);

    return 0;
}

#endif // (wxCHECK_VERSION(3,1,1)) && (wxUSE_GRAPHICS_CONTEXT)

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsContext_Clip1[] = { &wxluatype_wxGraphicsContext, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxGraphicsContext_Clip1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsContext_Clip1[1] = {{ wxLua_wxGraphicsContext_Clip1, WXLUAMETHOD_METHOD, 5, 5, s_wxluatypeArray_wxLua_wxGraphicsContext_Clip1 }};
//     virtual void Clip( wxDouble x, wxDouble y, wxDouble w, wxDouble h );// = 0;
static int LUACALL wxLua_wxGraphicsContext_Clip1(lua_State *L)
{
    // wxDouble h
    wxDouble h = (wxDouble)wxlua_getnumbertype(L, 5);
    // wxDouble w
    wxDouble w = (wxDouble)wxlua_getnumbertype(L, 4);
    // wxDouble y
    wxDouble y = (wxDouble)wxlua_getnumbertype(L, 3);
    // wxDouble x
    wxDouble x = (wxDouble)wxlua_getnumbertype(L, 2);
    // get this
    wxGraphicsContext * self = (wxGraphicsContext *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsContext);
    // call Clip
    self->Clip(x, y, w, h);

    return 0;
}


#if (wxLUA_USE_wxRegion) && (wxUSE_GRAPHICS_CONTEXT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsContext_Clip[] = { &wxluatype_wxGraphicsContext, &wxluatype_wxRegion, NULL };
static int LUACALL wxLua_wxGraphicsContext_Clip(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsContext_Clip[1] = {{ wxLua_wxGraphicsContext_Clip, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxGraphicsContext_Clip }};
//     virtual void Clip( const wxRegion &region );// = 0;
static int LUACALL wxLua_wxGraphicsContext_Clip(lua_State *L)
{
    // const wxRegion region
    const wxRegion * region = (const wxRegion *)wxluaT_getuserdatatype(L, 2, wxluatype_wxRegion);
    // get this
    wxGraphicsContext * self = (wxGraphicsContext *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsContext);
    // call Clip
    self->Clip(*region);

    return 0;
}

#endif // (wxLUA_USE_wxRegion) && (wxUSE_GRAPHICS_CONTEXT)

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsContext_ConcatTransform[] = { &wxluatype_wxGraphicsContext, &wxluatype_wxGraphicsMatrix, NULL };
static int LUACALL wxLua_wxGraphicsContext_ConcatTransform(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsContext_ConcatTransform[1] = {{ wxLua_wxGraphicsContext_ConcatTransform, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxGraphicsContext_ConcatTransform }};
//     virtual void ConcatTransform( const wxGraphicsMatrix& matrix );// = 0;
static int LUACALL wxLua_wxGraphicsContext_ConcatTransform(lua_State *L)
{
    // const wxGraphicsMatrix matrix
    const wxGraphicsMatrix * matrix = (const wxGraphicsMatrix *)wxluaT_getuserdatatype(L, 2, wxluatype_wxGraphicsMatrix);
    // get this
    wxGraphicsContext * self = (wxGraphicsContext *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsContext);
    // call ConcatTransform
    self->ConcatTransform(*matrix);

    return 0;
}

static int LUACALL wxLua_wxGraphicsContext_Create5(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsContext_Create5[1] = {{ wxLua_wxGraphicsContext_Create5, WXLUAMETHOD_METHOD|WXLUAMETHOD_STATIC, 0, 0, g_wxluaargtypeArray_None }};
//     static %gc wxGraphicsContext* Create();
static int LUACALL wxLua_wxGraphicsContext_Create5(lua_State *L)
{
    // call Create
    wxGraphicsContext* returns = (wxGraphicsContext*)wxGraphicsContext::Create();
    if (!wxluaO_isgcobject(L, returns)) wxluaO_addgcobject(L, returns, wxluatype_wxGraphicsContext);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxGraphicsContext);

    return 1;
}


#if (((wxUSE_GRAPHICS_CONTEXT) && (wxUSE_IMAGE)) && (wxLUA_USE_wxImage && wxUSE_IMAGE)) && (wxUSE_GRAPHICS_CONTEXT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsContext_Create4[] = { &wxluatype_wxImage, NULL };
static int LUACALL wxLua_wxGraphicsContext_Create4(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsContext_Create4[1] = {{ wxLua_wxGraphicsContext_Create4, WXLUAMETHOD_METHOD|WXLUAMETHOD_STATIC, 1, 1, s_wxluatypeArray_wxLua_wxGraphicsContext_Create4 }};
//     static %gc wxGraphicsContext* Create(wxImage& image);
static int LUACALL wxLua_wxGraphicsContext_Create4(lua_State *L)
{
    // wxImage image
    wxImage * image = (wxImage *)wxluaT_getuserdatatype(L, 1, wxluatype_wxImage);
    // call Create
    wxGraphicsContext* returns = (wxGraphicsContext*)wxGraphicsContext::Create(*image);
    if (!wxluaO_isgcobject(L, returns)) wxluaO_addgcobject(L, returns, wxluatype_wxGraphicsContext);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxGraphicsContext);

    return 1;
}

#endif // (((wxUSE_GRAPHICS_CONTEXT) && (wxUSE_IMAGE)) && (wxLUA_USE_wxImage && wxUSE_IMAGE)) && (wxUSE_GRAPHICS_CONTEXT)

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsContext_Create3[] = { &wxluatype_wxWindow, NULL };
static int LUACALL wxLua_wxGraphicsContext_Create3(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsContext_Create3[1] = {{ wxLua_wxGraphicsContext_Create3, WXLUAMETHOD_METHOD|WXLUAMETHOD_STATIC, 1, 1, s_wxluatypeArray_wxLua_wxGraphicsContext_Create3 }};
//     static %gc wxGraphicsContext* Create( wxWindow* window );
static int LUACALL wxLua_wxGraphicsContext_Create3(lua_State *L)
{
    // wxWindow window
    wxWindow * window = (wxWindow *)wxluaT_getuserdatatype(L, 1, wxluatype_wxWindow);
    // call Create
    wxGraphicsContext* returns = (wxGraphicsContext*)wxGraphicsContext::Create(window);
    if (!wxluaO_isgcobject(L, returns)) wxluaO_addgcobject(L, returns, wxluatype_wxGraphicsContext);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxGraphicsContext);

    return 1;
}


#if (((defined(__WXMSW__) || defined(__WXMAC__)) && (wxLUA_USE_wxPrint && wxUSE_PRINTING_ARCHITECTURE)) && ((wxUSE_GRAPHICS_CONTEXT) && (wxUSE_PRINTING_ARCHITECTURE))) && (wxUSE_GRAPHICS_CONTEXT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsContext_Create2[] = { &wxluatype_wxPrinterDC, NULL };
static int LUACALL wxLua_wxGraphicsContext_Create2(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsContext_Create2[1] = {{ wxLua_wxGraphicsContext_Create2, WXLUAMETHOD_METHOD|WXLUAMETHOD_STATIC, 1, 1, s_wxluatypeArray_wxLua_wxGraphicsContext_Create2 }};
//     static %gc wxGraphicsContext* Create( const wxPrinterDC& dc);
static int LUACALL wxLua_wxGraphicsContext_Create2(lua_State *L)
{
    // const wxPrinterDC dc
    const wxPrinterDC * dc = (const wxPrinterDC *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPrinterDC);
    // call Create
    wxGraphicsContext* returns = (wxGraphicsContext*)wxGraphicsContext::Create(*dc);
    if (!wxluaO_isgcobject(L, returns)) wxluaO_addgcobject(L, returns, wxluatype_wxGraphicsContext);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxGraphicsContext);

    return 1;
}

#endif // (((defined(__WXMSW__) || defined(__WXMAC__)) && (wxLUA_USE_wxPrint && wxUSE_PRINTING_ARCHITECTURE)) && ((wxUSE_GRAPHICS_CONTEXT) && (wxUSE_PRINTING_ARCHITECTURE))) && (wxUSE_GRAPHICS_CONTEXT)

#if (wxLUA_USE_wxDC) && (wxUSE_GRAPHICS_CONTEXT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsContext_Create1[] = { &wxluatype_wxMemoryDC, NULL };
static int LUACALL wxLua_wxGraphicsContext_Create1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsContext_Create1[1] = {{ wxLua_wxGraphicsContext_Create1, WXLUAMETHOD_METHOD|WXLUAMETHOD_STATIC, 1, 1, s_wxluatypeArray_wxLua_wxGraphicsContext_Create1 }};
//     static %gc wxGraphicsContext* Create( const wxMemoryDC& dc);
static int LUACALL wxLua_wxGraphicsContext_Create1(lua_State *L)
{
    // const wxMemoryDC dc
    const wxMemoryDC * dc = (const wxMemoryDC *)wxluaT_getuserdatatype(L, 1, wxluatype_wxMemoryDC);
    // call Create
    wxGraphicsContext* returns = (wxGraphicsContext*)wxGraphicsContext::Create(*dc);
    if (!wxluaO_isgcobject(L, returns)) wxluaO_addgcobject(L, returns, wxluatype_wxGraphicsContext);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxGraphicsContext);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsContext_Create[] = { &wxluatype_wxWindowDC, NULL };
static int LUACALL wxLua_wxGraphicsContext_Create(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsContext_Create[1] = {{ wxLua_wxGraphicsContext_Create, WXLUAMETHOD_METHOD|WXLUAMETHOD_STATIC, 1, 1, s_wxluatypeArray_wxLua_wxGraphicsContext_Create }};
//     static %gc wxGraphicsContext* Create( const wxWindowDC& dc);
static int LUACALL wxLua_wxGraphicsContext_Create(lua_State *L)
{
    // const wxWindowDC dc
    const wxWindowDC * dc = (const wxWindowDC *)wxluaT_getuserdatatype(L, 1, wxluatype_wxWindowDC);
    // call Create
    wxGraphicsContext* returns = (wxGraphicsContext*)wxGraphicsContext::Create(*dc);
    if (!wxluaO_isgcobject(L, returns)) wxluaO_addgcobject(L, returns, wxluatype_wxGraphicsContext);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxGraphicsContext);

    return 1;
}

#endif // (wxLUA_USE_wxDC) && (wxUSE_GRAPHICS_CONTEXT)

#if (wxLUA_USE_wxBitmap) && (wxUSE_GRAPHICS_CONTEXT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsContext_CreateBitmap[] = { &wxluatype_wxGraphicsContext, &wxluatype_wxBitmap, NULL };
static int LUACALL wxLua_wxGraphicsContext_CreateBitmap(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsContext_CreateBitmap[1] = {{ wxLua_wxGraphicsContext_CreateBitmap, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxGraphicsContext_CreateBitmap }};
//     virtual wxGraphicsBitmap CreateBitmap( const wxBitmap &bitmap ) const;
static int LUACALL wxLua_wxGraphicsContext_CreateBitmap(lua_State *L)
{
    // const wxBitmap bitmap
    const wxBitmap * bitmap = (const wxBitmap *)wxluaT_getuserdatatype(L, 2, wxluatype_wxBitmap);
    // get this
    wxGraphicsContext * self = (wxGraphicsContext *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsContext);
    // call CreateBitmap
    // allocate a new object using the copy constructor
    wxGraphicsBitmap* returns = new wxGraphicsBitmap(self->CreateBitmap(*bitmap));
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxGraphicsBitmap);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxGraphicsBitmap);

    return 1;
}

#endif // (wxLUA_USE_wxBitmap) && (wxUSE_GRAPHICS_CONTEXT)

#if (((wxUSE_GRAPHICS_CONTEXT) && (wxUSE_IMAGE)) && (wxLUA_USE_wxImage && wxUSE_IMAGE)) && (wxUSE_GRAPHICS_CONTEXT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsContext_CreateBitmapFromImage[] = { &wxluatype_wxGraphicsContext, &wxluatype_wxImage, NULL };
static int LUACALL wxLua_wxGraphicsContext_CreateBitmapFromImage(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsContext_CreateBitmapFromImage[1] = {{ wxLua_wxGraphicsContext_CreateBitmapFromImage, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxGraphicsContext_CreateBitmapFromImage }};
//     wxGraphicsBitmap CreateBitmapFromImage(const wxImage& image) const;
static int LUACALL wxLua_wxGraphicsContext_CreateBitmapFromImage(lua_State *L)
{
    // const wxImage image
    const wxImage * image = (const wxImage *)wxluaT_getuserdatatype(L, 2, wxluatype_wxImage);
    // get this
    wxGraphicsContext * self = (wxGraphicsContext *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsContext);
    // call CreateBitmapFromImage
    // allocate a new object using the copy constructor
    wxGraphicsBitmap* returns = new wxGraphicsBitmap(self->CreateBitmapFromImage(*image));
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxGraphicsBitmap);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxGraphicsBitmap);

    return 1;
}

#endif // (((wxUSE_GRAPHICS_CONTEXT) && (wxUSE_IMAGE)) && (wxLUA_USE_wxImage && wxUSE_IMAGE)) && (wxUSE_GRAPHICS_CONTEXT)

#if (wxLUA_USE_wxColourPenBrush) && (wxUSE_GRAPHICS_CONTEXT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsContext_CreateBrush[] = { &wxluatype_wxGraphicsContext, &wxluatype_wxBrush, NULL };
static int LUACALL wxLua_wxGraphicsContext_CreateBrush(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsContext_CreateBrush[1] = {{ wxLua_wxGraphicsContext_CreateBrush, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxGraphicsContext_CreateBrush }};
//     virtual wxGraphicsBrush CreateBrush(const wxBrush& brush ) const;
static int LUACALL wxLua_wxGraphicsContext_CreateBrush(lua_State *L)
{
    // const wxBrush brush
    const wxBrush * brush = (const wxBrush *)wxluaT_getuserdatatype(L, 2, wxluatype_wxBrush);
    // get this
    wxGraphicsContext * self = (wxGraphicsContext *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsContext);
    // call CreateBrush
    // allocate a new object using the copy constructor
    wxGraphicsBrush* returns = new wxGraphicsBrush(self->CreateBrush(*brush));
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxGraphicsBrush);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxGraphicsBrush);

    return 1;
}

#endif // (wxLUA_USE_wxColourPenBrush) && (wxUSE_GRAPHICS_CONTEXT)

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsContext_CreateFont2[] = { &wxluatype_wxGraphicsContext, &wxluatype_TNUMBER, &wxluatype_TSTRING, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxGraphicsContext_CreateFont2(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsContext_CreateFont2[1] = {{ wxLua_wxGraphicsContext_CreateFont2, WXLUAMETHOD_METHOD, 3, 4, s_wxluatypeArray_wxLua_wxGraphicsContext_CreateFont2 }};
//                                       int flags = wxFONTFLAG_DEFAULT) const;
static int LUACALL wxLua_wxGraphicsContext_CreateFont2(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int flags = wxFONTFLAG_DEFAULT
    int flags = (argCount >= 4 ? (int)wxlua_getnumbertype(L, 4) : wxFONTFLAG_DEFAULT);
    // const wxString facename
    const wxString facename = wxlua_getwxStringtype(L, 3);
    // double sizeInPixels
    double sizeInPixels = (double)wxlua_getnumbertype(L, 2);
    // get this
    wxGraphicsContext * self = (wxGraphicsContext *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsContext);
    // call CreateFont
    // allocate a new object using the copy constructor
    wxGraphicsFont* returns = new wxGraphicsFont(self->CreateFont(sizeInPixels, facename, flags));
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxGraphicsFont);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxGraphicsFont);

    return 1;
}


#if ((wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxFont)) && (wxUSE_GRAPHICS_CONTEXT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsContext_CreateFont1[] = { &wxluatype_wxGraphicsContext, &wxluatype_wxFont, &wxluatype_wxColour, NULL };
static int LUACALL wxLua_wxGraphicsContext_CreateFont1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsContext_CreateFont1[1] = {{ wxLua_wxGraphicsContext_CreateFont1, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxGraphicsContext_CreateFont1 }};
//     virtual wxGraphicsFont CreateFont( const wxFont &font, const wxColour &col) const;
static int LUACALL wxLua_wxGraphicsContext_CreateFont1(lua_State *L)
{
    // const wxColour col
    const wxColour * col = (const wxColour *)wxluaT_getuserdatatype(L, 3, wxluatype_wxColour);
    // const wxFont font
    const wxFont * font = (const wxFont *)wxluaT_getuserdatatype(L, 2, wxluatype_wxFont);
    // get this
    wxGraphicsContext * self = (wxGraphicsContext *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsContext);
    // call CreateFont
    // allocate a new object using the copy constructor
    wxGraphicsFont* returns = new wxGraphicsFont(self->CreateFont(*font, *col));
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxGraphicsFont);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxGraphicsFont);

    return 1;
}

#endif // ((wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxFont)) && (wxUSE_GRAPHICS_CONTEXT)

#if (wxLUA_USE_wxFont) && (wxUSE_GRAPHICS_CONTEXT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsContext_CreateFont[] = { &wxluatype_wxGraphicsContext, &wxluatype_wxFont, NULL };
static int LUACALL wxLua_wxGraphicsContext_CreateFont(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsContext_CreateFont[1] = {{ wxLua_wxGraphicsContext_CreateFont, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxGraphicsContext_CreateFont }};
//     virtual wxGraphicsFont CreateFont( const wxFont &font) const;// , const wxColour &col = *wxBLACK ) const;
static int LUACALL wxLua_wxGraphicsContext_CreateFont(lua_State *L)
{
    // const wxFont font
    const wxFont * font = (const wxFont *)wxluaT_getuserdatatype(L, 2, wxluatype_wxFont);
    // get this
    wxGraphicsContext * self = (wxGraphicsContext *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsContext);
    // call CreateFont
    // allocate a new object using the copy constructor
    wxGraphicsFont* returns = new wxGraphicsFont(self->CreateFont(*font));
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxGraphicsFont);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxGraphicsFont);

    return 1;
}

#endif // (wxLUA_USE_wxFont) && (wxUSE_GRAPHICS_CONTEXT)

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsContext_CreateFromNative[] = { &wxluatype_TLIGHTUSERDATA, NULL };
static int LUACALL wxLua_wxGraphicsContext_CreateFromNative(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsContext_CreateFromNative[1] = {{ wxLua_wxGraphicsContext_CreateFromNative, WXLUAMETHOD_METHOD|WXLUAMETHOD_STATIC, 1, 1, s_wxluatypeArray_wxLua_wxGraphicsContext_CreateFromNative }};
//     static %gc wxGraphicsContext* CreateFromNative( void * context );
static int LUACALL wxLua_wxGraphicsContext_CreateFromNative(lua_State *L)
{
    // void context
    void * context = (void *)wxlua_touserdata(L, 1);
    // call CreateFromNative
    wxGraphicsContext* returns = (wxGraphicsContext*)wxGraphicsContext::CreateFromNative(context);
    if (!wxluaO_isgcobject(L, returns)) wxluaO_addgcobject(L, returns, wxluatype_wxGraphicsContext);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxGraphicsContext);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsContext_CreateFromNativeWindow[] = { &wxluatype_TLIGHTUSERDATA, NULL };
static int LUACALL wxLua_wxGraphicsContext_CreateFromNativeWindow(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsContext_CreateFromNativeWindow[1] = {{ wxLua_wxGraphicsContext_CreateFromNativeWindow, WXLUAMETHOD_METHOD|WXLUAMETHOD_STATIC, 1, 1, s_wxluatypeArray_wxLua_wxGraphicsContext_CreateFromNativeWindow }};
//     static %gc wxGraphicsContext* CreateFromNativeWindow( void * window );
static int LUACALL wxLua_wxGraphicsContext_CreateFromNativeWindow(lua_State *L)
{
    // void window
    void * window = (void *)wxlua_touserdata(L, 1);
    // call CreateFromNativeWindow
    wxGraphicsContext* returns = (wxGraphicsContext*)wxGraphicsContext::CreateFromNativeWindow(window);
    if (!wxluaO_isgcobject(L, returns)) wxluaO_addgcobject(L, returns, wxluatype_wxGraphicsContext);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxGraphicsContext);

    return 1;
}


#if (((wxCHECK_VERSION(3,1,1)) && (wxUSE_GRAPHICS_CONTEXT)) && (wxLUA_USE_wxDC)) && (wxUSE_GRAPHICS_CONTEXT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsContext_CreateFromUnknownDC[] = { &wxluatype_wxDC, NULL };
static int LUACALL wxLua_wxGraphicsContext_CreateFromUnknownDC(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsContext_CreateFromUnknownDC[1] = {{ wxLua_wxGraphicsContext_CreateFromUnknownDC, WXLUAMETHOD_METHOD|WXLUAMETHOD_STATIC, 1, 1, s_wxluatypeArray_wxLua_wxGraphicsContext_CreateFromUnknownDC }};
//     %wxchkver_3_1_1 static %gc wxGraphicsContext* CreateFromUnknownDC(const wxDC& dc);
static int LUACALL wxLua_wxGraphicsContext_CreateFromUnknownDC(lua_State *L)
{
    // const wxDC dc
    const wxDC * dc = (const wxDC *)wxluaT_getuserdatatype(L, 1, wxluatype_wxDC);
    // call CreateFromUnknownDC
    wxGraphicsContext* returns = (wxGraphicsContext*)wxGraphicsContext::CreateFromUnknownDC(*dc);
    if (!wxluaO_isgcobject(L, returns)) wxluaO_addgcobject(L, returns, wxluatype_wxGraphicsContext);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxGraphicsContext);

    return 1;
}

#endif // (((wxCHECK_VERSION(3,1,1)) && (wxUSE_GRAPHICS_CONTEXT)) && (wxLUA_USE_wxDC)) && (wxUSE_GRAPHICS_CONTEXT)

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsContext_CreateLinearGradientBrush1[] = { &wxluatype_wxGraphicsContext, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_wxGraphicsGradientStops, NULL };
static int LUACALL wxLua_wxGraphicsContext_CreateLinearGradientBrush1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsContext_CreateLinearGradientBrush1[1] = {{ wxLua_wxGraphicsContext_CreateLinearGradientBrush1, WXLUAMETHOD_METHOD, 6, 6, s_wxluatypeArray_wxLua_wxGraphicsContext_CreateLinearGradientBrush1 }};
//                                               const wxGraphicsGradientStops& stops) const;
static int LUACALL wxLua_wxGraphicsContext_CreateLinearGradientBrush1(lua_State *L)
{
    // const wxGraphicsGradientStops stops
    const wxGraphicsGradientStops * stops = (const wxGraphicsGradientStops *)wxluaT_getuserdatatype(L, 6, wxluatype_wxGraphicsGradientStops);
    // wxDouble y2
    wxDouble y2 = (wxDouble)wxlua_getnumbertype(L, 5);
    // wxDouble x2
    wxDouble x2 = (wxDouble)wxlua_getnumbertype(L, 4);
    // wxDouble y1
    wxDouble y1 = (wxDouble)wxlua_getnumbertype(L, 3);
    // wxDouble x1
    wxDouble x1 = (wxDouble)wxlua_getnumbertype(L, 2);
    // get this
    wxGraphicsContext * self = (wxGraphicsContext *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsContext);
    // call CreateLinearGradientBrush
    // allocate a new object using the copy constructor
    wxGraphicsBrush* returns = new wxGraphicsBrush(self->CreateLinearGradientBrush(x1, y1, x2, y2, *stops));
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxGraphicsBrush);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxGraphicsBrush);

    return 1;
}


#if (wxLUA_USE_wxColourPenBrush) && (wxUSE_GRAPHICS_CONTEXT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsContext_CreateLinearGradientBrush[] = { &wxluatype_wxGraphicsContext, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_wxColour, &wxluatype_wxColour, NULL };
static int LUACALL wxLua_wxGraphicsContext_CreateLinearGradientBrush(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsContext_CreateLinearGradientBrush[1] = {{ wxLua_wxGraphicsContext_CreateLinearGradientBrush, WXLUAMETHOD_METHOD, 7, 7, s_wxluatypeArray_wxLua_wxGraphicsContext_CreateLinearGradientBrush }};
//                                               const wxColour& c1, const wxColour& c2) const;
static int LUACALL wxLua_wxGraphicsContext_CreateLinearGradientBrush(lua_State *L)
{
    // const wxColour c2
    const wxColour * c2 = (const wxColour *)wxluaT_getuserdatatype(L, 7, wxluatype_wxColour);
    // const wxColour c1
    const wxColour * c1 = (const wxColour *)wxluaT_getuserdatatype(L, 6, wxluatype_wxColour);
    // wxDouble y2
    wxDouble y2 = (wxDouble)wxlua_getnumbertype(L, 5);
    // wxDouble x2
    wxDouble x2 = (wxDouble)wxlua_getnumbertype(L, 4);
    // wxDouble y1
    wxDouble y1 = (wxDouble)wxlua_getnumbertype(L, 3);
    // wxDouble x1
    wxDouble x1 = (wxDouble)wxlua_getnumbertype(L, 2);
    // get this
    wxGraphicsContext * self = (wxGraphicsContext *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsContext);
    // call CreateLinearGradientBrush
    // allocate a new object using the copy constructor
    wxGraphicsBrush* returns = new wxGraphicsBrush(self->CreateLinearGradientBrush(x1, y1, x2, y2, *c1, *c2));
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxGraphicsBrush);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxGraphicsBrush);

    return 1;
}

#endif // (wxLUA_USE_wxColourPenBrush) && (wxUSE_GRAPHICS_CONTEXT)

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsContext_CreateMatrix[] = { &wxluatype_wxGraphicsContext, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxGraphicsContext_CreateMatrix(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsContext_CreateMatrix[1] = {{ wxLua_wxGraphicsContext_CreateMatrix, WXLUAMETHOD_METHOD, 1, 7, s_wxluatypeArray_wxLua_wxGraphicsContext_CreateMatrix }};
//                                            wxDouble tx=0.0, wxDouble ty=0.0) const;
static int LUACALL wxLua_wxGraphicsContext_CreateMatrix(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // wxDouble ty = 0.0
    wxDouble ty = (argCount >= 7 ? (wxDouble)wxlua_getnumbertype(L, 7) : 0.0);
    // wxDouble tx = 0.0
    wxDouble tx = (argCount >= 6 ? (wxDouble)wxlua_getnumbertype(L, 6) : 0.0);
    // wxDouble d = 1.0
    wxDouble d = (argCount >= 5 ? (wxDouble)wxlua_getnumbertype(L, 5) : 1.0);
    // wxDouble c = 0.0
    wxDouble c = (argCount >= 4 ? (wxDouble)wxlua_getnumbertype(L, 4) : 0.0);
    // wxDouble b = 0.0
    wxDouble b = (argCount >= 3 ? (wxDouble)wxlua_getnumbertype(L, 3) : 0.0);
    // wxDouble a = 1.0
    wxDouble a = (argCount >= 2 ? (wxDouble)wxlua_getnumbertype(L, 2) : 1.0);
    // get this
    wxGraphicsContext * self = (wxGraphicsContext *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsContext);
    // call CreateMatrix
    // allocate a new object using the copy constructor
    wxGraphicsMatrix* returns = new wxGraphicsMatrix(self->CreateMatrix(a, b, c, d, tx, ty));
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxGraphicsMatrix);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxGraphicsMatrix);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsContext_CreatePath[] = { &wxluatype_wxGraphicsContext, NULL };
static int LUACALL wxLua_wxGraphicsContext_CreatePath(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsContext_CreatePath[1] = {{ wxLua_wxGraphicsContext_CreatePath, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxGraphicsContext_CreatePath }};
//     wxGraphicsPath CreatePath() const;
static int LUACALL wxLua_wxGraphicsContext_CreatePath(lua_State *L)
{
    // get this
    wxGraphicsContext * self = (wxGraphicsContext *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsContext);
    // call CreatePath
    // allocate a new object using the copy constructor
    wxGraphicsPath* returns = new wxGraphicsPath(self->CreatePath());
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxGraphicsPath);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxGraphicsPath);

    return 1;
}


#if ((wxCHECK_VERSION(3,1,1)) && (wxUSE_GRAPHICS_CONTEXT)) && (wxUSE_GRAPHICS_CONTEXT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsContext_CreatePen1[] = { &wxluatype_wxGraphicsContext, &wxluatype_wxGraphicsPenInfo, NULL };
static int LUACALL wxLua_wxGraphicsContext_CreatePen1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsContext_CreatePen1[1] = {{ wxLua_wxGraphicsContext_CreatePen1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxGraphicsContext_CreatePen1 }};
//     %wxchkver_3_1_1 wxGraphicsPen CreatePen(const wxGraphicsPenInfo& info) const;
static int LUACALL wxLua_wxGraphicsContext_CreatePen1(lua_State *L)
{
    // const wxGraphicsPenInfo info
    const wxGraphicsPenInfo * info = (const wxGraphicsPenInfo *)wxluaT_getuserdatatype(L, 2, wxluatype_wxGraphicsPenInfo);
    // get this
    wxGraphicsContext * self = (wxGraphicsContext *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsContext);
    // call CreatePen
    // allocate a new object using the copy constructor
    wxGraphicsPen* returns = new wxGraphicsPen(self->CreatePen(*info));
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxGraphicsPen);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxGraphicsPen);

    return 1;
}

#endif // ((wxCHECK_VERSION(3,1,1)) && (wxUSE_GRAPHICS_CONTEXT)) && (wxUSE_GRAPHICS_CONTEXT)

#if (wxLUA_USE_wxColourPenBrush) && (wxUSE_GRAPHICS_CONTEXT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsContext_CreatePen[] = { &wxluatype_wxGraphicsContext, &wxluatype_wxPen, NULL };
static int LUACALL wxLua_wxGraphicsContext_CreatePen(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsContext_CreatePen[1] = {{ wxLua_wxGraphicsContext_CreatePen, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxGraphicsContext_CreatePen }};
//     wxGraphicsPen CreatePen(const wxPen& pen) const;
static int LUACALL wxLua_wxGraphicsContext_CreatePen(lua_State *L)
{
    // const wxPen pen
    const wxPen * pen = (const wxPen *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPen);
    // get this
    wxGraphicsContext * self = (wxGraphicsContext *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsContext);
    // call CreatePen
    // allocate a new object using the copy constructor
    wxGraphicsPen* returns = new wxGraphicsPen(self->CreatePen(*pen));
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxGraphicsPen);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxGraphicsPen);

    return 1;
}

#endif // (wxLUA_USE_wxColourPenBrush) && (wxUSE_GRAPHICS_CONTEXT)

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsContext_CreateRadialGradientBrush1[] = { &wxluatype_wxGraphicsContext, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_wxGraphicsGradientStops, NULL };
static int LUACALL wxLua_wxGraphicsContext_CreateRadialGradientBrush1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsContext_CreateRadialGradientBrush1[1] = {{ wxLua_wxGraphicsContext_CreateRadialGradientBrush1, WXLUAMETHOD_METHOD, 7, 7, s_wxluatypeArray_wxLua_wxGraphicsContext_CreateRadialGradientBrush1 }};
//                                               const wxGraphicsGradientStops& stops) const;
static int LUACALL wxLua_wxGraphicsContext_CreateRadialGradientBrush1(lua_State *L)
{
    // const wxGraphicsGradientStops stops
    const wxGraphicsGradientStops * stops = (const wxGraphicsGradientStops *)wxluaT_getuserdatatype(L, 7, wxluatype_wxGraphicsGradientStops);
    // wxDouble radius
    wxDouble radius = (wxDouble)wxlua_getnumbertype(L, 6);
    // wxDouble yc
    wxDouble yc = (wxDouble)wxlua_getnumbertype(L, 5);
    // wxDouble xc
    wxDouble xc = (wxDouble)wxlua_getnumbertype(L, 4);
    // wxDouble yo
    wxDouble yo = (wxDouble)wxlua_getnumbertype(L, 3);
    // wxDouble xo
    wxDouble xo = (wxDouble)wxlua_getnumbertype(L, 2);
    // get this
    wxGraphicsContext * self = (wxGraphicsContext *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsContext);
    // call CreateRadialGradientBrush
    // allocate a new object using the copy constructor
    wxGraphicsBrush* returns = new wxGraphicsBrush(self->CreateRadialGradientBrush(xo, yo, xc, yc, radius, *stops));
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxGraphicsBrush);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxGraphicsBrush);

    return 1;
}


#if (wxLUA_USE_wxColourPenBrush) && (wxUSE_GRAPHICS_CONTEXT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsContext_CreateRadialGradientBrush[] = { &wxluatype_wxGraphicsContext, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_wxColour, &wxluatype_wxColour, NULL };
static int LUACALL wxLua_wxGraphicsContext_CreateRadialGradientBrush(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsContext_CreateRadialGradientBrush[1] = {{ wxLua_wxGraphicsContext_CreateRadialGradientBrush, WXLUAMETHOD_METHOD, 8, 8, s_wxluatypeArray_wxLua_wxGraphicsContext_CreateRadialGradientBrush }};
//                                               const wxColour& oColor, const wxColour& cColor) const;
static int LUACALL wxLua_wxGraphicsContext_CreateRadialGradientBrush(lua_State *L)
{
    // const wxColour cColor
    const wxColour * cColor = (const wxColour *)wxluaT_getuserdatatype(L, 8, wxluatype_wxColour);
    // const wxColour oColor
    const wxColour * oColor = (const wxColour *)wxluaT_getuserdatatype(L, 7, wxluatype_wxColour);
    // wxDouble radius
    wxDouble radius = (wxDouble)wxlua_getnumbertype(L, 6);
    // wxDouble yc
    wxDouble yc = (wxDouble)wxlua_getnumbertype(L, 5);
    // wxDouble xc
    wxDouble xc = (wxDouble)wxlua_getnumbertype(L, 4);
    // wxDouble yo
    wxDouble yo = (wxDouble)wxlua_getnumbertype(L, 3);
    // wxDouble xo
    wxDouble xo = (wxDouble)wxlua_getnumbertype(L, 2);
    // get this
    wxGraphicsContext * self = (wxGraphicsContext *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsContext);
    // call CreateRadialGradientBrush
    // allocate a new object using the copy constructor
    wxGraphicsBrush* returns = new wxGraphicsBrush(self->CreateRadialGradientBrush(xo, yo, xc, yc, radius, *oColor, *cColor));
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxGraphicsBrush);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxGraphicsBrush);

    return 1;
}

#endif // (wxLUA_USE_wxColourPenBrush) && (wxUSE_GRAPHICS_CONTEXT)

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsContext_CreateSubBitmap[] = { &wxluatype_wxGraphicsContext, &wxluatype_wxGraphicsBitmap, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxGraphicsContext_CreateSubBitmap(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsContext_CreateSubBitmap[1] = {{ wxLua_wxGraphicsContext_CreateSubBitmap, WXLUAMETHOD_METHOD, 6, 6, s_wxluatypeArray_wxLua_wxGraphicsContext_CreateSubBitmap }};
//     virtual wxGraphicsBitmap CreateSubBitmap( const wxGraphicsBitmap &bitmap, wxDouble x, wxDouble y, wxDouble w, wxDouble h  ) const;
static int LUACALL wxLua_wxGraphicsContext_CreateSubBitmap(lua_State *L)
{
    // wxDouble h
    wxDouble h = (wxDouble)wxlua_getnumbertype(L, 6);
    // wxDouble w
    wxDouble w = (wxDouble)wxlua_getnumbertype(L, 5);
    // wxDouble y
    wxDouble y = (wxDouble)wxlua_getnumbertype(L, 4);
    // wxDouble x
    wxDouble x = (wxDouble)wxlua_getnumbertype(L, 3);
    // const wxGraphicsBitmap bitmap
    const wxGraphicsBitmap * bitmap = (const wxGraphicsBitmap *)wxluaT_getuserdatatype(L, 2, wxluatype_wxGraphicsBitmap);
    // get this
    wxGraphicsContext * self = (wxGraphicsContext *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsContext);
    // call CreateSubBitmap
    // allocate a new object using the copy constructor
    wxGraphicsBitmap* returns = new wxGraphicsBitmap(self->CreateSubBitmap(*bitmap, x, y, w, h));
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxGraphicsBitmap);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxGraphicsBitmap);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsContext_DisableOffset[] = { &wxluatype_wxGraphicsContext, NULL };
static int LUACALL wxLua_wxGraphicsContext_DisableOffset(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsContext_DisableOffset[1] = {{ wxLua_wxGraphicsContext_DisableOffset, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxGraphicsContext_DisableOffset }};
//     void DisableOffset();
static int LUACALL wxLua_wxGraphicsContext_DisableOffset(lua_State *L)
{
    // get this
    wxGraphicsContext * self = (wxGraphicsContext *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsContext);
    // call DisableOffset
    self->DisableOffset();

    return 0;
}


#if (wxLUA_USE_wxBitmap) && (wxUSE_GRAPHICS_CONTEXT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsContext_DrawBitmap1[] = { &wxluatype_wxGraphicsContext, &wxluatype_wxBitmap, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxGraphicsContext_DrawBitmap1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsContext_DrawBitmap1[1] = {{ wxLua_wxGraphicsContext_DrawBitmap1, WXLUAMETHOD_METHOD, 6, 6, s_wxluatypeArray_wxLua_wxGraphicsContext_DrawBitmap1 }};
//     virtual void DrawBitmap( const wxBitmap &bmp, wxDouble x, wxDouble y, wxDouble w, wxDouble h );// = 0;
static int LUACALL wxLua_wxGraphicsContext_DrawBitmap1(lua_State *L)
{
    // wxDouble h
    wxDouble h = (wxDouble)wxlua_getnumbertype(L, 6);
    // wxDouble w
    wxDouble w = (wxDouble)wxlua_getnumbertype(L, 5);
    // wxDouble y
    wxDouble y = (wxDouble)wxlua_getnumbertype(L, 4);
    // wxDouble x
    wxDouble x = (wxDouble)wxlua_getnumbertype(L, 3);
    // const wxBitmap bmp
    const wxBitmap * bmp = (const wxBitmap *)wxluaT_getuserdatatype(L, 2, wxluatype_wxBitmap);
    // get this
    wxGraphicsContext * self = (wxGraphicsContext *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsContext);
    // call DrawBitmap
    self->DrawBitmap(*bmp, x, y, w, h);

    return 0;
}

#endif // (wxLUA_USE_wxBitmap) && (wxUSE_GRAPHICS_CONTEXT)

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsContext_DrawBitmap[] = { &wxluatype_wxGraphicsContext, &wxluatype_wxGraphicsBitmap, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxGraphicsContext_DrawBitmap(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsContext_DrawBitmap[1] = {{ wxLua_wxGraphicsContext_DrawBitmap, WXLUAMETHOD_METHOD, 6, 6, s_wxluatypeArray_wxLua_wxGraphicsContext_DrawBitmap }};
//     virtual void DrawBitmap( const wxGraphicsBitmap &bmp, wxDouble x, wxDouble y, wxDouble w, wxDouble h );// = 0;
static int LUACALL wxLua_wxGraphicsContext_DrawBitmap(lua_State *L)
{
    // wxDouble h
    wxDouble h = (wxDouble)wxlua_getnumbertype(L, 6);
    // wxDouble w
    wxDouble w = (wxDouble)wxlua_getnumbertype(L, 5);
    // wxDouble y
    wxDouble y = (wxDouble)wxlua_getnumbertype(L, 4);
    // wxDouble x
    wxDouble x = (wxDouble)wxlua_getnumbertype(L, 3);
    // const wxGraphicsBitmap bmp
    const wxGraphicsBitmap * bmp = (const wxGraphicsBitmap *)wxluaT_getuserdatatype(L, 2, wxluatype_wxGraphicsBitmap);
    // get this
    wxGraphicsContext * self = (wxGraphicsContext *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsContext);
    // call DrawBitmap
    self->DrawBitmap(*bmp, x, y, w, h);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsContext_DrawEllipse[] = { &wxluatype_wxGraphicsContext, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxGraphicsContext_DrawEllipse(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsContext_DrawEllipse[1] = {{ wxLua_wxGraphicsContext_DrawEllipse, WXLUAMETHOD_METHOD, 5, 5, s_wxluatypeArray_wxLua_wxGraphicsContext_DrawEllipse }};
//     virtual void DrawEllipse( wxDouble x, wxDouble y, wxDouble w, wxDouble h);
static int LUACALL wxLua_wxGraphicsContext_DrawEllipse(lua_State *L)
{
    // wxDouble h
    wxDouble h = (wxDouble)wxlua_getnumbertype(L, 5);
    // wxDouble w
    wxDouble w = (wxDouble)wxlua_getnumbertype(L, 4);
    // wxDouble y
    wxDouble y = (wxDouble)wxlua_getnumbertype(L, 3);
    // wxDouble x
    wxDouble x = (wxDouble)wxlua_getnumbertype(L, 2);
    // get this
    wxGraphicsContext * self = (wxGraphicsContext *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsContext);
    // call DrawEllipse
    self->DrawEllipse(x, y, w, h);

    return 0;
}


#if (wxLUA_USE_wxIcon) && (wxUSE_GRAPHICS_CONTEXT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsContext_DrawIcon[] = { &wxluatype_wxGraphicsContext, &wxluatype_wxIcon, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxGraphicsContext_DrawIcon(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsContext_DrawIcon[1] = {{ wxLua_wxGraphicsContext_DrawIcon, WXLUAMETHOD_METHOD, 6, 6, s_wxluatypeArray_wxLua_wxGraphicsContext_DrawIcon }};
//     virtual void DrawIcon( const wxIcon &icon, wxDouble x, wxDouble y, wxDouble w, wxDouble h );// = 0;
static int LUACALL wxLua_wxGraphicsContext_DrawIcon(lua_State *L)
{
    // wxDouble h
    wxDouble h = (wxDouble)wxlua_getnumbertype(L, 6);
    // wxDouble w
    wxDouble w = (wxDouble)wxlua_getnumbertype(L, 5);
    // wxDouble y
    wxDouble y = (wxDouble)wxlua_getnumbertype(L, 4);
    // wxDouble x
    wxDouble x = (wxDouble)wxlua_getnumbertype(L, 3);
    // const wxIcon icon
    const wxIcon * icon = (const wxIcon *)wxluaT_getuserdatatype(L, 2, wxluatype_wxIcon);
    // get this
    wxGraphicsContext * self = (wxGraphicsContext *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsContext);
    // call DrawIcon
    self->DrawIcon(*icon, x, y, w, h);

    return 0;
}

#endif // (wxLUA_USE_wxIcon) && (wxUSE_GRAPHICS_CONTEXT)

#if (wxLUA_USE_wxDC) && (wxUSE_GRAPHICS_CONTEXT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsContext_DrawLines[] = { &wxluatype_wxGraphicsContext, &wxluatype_TTABLE, &wxluatype_TINTEGER, NULL };
static int LUACALL wxLua_wxGraphicsContext_DrawLines(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsContext_DrawLines[1] = {{ wxLua_wxGraphicsContext_DrawLines, WXLUAMETHOD_METHOD, 2, 3, s_wxluatypeArray_wxLua_wxGraphicsContext_DrawLines }};
//     virtual void DrawLines(wxPoint2DDoubleArray_FromLuaTable points, wxPolygonFillMode fillStyle = wxODDEVEN_RULE );
static int LUACALL wxLua_wxGraphicsContext_DrawLines(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // wxPolygonFillMode fillStyle = wxODDEVEN_RULE
    wxPolygonFillMode fillStyle = (argCount >= 3 ? (wxPolygonFillMode)wxlua_getenumtype(L, 3) : wxODDEVEN_RULE);
    // wxPoint2DDoubleArray_FromLuaTable points
    wxLuaSharedPtr<std::vector<wxPoint2DDouble> > points = wxlua_getwxPoint2DDoubleArray(L, 2);
    // get this
    wxGraphicsContext * self = (wxGraphicsContext *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsContext);
    // call DrawLines
    self->DrawLines((size_t)(points ? points->size() : 0), (points && (!points->empty())) ? &points->at(0) : NULL, fillStyle);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsContext_DrawPath[] = { &wxluatype_wxGraphicsContext, &wxluatype_wxGraphicsPath, &wxluatype_TINTEGER, NULL };
static int LUACALL wxLua_wxGraphicsContext_DrawPath(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsContext_DrawPath[1] = {{ wxLua_wxGraphicsContext_DrawPath, WXLUAMETHOD_METHOD, 2, 3, s_wxluatypeArray_wxLua_wxGraphicsContext_DrawPath }};
//     virtual void DrawPath( const wxGraphicsPath& path, wxPolygonFillMode fillStyle = wxODDEVEN_RULE );
static int LUACALL wxLua_wxGraphicsContext_DrawPath(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // wxPolygonFillMode fillStyle = wxODDEVEN_RULE
    wxPolygonFillMode fillStyle = (argCount >= 3 ? (wxPolygonFillMode)wxlua_getenumtype(L, 3) : wxODDEVEN_RULE);
    // const wxGraphicsPath path
    const wxGraphicsPath * path = (const wxGraphicsPath *)wxluaT_getuserdatatype(L, 2, wxluatype_wxGraphicsPath);
    // get this
    wxGraphicsContext * self = (wxGraphicsContext *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsContext);
    // call DrawPath
    self->DrawPath(*path, fillStyle);

    return 0;
}

#endif // (wxLUA_USE_wxDC) && (wxUSE_GRAPHICS_CONTEXT)

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsContext_DrawRectangle[] = { &wxluatype_wxGraphicsContext, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxGraphicsContext_DrawRectangle(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsContext_DrawRectangle[1] = {{ wxLua_wxGraphicsContext_DrawRectangle, WXLUAMETHOD_METHOD, 5, 5, s_wxluatypeArray_wxLua_wxGraphicsContext_DrawRectangle }};
//     virtual void DrawRectangle( wxDouble x, wxDouble y, wxDouble w, wxDouble h);
static int LUACALL wxLua_wxGraphicsContext_DrawRectangle(lua_State *L)
{
    // wxDouble h
    wxDouble h = (wxDouble)wxlua_getnumbertype(L, 5);
    // wxDouble w
    wxDouble w = (wxDouble)wxlua_getnumbertype(L, 4);
    // wxDouble y
    wxDouble y = (wxDouble)wxlua_getnumbertype(L, 3);
    // wxDouble x
    wxDouble x = (wxDouble)wxlua_getnumbertype(L, 2);
    // get this
    wxGraphicsContext * self = (wxGraphicsContext *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsContext);
    // call DrawRectangle
    self->DrawRectangle(x, y, w, h);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsContext_DrawRoundedRectangle[] = { &wxluatype_wxGraphicsContext, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxGraphicsContext_DrawRoundedRectangle(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsContext_DrawRoundedRectangle[1] = {{ wxLua_wxGraphicsContext_DrawRoundedRectangle, WXLUAMETHOD_METHOD, 6, 6, s_wxluatypeArray_wxLua_wxGraphicsContext_DrawRoundedRectangle }};
//     virtual void DrawRoundedRectangle( wxDouble x, wxDouble y, wxDouble w, wxDouble h, wxDouble radius);
static int LUACALL wxLua_wxGraphicsContext_DrawRoundedRectangle(lua_State *L)
{
    // wxDouble radius
    wxDouble radius = (wxDouble)wxlua_getnumbertype(L, 6);
    // wxDouble h
    wxDouble h = (wxDouble)wxlua_getnumbertype(L, 5);
    // wxDouble w
    wxDouble w = (wxDouble)wxlua_getnumbertype(L, 4);
    // wxDouble y
    wxDouble y = (wxDouble)wxlua_getnumbertype(L, 3);
    // wxDouble x
    wxDouble x = (wxDouble)wxlua_getnumbertype(L, 2);
    // get this
    wxGraphicsContext * self = (wxGraphicsContext *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsContext);
    // call DrawRoundedRectangle
    self->DrawRoundedRectangle(x, y, w, h, radius);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsContext_DrawText3[] = { &wxluatype_wxGraphicsContext, &wxluatype_TSTRING, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_wxGraphicsBrush, NULL };
static int LUACALL wxLua_wxGraphicsContext_DrawText3(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsContext_DrawText3[1] = {{ wxLua_wxGraphicsContext_DrawText3, WXLUAMETHOD_METHOD, 6, 6, s_wxluatypeArray_wxLua_wxGraphicsContext_DrawText3 }};
//                    wxDouble angle, const wxGraphicsBrush& backgroundBrush );
static int LUACALL wxLua_wxGraphicsContext_DrawText3(lua_State *L)
{
    // const wxGraphicsBrush backgroundBrush
    const wxGraphicsBrush * backgroundBrush = (const wxGraphicsBrush *)wxluaT_getuserdatatype(L, 6, wxluatype_wxGraphicsBrush);
    // wxDouble angle
    wxDouble angle = (wxDouble)wxlua_getnumbertype(L, 5);
    // wxDouble y
    wxDouble y = (wxDouble)wxlua_getnumbertype(L, 4);
    // wxDouble x
    wxDouble x = (wxDouble)wxlua_getnumbertype(L, 3);
    // const wxString str
    const wxString str = wxlua_getwxStringtype(L, 2);
    // get this
    wxGraphicsContext * self = (wxGraphicsContext *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsContext);
    // call DrawText
    self->DrawText(str, x, y, angle, *backgroundBrush);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsContext_DrawText2[] = { &wxluatype_wxGraphicsContext, &wxluatype_TSTRING, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_wxGraphicsBrush, NULL };
static int LUACALL wxLua_wxGraphicsContext_DrawText2(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsContext_DrawText2[1] = {{ wxLua_wxGraphicsContext_DrawText2, WXLUAMETHOD_METHOD, 5, 5, s_wxluatypeArray_wxLua_wxGraphicsContext_DrawText2 }};
//                    const wxGraphicsBrush& backgroundBrush );
static int LUACALL wxLua_wxGraphicsContext_DrawText2(lua_State *L)
{
    // const wxGraphicsBrush backgroundBrush
    const wxGraphicsBrush * backgroundBrush = (const wxGraphicsBrush *)wxluaT_getuserdatatype(L, 5, wxluatype_wxGraphicsBrush);
    // wxDouble y
    wxDouble y = (wxDouble)wxlua_getnumbertype(L, 4);
    // wxDouble x
    wxDouble x = (wxDouble)wxlua_getnumbertype(L, 3);
    // const wxString str
    const wxString str = wxlua_getwxStringtype(L, 2);
    // get this
    wxGraphicsContext * self = (wxGraphicsContext *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsContext);
    // call DrawText
    self->DrawText(str, x, y, *backgroundBrush);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsContext_DrawText1[] = { &wxluatype_wxGraphicsContext, &wxluatype_TSTRING, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxGraphicsContext_DrawText1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsContext_DrawText1[1] = {{ wxLua_wxGraphicsContext_DrawText1, WXLUAMETHOD_METHOD, 5, 5, s_wxluatypeArray_wxLua_wxGraphicsContext_DrawText1 }};
//     void DrawText( const wxString &str, wxDouble x, wxDouble y, wxDouble angle );
static int LUACALL wxLua_wxGraphicsContext_DrawText1(lua_State *L)
{
    // wxDouble angle
    wxDouble angle = (wxDouble)wxlua_getnumbertype(L, 5);
    // wxDouble y
    wxDouble y = (wxDouble)wxlua_getnumbertype(L, 4);
    // wxDouble x
    wxDouble x = (wxDouble)wxlua_getnumbertype(L, 3);
    // const wxString str
    const wxString str = wxlua_getwxStringtype(L, 2);
    // get this
    wxGraphicsContext * self = (wxGraphicsContext *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsContext);
    // call DrawText
    self->DrawText(str, x, y, angle);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsContext_DrawText[] = { &wxluatype_wxGraphicsContext, &wxluatype_TSTRING, &wxluatype_TNUMBER, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxGraphicsContext_DrawText(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsContext_DrawText[1] = {{ wxLua_wxGraphicsContext_DrawText, WXLUAMETHOD_METHOD, 4, 4, s_wxluatypeArray_wxLua_wxGraphicsContext_DrawText }};
//     void DrawText( const wxString &str, wxDouble x, wxDouble y );
static int LUACALL wxLua_wxGraphicsContext_DrawText(lua_State *L)
{
    // wxDouble y
    wxDouble y = (wxDouble)wxlua_getnumbertype(L, 4);
    // wxDouble x
    wxDouble x = (wxDouble)wxlua_getnumbertype(L, 3);
    // const wxString str
    const wxString str = wxlua_getwxStringtype(L, 2);
    // get this
    wxGraphicsContext * self = (wxGraphicsContext *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsContext);
    // call DrawText
    self->DrawText(str, x, y);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsContext_EnableOffset[] = { &wxluatype_wxGraphicsContext, &wxluatype_TBOOLEAN, NULL };
static int LUACALL wxLua_wxGraphicsContext_EnableOffset(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsContext_EnableOffset[1] = {{ wxLua_wxGraphicsContext_EnableOffset, WXLUAMETHOD_METHOD, 1, 2, s_wxluatypeArray_wxLua_wxGraphicsContext_EnableOffset }};
//     virtual void EnableOffset(bool enable = true);
static int LUACALL wxLua_wxGraphicsContext_EnableOffset(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // bool enable = true
    bool enable = (argCount >= 2 ? wxlua_getbooleantype(L, 2) : true);
    // get this
    wxGraphicsContext * self = (wxGraphicsContext *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsContext);
    // call EnableOffset
    self->EnableOffset(enable);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsContext_EndDoc[] = { &wxluatype_wxGraphicsContext, NULL };
static int LUACALL wxLua_wxGraphicsContext_EndDoc(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsContext_EndDoc[1] = {{ wxLua_wxGraphicsContext_EndDoc, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxGraphicsContext_EndDoc }};
//     virtual void EndDoc();
static int LUACALL wxLua_wxGraphicsContext_EndDoc(lua_State *L)
{
    // get this
    wxGraphicsContext * self = (wxGraphicsContext *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsContext);
    // call EndDoc
    self->EndDoc();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsContext_EndLayer[] = { &wxluatype_wxGraphicsContext, NULL };
static int LUACALL wxLua_wxGraphicsContext_EndLayer(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsContext_EndLayer[1] = {{ wxLua_wxGraphicsContext_EndLayer, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxGraphicsContext_EndLayer }};
//     virtual void EndLayer();// = 0;
static int LUACALL wxLua_wxGraphicsContext_EndLayer(lua_State *L)
{
    // get this
    wxGraphicsContext * self = (wxGraphicsContext *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsContext);
    // call EndLayer
    self->EndLayer();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsContext_EndPage[] = { &wxluatype_wxGraphicsContext, NULL };
static int LUACALL wxLua_wxGraphicsContext_EndPage(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsContext_EndPage[1] = {{ wxLua_wxGraphicsContext_EndPage, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxGraphicsContext_EndPage }};
//     virtual void EndPage();
static int LUACALL wxLua_wxGraphicsContext_EndPage(lua_State *L)
{
    // get this
    wxGraphicsContext * self = (wxGraphicsContext *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsContext);
    // call EndPage
    self->EndPage();

    return 0;
}


#if (wxLUA_USE_wxDC) && (wxUSE_GRAPHICS_CONTEXT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsContext_FillPath[] = { &wxluatype_wxGraphicsContext, &wxluatype_wxGraphicsPath, &wxluatype_TINTEGER, NULL };
static int LUACALL wxLua_wxGraphicsContext_FillPath(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsContext_FillPath[1] = {{ wxLua_wxGraphicsContext_FillPath, WXLUAMETHOD_METHOD, 2, 3, s_wxluatypeArray_wxLua_wxGraphicsContext_FillPath }};
//     virtual void FillPath( const wxGraphicsPath& path, wxPolygonFillMode fillStyle = wxODDEVEN_RULE );// = 0;
static int LUACALL wxLua_wxGraphicsContext_FillPath(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // wxPolygonFillMode fillStyle = wxODDEVEN_RULE
    wxPolygonFillMode fillStyle = (argCount >= 3 ? (wxPolygonFillMode)wxlua_getenumtype(L, 3) : wxODDEVEN_RULE);
    // const wxGraphicsPath path
    const wxGraphicsPath * path = (const wxGraphicsPath *)wxluaT_getuserdatatype(L, 2, wxluatype_wxGraphicsPath);
    // get this
    wxGraphicsContext * self = (wxGraphicsContext *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsContext);
    // call FillPath
    self->FillPath(*path, fillStyle);

    return 0;
}

#endif // (wxLUA_USE_wxDC) && (wxUSE_GRAPHICS_CONTEXT)

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsContext_Flush[] = { &wxluatype_wxGraphicsContext, NULL };
static int LUACALL wxLua_wxGraphicsContext_Flush(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsContext_Flush[1] = {{ wxLua_wxGraphicsContext_Flush, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxGraphicsContext_Flush }};
//     virtual void Flush();
static int LUACALL wxLua_wxGraphicsContext_Flush(lua_State *L)
{
    // get this
    wxGraphicsContext * self = (wxGraphicsContext *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsContext);
    // call Flush
    self->Flush();

    return 0;
}


#if (0) && (wxUSE_GRAPHICS_CONTEXT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsContext_GetAlpha[] = { &wxluatype_wxGraphicsContext, NULL };
static int LUACALL wxLua_wxGraphicsContext_GetAlpha(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsContext_GetAlpha[1] = {{ wxLua_wxGraphicsContext_GetAlpha, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxGraphicsContext_GetAlpha }};
//     virtual wxDouble GetAlpha() const;
static int LUACALL wxLua_wxGraphicsContext_GetAlpha(lua_State *L)
{
    // get this
    wxGraphicsContext * self = (wxGraphicsContext *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsContext);
    // call GetAlpha
    wxDouble returns = (self->GetAlpha());
    // push the result floating point number
    lua_pushnumber(L, returns);

    return 1;
}

#endif // (0) && (wxUSE_GRAPHICS_CONTEXT)

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsContext_GetAntialiasMode[] = { &wxluatype_wxGraphicsContext, NULL };
static int LUACALL wxLua_wxGraphicsContext_GetAntialiasMode(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsContext_GetAntialiasMode[1] = {{ wxLua_wxGraphicsContext_GetAntialiasMode, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxGraphicsContext_GetAntialiasMode }};
//     virtual wxAntialiasMode GetAntialiasMode() const;
static int LUACALL wxLua_wxGraphicsContext_GetAntialiasMode(lua_State *L)
{
    // get this
    wxGraphicsContext * self = (wxGraphicsContext *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsContext);
    // call GetAntialiasMode
    wxAntialiasMode returns = (self->GetAntialiasMode());
    // push the result number
#if LUA_VERSION_NUM >= 503
if ((double)(lua_Integer)returns == (double)returns) {
    // Exactly representable as lua_Integer
    lua_pushinteger(L, returns);
} else
#endif
{
    lua_pushnumber(L, returns);
}

    return 1;
}


#if (wxCHECK_VERSION(3,1,1)) && (wxUSE_GRAPHICS_CONTEXT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsContext_GetClipBox[] = { &wxluatype_wxGraphicsContext, &wxluatype_TLIGHTUSERDATA, &wxluatype_TLIGHTUSERDATA, &wxluatype_TLIGHTUSERDATA, &wxluatype_TLIGHTUSERDATA, NULL };
static int LUACALL wxLua_wxGraphicsContext_GetClipBox(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsContext_GetClipBox[1] = {{ wxLua_wxGraphicsContext_GetClipBox, WXLUAMETHOD_METHOD, 5, 5, s_wxluatypeArray_wxLua_wxGraphicsContext_GetClipBox }};
//     %wxchkver_3_1_1 virtual void GetClipBox(wxDouble* x, wxDouble* y, wxDouble* w, wxDouble* h);// = 0;
static int LUACALL wxLua_wxGraphicsContext_GetClipBox(lua_State *L)
{
    // wxDouble h
    wxDouble * h = (wxDouble *)wxlua_touserdata(L, 5);
    // wxDouble w
    wxDouble * w = (wxDouble *)wxlua_touserdata(L, 4);
    // wxDouble y
    wxDouble * y = (wxDouble *)wxlua_touserdata(L, 3);
    // wxDouble x
    wxDouble * x = (wxDouble *)wxlua_touserdata(L, 2);
    // get this
    wxGraphicsContext * self = (wxGraphicsContext *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsContext);
    // call GetClipBox
    self->GetClipBox(x, y, w, h);

    return 0;
}

#endif // (wxCHECK_VERSION(3,1,1)) && (wxUSE_GRAPHICS_CONTEXT)

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsContext_GetCompositionMode[] = { &wxluatype_wxGraphicsContext, NULL };
static int LUACALL wxLua_wxGraphicsContext_GetCompositionMode(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsContext_GetCompositionMode[1] = {{ wxLua_wxGraphicsContext_GetCompositionMode, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxGraphicsContext_GetCompositionMode }};
//     virtual wxCompositionMode GetCompositionMode() const;
static int LUACALL wxLua_wxGraphicsContext_GetCompositionMode(lua_State *L)
{
    // get this
    wxGraphicsContext * self = (wxGraphicsContext *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsContext);
    // call GetCompositionMode
    wxCompositionMode returns = (self->GetCompositionMode());
    // push the result number
#if LUA_VERSION_NUM >= 503
if ((double)(lua_Integer)returns == (double)returns) {
    // Exactly representable as lua_Integer
    lua_pushinteger(L, returns);
} else
#endif
{
    lua_pushnumber(L, returns);
}

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsContext_GetDPI[] = { &wxluatype_wxGraphicsContext, &wxluatype_TLIGHTUSERDATA, &wxluatype_TLIGHTUSERDATA, NULL };
static int LUACALL wxLua_wxGraphicsContext_GetDPI(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsContext_GetDPI[1] = {{ wxLua_wxGraphicsContext_GetDPI, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxGraphicsContext_GetDPI }};
//     virtual void GetDPI( wxDouble* dpiX, wxDouble* dpiY);
static int LUACALL wxLua_wxGraphicsContext_GetDPI(lua_State *L)
{
    // wxDouble dpiY
    wxDouble * dpiY = (wxDouble *)wxlua_touserdata(L, 3);
    // wxDouble dpiX
    wxDouble * dpiX = (wxDouble *)wxlua_touserdata(L, 2);
    // get this
    wxGraphicsContext * self = (wxGraphicsContext *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsContext);
    // call GetDPI
    self->GetDPI(dpiX, dpiY);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsContext_GetInterpolationQuality[] = { &wxluatype_wxGraphicsContext, NULL };
static int LUACALL wxLua_wxGraphicsContext_GetInterpolationQuality(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsContext_GetInterpolationQuality[1] = {{ wxLua_wxGraphicsContext_GetInterpolationQuality, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxGraphicsContext_GetInterpolationQuality }};
//     virtual wxInterpolationQuality GetInterpolationQuality() const;
static int LUACALL wxLua_wxGraphicsContext_GetInterpolationQuality(lua_State *L)
{
    // get this
    wxGraphicsContext * self = (wxGraphicsContext *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsContext);
    // call GetInterpolationQuality
    wxInterpolationQuality returns = (self->GetInterpolationQuality());
    // push the result number
#if LUA_VERSION_NUM >= 503
if ((double)(lua_Integer)returns == (double)returns) {
    // Exactly representable as lua_Integer
    lua_pushinteger(L, returns);
} else
#endif
{
    lua_pushnumber(L, returns);
}

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsContext_GetNativeContext[] = { &wxluatype_wxGraphicsContext, NULL };
static int LUACALL wxLua_wxGraphicsContext_GetNativeContext(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsContext_GetNativeContext[1] = {{ wxLua_wxGraphicsContext_GetNativeContext, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxGraphicsContext_GetNativeContext }};
//     virtual void * GetNativeContext();// = 0;
static int LUACALL wxLua_wxGraphicsContext_GetNativeContext(lua_State *L)
{
    // get this
    wxGraphicsContext * self = (wxGraphicsContext *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsContext);
    // call GetNativeContext
    void* returns = (void*)self->GetNativeContext();
    // push the result pointer
    lua_pushlightuserdata(L, (void *)returns);

    return 1;
}


#if (wxLUA_USE_wxArrayDouble) && (wxUSE_GRAPHICS_CONTEXT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsContext_GetPartialTextExtents[] = { &wxluatype_wxGraphicsContext, &wxluatype_TSTRING, &wxluatype_wxArrayDouble, NULL };
static int LUACALL wxLua_wxGraphicsContext_GetPartialTextExtents(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsContext_GetPartialTextExtents[1] = {{ wxLua_wxGraphicsContext_GetPartialTextExtents, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxGraphicsContext_GetPartialTextExtents }};
//     virtual void GetPartialTextExtents(const wxString& text, wxArrayDouble& widths) const;// = 0;
static int LUACALL wxLua_wxGraphicsContext_GetPartialTextExtents(lua_State *L)
{
    // wxArrayDouble widths
    wxArrayDouble * widths = (wxArrayDouble *)wxluaT_getuserdatatype(L, 3, wxluatype_wxArrayDouble);
    // const wxString text
    const wxString text = wxlua_getwxStringtype(L, 2);
    // get this
    wxGraphicsContext * self = (wxGraphicsContext *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsContext);
    // call GetPartialTextExtents
    self->GetPartialTextExtents(text, *widths);

    return 0;
}

#endif // (wxLUA_USE_wxArrayDouble) && (wxUSE_GRAPHICS_CONTEXT)

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsContext_GetSize[] = { &wxluatype_wxGraphicsContext, &wxluatype_TLIGHTUSERDATA, &wxluatype_TLIGHTUSERDATA, NULL };
static int LUACALL wxLua_wxGraphicsContext_GetSize(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsContext_GetSize[1] = {{ wxLua_wxGraphicsContext_GetSize, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxGraphicsContext_GetSize }};
//     void GetSize(wxDouble* width, wxDouble* height) const;
static int LUACALL wxLua_wxGraphicsContext_GetSize(lua_State *L)
{
    // wxDouble height
    wxDouble * height = (wxDouble *)wxlua_touserdata(L, 3);
    // wxDouble width
    wxDouble * width = (wxDouble *)wxlua_touserdata(L, 2);
    // get this
    wxGraphicsContext * self = (wxGraphicsContext *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsContext);
    // call GetSize
    self->GetSize(width, height);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsContext_GetTextExtent[] = { &wxluatype_wxGraphicsContext, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxGraphicsContext_GetTextExtent(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsContext_GetTextExtent[1] = {{ wxLua_wxGraphicsContext_GetTextExtent, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxGraphicsContext_GetTextExtent }};
// %override wxLua_wxGraphicsContext_GetTextExtent
// void GetTextExtent(const wxString& string, wxCoord *w, wxCoord *h, wxCoord *descent = NULL, wxCoord *externalLeading = NULL, wxFont *font = NULL)
static int LUACALL wxLua_wxGraphicsContext_GetTextExtent(lua_State *L)
{
    wxDouble externalLeading;
    wxDouble descent;
    wxDouble h;
    wxDouble w;

    wxString string = wxlua_getwxStringtype(L, 2);
    // get this
    wxGraphicsContext *self = (wxGraphicsContext *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsContext);
    // call GetTextExtent
    self->GetTextExtent(string, &w, &h, &descent, &externalLeading);
    lua_pushnumber(L, w);
    lua_pushnumber(L, h);
    lua_pushnumber(L, descent);
    lua_pushnumber(L, externalLeading);
    // return the number of parameters
    return 4;
}


static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsContext_GetTransform[] = { &wxluatype_wxGraphicsContext, NULL };
static int LUACALL wxLua_wxGraphicsContext_GetTransform(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsContext_GetTransform[1] = {{ wxLua_wxGraphicsContext_GetTransform, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxGraphicsContext_GetTransform }};
//     virtual wxGraphicsMatrix GetTransform() const;// = 0;
static int LUACALL wxLua_wxGraphicsContext_GetTransform(lua_State *L)
{
    // get this
    wxGraphicsContext * self = (wxGraphicsContext *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsContext);
    // call GetTransform
    // allocate a new object using the copy constructor
    wxGraphicsMatrix* returns = new wxGraphicsMatrix(self->GetTransform());
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxGraphicsMatrix);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxGraphicsMatrix);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsContext_OffsetEnabled[] = { &wxluatype_wxGraphicsContext, NULL };
static int LUACALL wxLua_wxGraphicsContext_OffsetEnabled(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsContext_OffsetEnabled[1] = {{ wxLua_wxGraphicsContext_OffsetEnabled, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxGraphicsContext_OffsetEnabled }};
//     bool OffsetEnabled();
static int LUACALL wxLua_wxGraphicsContext_OffsetEnabled(lua_State *L)
{
    // get this
    wxGraphicsContext * self = (wxGraphicsContext *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsContext);
    // call OffsetEnabled
    bool returns = (self->OffsetEnabled());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsContext_PopState[] = { &wxluatype_wxGraphicsContext, NULL };
static int LUACALL wxLua_wxGraphicsContext_PopState(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsContext_PopState[1] = {{ wxLua_wxGraphicsContext_PopState, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxGraphicsContext_PopState }};
//     virtual void PopState();// = 0;
static int LUACALL wxLua_wxGraphicsContext_PopState(lua_State *L)
{
    // get this
    wxGraphicsContext * self = (wxGraphicsContext *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsContext);
    // call PopState
    self->PopState();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsContext_PushState[] = { &wxluatype_wxGraphicsContext, NULL };
static int LUACALL wxLua_wxGraphicsContext_PushState(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsContext_PushState[1] = {{ wxLua_wxGraphicsContext_PushState, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxGraphicsContext_PushState }};
//     virtual void PushState();// = 0;
static int LUACALL wxLua_wxGraphicsContext_PushState(lua_State *L)
{
    // get this
    wxGraphicsContext * self = (wxGraphicsContext *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsContext);
    // call PushState
    self->PushState();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsContext_ResetClip[] = { &wxluatype_wxGraphicsContext, NULL };
static int LUACALL wxLua_wxGraphicsContext_ResetClip(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsContext_ResetClip[1] = {{ wxLua_wxGraphicsContext_ResetClip, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxGraphicsContext_ResetClip }};
//     virtual void ResetClip();// = 0;
static int LUACALL wxLua_wxGraphicsContext_ResetClip(lua_State *L)
{
    // get this
    wxGraphicsContext * self = (wxGraphicsContext *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsContext);
    // call ResetClip
    self->ResetClip();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsContext_Rotate[] = { &wxluatype_wxGraphicsContext, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxGraphicsContext_Rotate(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsContext_Rotate[1] = {{ wxLua_wxGraphicsContext_Rotate, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxGraphicsContext_Rotate }};
//     virtual void Rotate( wxDouble angle );// = 0;
static int LUACALL wxLua_wxGraphicsContext_Rotate(lua_State *L)
{
    // wxDouble angle
    wxDouble angle = (wxDouble)wxlua_getnumbertype(L, 2);
    // get this
    wxGraphicsContext * self = (wxGraphicsContext *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsContext);
    // call Rotate
    self->Rotate(angle);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsContext_Scale[] = { &wxluatype_wxGraphicsContext, &wxluatype_TNUMBER, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxGraphicsContext_Scale(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsContext_Scale[1] = {{ wxLua_wxGraphicsContext_Scale, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxGraphicsContext_Scale }};
//     virtual void Scale( wxDouble xScale , wxDouble yScale );// = 0;
static int LUACALL wxLua_wxGraphicsContext_Scale(lua_State *L)
{
    // wxDouble yScale
    wxDouble yScale = (wxDouble)wxlua_getnumbertype(L, 3);
    // wxDouble xScale
    wxDouble xScale = (wxDouble)wxlua_getnumbertype(L, 2);
    // get this
    wxGraphicsContext * self = (wxGraphicsContext *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsContext);
    // call Scale
    self->Scale(xScale, yScale);

    return 0;
}


#if (0) && (wxUSE_GRAPHICS_CONTEXT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsContext_SetAlpha[] = { &wxluatype_wxGraphicsContext, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxGraphicsContext_SetAlpha(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsContext_SetAlpha[1] = {{ wxLua_wxGraphicsContext_SetAlpha, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxGraphicsContext_SetAlpha }};
//     virtual void SetAlpha( wxDouble alpha );
static int LUACALL wxLua_wxGraphicsContext_SetAlpha(lua_State *L)
{
    // wxDouble alpha
    wxDouble alpha = (wxDouble)wxlua_getnumbertype(L, 2);
    // get this
    wxGraphicsContext * self = (wxGraphicsContext *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsContext);
    // call SetAlpha
    self->SetAlpha(alpha);

    return 0;
}

#endif // (0) && (wxUSE_GRAPHICS_CONTEXT)

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsContext_SetAntialiasMode[] = { &wxluatype_wxGraphicsContext, &wxluatype_TINTEGER, NULL };
static int LUACALL wxLua_wxGraphicsContext_SetAntialiasMode(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsContext_SetAntialiasMode[1] = {{ wxLua_wxGraphicsContext_SetAntialiasMode, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxGraphicsContext_SetAntialiasMode }};
//     virtual bool SetAntialiasMode(wxAntialiasMode antialias);// = 0;
static int LUACALL wxLua_wxGraphicsContext_SetAntialiasMode(lua_State *L)
{
    // wxAntialiasMode antialias
    wxAntialiasMode antialias = (wxAntialiasMode)wxlua_getenumtype(L, 2);
    // get this
    wxGraphicsContext * self = (wxGraphicsContext *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsContext);
    // call SetAntialiasMode
    bool returns = (self->SetAntialiasMode(antialias));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}


#if (wxLUA_USE_wxColourPenBrush) && (wxUSE_GRAPHICS_CONTEXT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsContext_SetBrush1[] = { &wxluatype_wxGraphicsContext, &wxluatype_wxBrush, NULL };
static int LUACALL wxLua_wxGraphicsContext_SetBrush1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsContext_SetBrush1[1] = {{ wxLua_wxGraphicsContext_SetBrush1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxGraphicsContext_SetBrush1 }};
//     void SetBrush( const wxBrush& brush );
static int LUACALL wxLua_wxGraphicsContext_SetBrush1(lua_State *L)
{
    // const wxBrush brush
    const wxBrush * brush = (const wxBrush *)wxluaT_getuserdatatype(L, 2, wxluatype_wxBrush);
    // get this
    wxGraphicsContext * self = (wxGraphicsContext *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsContext);
    // call SetBrush
    self->SetBrush(*brush);

    return 0;
}

#endif // (wxLUA_USE_wxColourPenBrush) && (wxUSE_GRAPHICS_CONTEXT)

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsContext_SetBrush[] = { &wxluatype_wxGraphicsContext, &wxluatype_wxGraphicsBrush, NULL };
static int LUACALL wxLua_wxGraphicsContext_SetBrush(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsContext_SetBrush[1] = {{ wxLua_wxGraphicsContext_SetBrush, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxGraphicsContext_SetBrush }};
//     virtual void SetBrush( const wxGraphicsBrush& brush );
static int LUACALL wxLua_wxGraphicsContext_SetBrush(lua_State *L)
{
    // const wxGraphicsBrush brush
    const wxGraphicsBrush * brush = (const wxGraphicsBrush *)wxluaT_getuserdatatype(L, 2, wxluatype_wxGraphicsBrush);
    // get this
    wxGraphicsContext * self = (wxGraphicsContext *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsContext);
    // call SetBrush
    self->SetBrush(*brush);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsContext_SetCompositionMode[] = { &wxluatype_wxGraphicsContext, &wxluatype_TINTEGER, NULL };
static int LUACALL wxLua_wxGraphicsContext_SetCompositionMode(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsContext_SetCompositionMode[1] = {{ wxLua_wxGraphicsContext_SetCompositionMode, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxGraphicsContext_SetCompositionMode }};
//     virtual bool SetCompositionMode(wxCompositionMode op);// = 0;
static int LUACALL wxLua_wxGraphicsContext_SetCompositionMode(lua_State *L)
{
    // wxCompositionMode op
    wxCompositionMode op = (wxCompositionMode)wxlua_getenumtype(L, 2);
    // get this
    wxGraphicsContext * self = (wxGraphicsContext *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsContext);
    // call SetCompositionMode
    bool returns = (self->SetCompositionMode(op));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}


#if ((wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxFont)) && (wxUSE_GRAPHICS_CONTEXT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsContext_SetFont1[] = { &wxluatype_wxGraphicsContext, &wxluatype_wxFont, &wxluatype_wxColour, NULL };
static int LUACALL wxLua_wxGraphicsContext_SetFont1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsContext_SetFont1[1] = {{ wxLua_wxGraphicsContext_SetFont1, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxGraphicsContext_SetFont1 }};
//     void SetFont( const wxFont& font, const wxColour& colour );
static int LUACALL wxLua_wxGraphicsContext_SetFont1(lua_State *L)
{
    // const wxColour colour
    const wxColour * colour = (const wxColour *)wxluaT_getuserdatatype(L, 3, wxluatype_wxColour);
    // const wxFont font
    const wxFont * font = (const wxFont *)wxluaT_getuserdatatype(L, 2, wxluatype_wxFont);
    // get this
    wxGraphicsContext * self = (wxGraphicsContext *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsContext);
    // call SetFont
    self->SetFont(*font, *colour);

    return 0;
}

#endif // ((wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxFont)) && (wxUSE_GRAPHICS_CONTEXT)

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsContext_SetFont[] = { &wxluatype_wxGraphicsContext, &wxluatype_wxGraphicsFont, NULL };
static int LUACALL wxLua_wxGraphicsContext_SetFont(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsContext_SetFont[1] = {{ wxLua_wxGraphicsContext_SetFont, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxGraphicsContext_SetFont }};
//     virtual void SetFont( const wxGraphicsFont& font );
static int LUACALL wxLua_wxGraphicsContext_SetFont(lua_State *L)
{
    // const wxGraphicsFont font
    const wxGraphicsFont * font = (const wxGraphicsFont *)wxluaT_getuserdatatype(L, 2, wxluatype_wxGraphicsFont);
    // get this
    wxGraphicsContext * self = (wxGraphicsContext *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsContext);
    // call SetFont
    self->SetFont(*font);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsContext_SetInterpolationQuality[] = { &wxluatype_wxGraphicsContext, &wxluatype_TINTEGER, NULL };
static int LUACALL wxLua_wxGraphicsContext_SetInterpolationQuality(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsContext_SetInterpolationQuality[1] = {{ wxLua_wxGraphicsContext_SetInterpolationQuality, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxGraphicsContext_SetInterpolationQuality }};
//     virtual bool SetInterpolationQuality(wxInterpolationQuality interpolation);// = 0;
static int LUACALL wxLua_wxGraphicsContext_SetInterpolationQuality(lua_State *L)
{
    // wxInterpolationQuality interpolation
    wxInterpolationQuality interpolation = (wxInterpolationQuality)wxlua_getenumtype(L, 2);
    // get this
    wxGraphicsContext * self = (wxGraphicsContext *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsContext);
    // call SetInterpolationQuality
    bool returns = (self->SetInterpolationQuality(interpolation));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}


#if (wxLUA_USE_wxColourPenBrush) && (wxUSE_GRAPHICS_CONTEXT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsContext_SetPen1[] = { &wxluatype_wxGraphicsContext, &wxluatype_wxPen, NULL };
static int LUACALL wxLua_wxGraphicsContext_SetPen1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsContext_SetPen1[1] = {{ wxLua_wxGraphicsContext_SetPen1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxGraphicsContext_SetPen1 }};
//     void SetPen( const wxPen& pen );
static int LUACALL wxLua_wxGraphicsContext_SetPen1(lua_State *L)
{
    // const wxPen pen
    const wxPen * pen = (const wxPen *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPen);
    // get this
    wxGraphicsContext * self = (wxGraphicsContext *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsContext);
    // call SetPen
    self->SetPen(*pen);

    return 0;
}

#endif // (wxLUA_USE_wxColourPenBrush) && (wxUSE_GRAPHICS_CONTEXT)

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsContext_SetPen[] = { &wxluatype_wxGraphicsContext, &wxluatype_wxGraphicsPen, NULL };
static int LUACALL wxLua_wxGraphicsContext_SetPen(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsContext_SetPen[1] = {{ wxLua_wxGraphicsContext_SetPen, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxGraphicsContext_SetPen }};
//     virtual void SetPen( const wxGraphicsPen& pen );
static int LUACALL wxLua_wxGraphicsContext_SetPen(lua_State *L)
{
    // const wxGraphicsPen pen
    const wxGraphicsPen * pen = (const wxGraphicsPen *)wxluaT_getuserdatatype(L, 2, wxluatype_wxGraphicsPen);
    // get this
    wxGraphicsContext * self = (wxGraphicsContext *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsContext);
    // call SetPen
    self->SetPen(*pen);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsContext_SetTransform[] = { &wxluatype_wxGraphicsContext, &wxluatype_wxGraphicsMatrix, NULL };
static int LUACALL wxLua_wxGraphicsContext_SetTransform(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsContext_SetTransform[1] = {{ wxLua_wxGraphicsContext_SetTransform, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxGraphicsContext_SetTransform }};
//     virtual void SetTransform( const wxGraphicsMatrix& matrix );// = 0;
static int LUACALL wxLua_wxGraphicsContext_SetTransform(lua_State *L)
{
    // const wxGraphicsMatrix matrix
    const wxGraphicsMatrix * matrix = (const wxGraphicsMatrix *)wxluaT_getuserdatatype(L, 2, wxluatype_wxGraphicsMatrix);
    // get this
    wxGraphicsContext * self = (wxGraphicsContext *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsContext);
    // call SetTransform
    self->SetTransform(*matrix);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsContext_ShouldOffset[] = { &wxluatype_wxGraphicsContext, NULL };
static int LUACALL wxLua_wxGraphicsContext_ShouldOffset(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsContext_ShouldOffset[1] = {{ wxLua_wxGraphicsContext_ShouldOffset, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxGraphicsContext_ShouldOffset }};
//     virtual bool ShouldOffset() const;
static int LUACALL wxLua_wxGraphicsContext_ShouldOffset(lua_State *L)
{
    // get this
    wxGraphicsContext * self = (wxGraphicsContext *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsContext);
    // call ShouldOffset
    bool returns = (self->ShouldOffset());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsContext_StartDoc[] = { &wxluatype_wxGraphicsContext, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxGraphicsContext_StartDoc(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsContext_StartDoc[1] = {{ wxLua_wxGraphicsContext_StartDoc, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxGraphicsContext_StartDoc }};
//     virtual bool StartDoc( const wxString& message );
static int LUACALL wxLua_wxGraphicsContext_StartDoc(lua_State *L)
{
    // const wxString message
    const wxString message = wxlua_getwxStringtype(L, 2);
    // get this
    wxGraphicsContext * self = (wxGraphicsContext *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsContext);
    // call StartDoc
    bool returns = (self->StartDoc(message));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsContext_StartPage[] = { &wxluatype_wxGraphicsContext, &wxluatype_TNUMBER, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxGraphicsContext_StartPage(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsContext_StartPage[1] = {{ wxLua_wxGraphicsContext_StartPage, WXLUAMETHOD_METHOD, 1, 3, s_wxluatypeArray_wxLua_wxGraphicsContext_StartPage }};
//     virtual void StartPage( wxDouble width = 0, wxDouble height = 0 );
static int LUACALL wxLua_wxGraphicsContext_StartPage(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // wxDouble height = 0
    wxDouble height = (argCount >= 3 ? (wxDouble)wxlua_getnumbertype(L, 3) : 0);
    // wxDouble width = 0
    wxDouble width = (argCount >= 2 ? (wxDouble)wxlua_getnumbertype(L, 2) : 0);
    // get this
    wxGraphicsContext * self = (wxGraphicsContext *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsContext);
    // call StartPage
    self->StartPage(width, height);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsContext_StrokeLine[] = { &wxluatype_wxGraphicsContext, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxGraphicsContext_StrokeLine(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsContext_StrokeLine[1] = {{ wxLua_wxGraphicsContext_StrokeLine, WXLUAMETHOD_METHOD, 5, 5, s_wxluatypeArray_wxLua_wxGraphicsContext_StrokeLine }};
//     virtual void StrokeLine( wxDouble x1, wxDouble y1, wxDouble x2, wxDouble y2);
static int LUACALL wxLua_wxGraphicsContext_StrokeLine(lua_State *L)
{
    // wxDouble y2
    wxDouble y2 = (wxDouble)wxlua_getnumbertype(L, 5);
    // wxDouble x2
    wxDouble x2 = (wxDouble)wxlua_getnumbertype(L, 4);
    // wxDouble y1
    wxDouble y1 = (wxDouble)wxlua_getnumbertype(L, 3);
    // wxDouble x1
    wxDouble x1 = (wxDouble)wxlua_getnumbertype(L, 2);
    // get this
    wxGraphicsContext * self = (wxGraphicsContext *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsContext);
    // call StrokeLine
    self->StrokeLine(x1, y1, x2, y2);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsContext_StrokeLines1[] = { &wxluatype_wxGraphicsContext, &wxluatype_TTABLE, &wxluatype_TTABLE, NULL };
static int LUACALL wxLua_wxGraphicsContext_StrokeLines1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsContext_StrokeLines1[1] = {{ wxLua_wxGraphicsContext_StrokeLines1, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxGraphicsContext_StrokeLines1 }};
// %override wxLua_wxGraphicsContext_StrokeLines1
//     virtual void StrokeLines( wxPoint2DDoubleArray_FromLuaTable beginPoints, wxPoint2DDoubleArray_FromLuaTable endPoints );
static int LUACALL wxLua_wxGraphicsContext_StrokeLines1(lua_State *L)
{
    // wxPoint2DDoubleArray_FromLuaTable endPoints
    wxLuaSharedPtr<std::vector<wxPoint2DDouble> > endPoints = wxlua_getwxPoint2DDoubleArray(L, 3);
    // wxPoint2DDoubleArray_FromLuaTable beginPoints
    wxLuaSharedPtr<std::vector<wxPoint2DDouble> > beginPoints = wxlua_getwxPoint2DDoubleArray(L, 2);
    // get this
    wxGraphicsContext * self = (wxGraphicsContext *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsContext);
    // call StrokeLines
    self->StrokeLines((size_t)(beginPoints ? beginPoints->size() : 0), (beginPoints && (!beginPoints->empty())) ? &beginPoints->at(0) : NULL, (endPoints && (!endPoints->empty())) ? &endPoints->at(0) : NULL);

    return 0;
}


static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsContext_StrokeLines[] = { &wxluatype_wxGraphicsContext, &wxluatype_TTABLE, NULL };
static int LUACALL wxLua_wxGraphicsContext_StrokeLines(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsContext_StrokeLines[1] = {{ wxLua_wxGraphicsContext_StrokeLines, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxGraphicsContext_StrokeLines }};
//     virtual void StrokeLines( wxPoint2DDoubleArray_FromLuaTable points );
static int LUACALL wxLua_wxGraphicsContext_StrokeLines(lua_State *L)
{
    // wxPoint2DDoubleArray_FromLuaTable points
    wxLuaSharedPtr<std::vector<wxPoint2DDouble> > points = wxlua_getwxPoint2DDoubleArray(L, 2);
    // get this
    wxGraphicsContext * self = (wxGraphicsContext *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsContext);
    // call StrokeLines
    self->StrokeLines((size_t)(points ? points->size() : 0), (points && (!points->empty())) ? &points->at(0) : NULL);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsContext_StrokePath[] = { &wxluatype_wxGraphicsContext, &wxluatype_wxGraphicsPath, NULL };
static int LUACALL wxLua_wxGraphicsContext_StrokePath(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsContext_StrokePath[1] = {{ wxLua_wxGraphicsContext_StrokePath, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxGraphicsContext_StrokePath }};
//     virtual void StrokePath( const wxGraphicsPath& path );// = 0;
static int LUACALL wxLua_wxGraphicsContext_StrokePath(lua_State *L)
{
    // const wxGraphicsPath path
    const wxGraphicsPath * path = (const wxGraphicsPath *)wxluaT_getuserdatatype(L, 2, wxluatype_wxGraphicsPath);
    // get this
    wxGraphicsContext * self = (wxGraphicsContext *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsContext);
    // call StrokePath
    self->StrokePath(*path);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsContext_Translate[] = { &wxluatype_wxGraphicsContext, &wxluatype_TNUMBER, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxGraphicsContext_Translate(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsContext_Translate[1] = {{ wxLua_wxGraphicsContext_Translate, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxGraphicsContext_Translate }};
//     virtual void Translate( wxDouble dx , wxDouble dy );// = 0;
static int LUACALL wxLua_wxGraphicsContext_Translate(lua_State *L)
{
    // wxDouble dy
    wxDouble dy = (wxDouble)wxlua_getnumbertype(L, 3);
    // wxDouble dx
    wxDouble dx = (wxDouble)wxlua_getnumbertype(L, 2);
    // get this
    wxGraphicsContext * self = (wxGraphicsContext *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsContext);
    // call Translate
    self->Translate(dx, dy);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsContext_delete[] = { &wxluatype_wxGraphicsContext, NULL };
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsContext_delete[1] = {{ wxlua_userdata_delete, WXLUAMETHOD_METHOD|WXLUAMETHOD_DELETE, 1, 1, s_wxluatypeArray_wxLua_wxGraphicsContext_delete }};




#if (wxUSE_GRAPHICS_CONTEXT)||((wxLUA_USE_wxRegion) && (wxUSE_GRAPHICS_CONTEXT))
// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsContext_Clip_overload[] =
{
    { wxLua_wxGraphicsContext_Clip1, WXLUAMETHOD_METHOD, 5, 5, s_wxluatypeArray_wxLua_wxGraphicsContext_Clip1 },

#if (wxLUA_USE_wxRegion) && (wxUSE_GRAPHICS_CONTEXT)
    { wxLua_wxGraphicsContext_Clip, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxGraphicsContext_Clip },
#endif // (wxLUA_USE_wxRegion) && (wxUSE_GRAPHICS_CONTEXT)
};
static int s_wxluafunc_wxLua_wxGraphicsContext_Clip_overload_count = sizeof(s_wxluafunc_wxLua_wxGraphicsContext_Clip_overload)/sizeof(wxLuaBindCFunc);

#endif // (wxUSE_GRAPHICS_CONTEXT)||((wxLUA_USE_wxRegion) && (wxUSE_GRAPHICS_CONTEXT))

#if (wxUSE_GRAPHICS_CONTEXT)||((((wxUSE_GRAPHICS_CONTEXT) && (wxUSE_IMAGE)) && (wxLUA_USE_wxImage && wxUSE_IMAGE)) && (wxUSE_GRAPHICS_CONTEXT))||((((defined(__WXMSW__) || defined(__WXMAC__)) && (wxLUA_USE_wxPrint && wxUSE_PRINTING_ARCHITECTURE)) && ((wxUSE_GRAPHICS_CONTEXT) && (wxUSE_PRINTING_ARCHITECTURE))) && (wxUSE_GRAPHICS_CONTEXT))||((wxLUA_USE_wxDC) && (wxUSE_GRAPHICS_CONTEXT))
// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsContext_Create_overload[] =
{
    { wxLua_wxGraphicsContext_Create5, WXLUAMETHOD_METHOD|WXLUAMETHOD_STATIC, 0, 0, g_wxluaargtypeArray_None },

#if (((wxUSE_GRAPHICS_CONTEXT) && (wxUSE_IMAGE)) && (wxLUA_USE_wxImage && wxUSE_IMAGE)) && (wxUSE_GRAPHICS_CONTEXT)
    { wxLua_wxGraphicsContext_Create4, WXLUAMETHOD_METHOD|WXLUAMETHOD_STATIC, 1, 1, s_wxluatypeArray_wxLua_wxGraphicsContext_Create4 },
#endif // (((wxUSE_GRAPHICS_CONTEXT) && (wxUSE_IMAGE)) && (wxLUA_USE_wxImage && wxUSE_IMAGE)) && (wxUSE_GRAPHICS_CONTEXT)
    { wxLua_wxGraphicsContext_Create3, WXLUAMETHOD_METHOD|WXLUAMETHOD_STATIC, 1, 1, s_wxluatypeArray_wxLua_wxGraphicsContext_Create3 },

#if (((defined(__WXMSW__) || defined(__WXMAC__)) && (wxLUA_USE_wxPrint && wxUSE_PRINTING_ARCHITECTURE)) && ((wxUSE_GRAPHICS_CONTEXT) && (wxUSE_PRINTING_ARCHITECTURE))) && (wxUSE_GRAPHICS_CONTEXT)
    { wxLua_wxGraphicsContext_Create2, WXLUAMETHOD_METHOD|WXLUAMETHOD_STATIC, 1, 1, s_wxluatypeArray_wxLua_wxGraphicsContext_Create2 },
#endif // (((defined(__WXMSW__) || defined(__WXMAC__)) && (wxLUA_USE_wxPrint && wxUSE_PRINTING_ARCHITECTURE)) && ((wxUSE_GRAPHICS_CONTEXT) && (wxUSE_PRINTING_ARCHITECTURE))) && (wxUSE_GRAPHICS_CONTEXT)

#if (wxLUA_USE_wxDC) && (wxUSE_GRAPHICS_CONTEXT)
    { wxLua_wxGraphicsContext_Create1, WXLUAMETHOD_METHOD|WXLUAMETHOD_STATIC, 1, 1, s_wxluatypeArray_wxLua_wxGraphicsContext_Create1 },
#endif // (wxLUA_USE_wxDC) && (wxUSE_GRAPHICS_CONTEXT)

#if (wxLUA_USE_wxDC) && (wxUSE_GRAPHICS_CONTEXT)
    { wxLua_wxGraphicsContext_Create, WXLUAMETHOD_METHOD|WXLUAMETHOD_STATIC, 1, 1, s_wxluatypeArray_wxLua_wxGraphicsContext_Create },
#endif // (wxLUA_USE_wxDC) && (wxUSE_GRAPHICS_CONTEXT)
};
static int s_wxluafunc_wxLua_wxGraphicsContext_Create_overload_count = sizeof(s_wxluafunc_wxLua_wxGraphicsContext_Create_overload)/sizeof(wxLuaBindCFunc);

#endif // (wxUSE_GRAPHICS_CONTEXT)||((((wxUSE_GRAPHICS_CONTEXT) && (wxUSE_IMAGE)) && (wxLUA_USE_wxImage && wxUSE_IMAGE)) && (wxUSE_GRAPHICS_CONTEXT))||((((defined(__WXMSW__) || defined(__WXMAC__)) && (wxLUA_USE_wxPrint && wxUSE_PRINTING_ARCHITECTURE)) && ((wxUSE_GRAPHICS_CONTEXT) && (wxUSE_PRINTING_ARCHITECTURE))) && (wxUSE_GRAPHICS_CONTEXT))||((wxLUA_USE_wxDC) && (wxUSE_GRAPHICS_CONTEXT))

#if (wxUSE_GRAPHICS_CONTEXT)||(((wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxFont)) && (wxUSE_GRAPHICS_CONTEXT))||((wxLUA_USE_wxFont) && (wxUSE_GRAPHICS_CONTEXT))
// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsContext_CreateFont_overload[] =
{
    { wxLua_wxGraphicsContext_CreateFont2, WXLUAMETHOD_METHOD, 3, 4, s_wxluatypeArray_wxLua_wxGraphicsContext_CreateFont2 },

#if ((wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxFont)) && (wxUSE_GRAPHICS_CONTEXT)
    { wxLua_wxGraphicsContext_CreateFont1, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxGraphicsContext_CreateFont1 },
#endif // ((wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxFont)) && (wxUSE_GRAPHICS_CONTEXT)

#if (wxLUA_USE_wxFont) && (wxUSE_GRAPHICS_CONTEXT)
    { wxLua_wxGraphicsContext_CreateFont, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxGraphicsContext_CreateFont },
#endif // (wxLUA_USE_wxFont) && (wxUSE_GRAPHICS_CONTEXT)
};
static int s_wxluafunc_wxLua_wxGraphicsContext_CreateFont_overload_count = sizeof(s_wxluafunc_wxLua_wxGraphicsContext_CreateFont_overload)/sizeof(wxLuaBindCFunc);

#endif // (wxUSE_GRAPHICS_CONTEXT)||(((wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxFont)) && (wxUSE_GRAPHICS_CONTEXT))||((wxLUA_USE_wxFont) && (wxUSE_GRAPHICS_CONTEXT))

#if (wxUSE_GRAPHICS_CONTEXT)||((wxLUA_USE_wxColourPenBrush) && (wxUSE_GRAPHICS_CONTEXT))
// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsContext_CreateLinearGradientBrush_overload[] =
{
    { wxLua_wxGraphicsContext_CreateLinearGradientBrush1, WXLUAMETHOD_METHOD, 6, 6, s_wxluatypeArray_wxLua_wxGraphicsContext_CreateLinearGradientBrush1 },

#if (wxLUA_USE_wxColourPenBrush) && (wxUSE_GRAPHICS_CONTEXT)
    { wxLua_wxGraphicsContext_CreateLinearGradientBrush, WXLUAMETHOD_METHOD, 7, 7, s_wxluatypeArray_wxLua_wxGraphicsContext_CreateLinearGradientBrush },
#endif // (wxLUA_USE_wxColourPenBrush) && (wxUSE_GRAPHICS_CONTEXT)
};
static int s_wxluafunc_wxLua_wxGraphicsContext_CreateLinearGradientBrush_overload_count = sizeof(s_wxluafunc_wxLua_wxGraphicsContext_CreateLinearGradientBrush_overload)/sizeof(wxLuaBindCFunc);

#endif // (wxUSE_GRAPHICS_CONTEXT)||((wxLUA_USE_wxColourPenBrush) && (wxUSE_GRAPHICS_CONTEXT))

#if (((wxCHECK_VERSION(3,1,1)) && (wxUSE_GRAPHICS_CONTEXT)) && (wxUSE_GRAPHICS_CONTEXT))||((wxLUA_USE_wxColourPenBrush) && (wxUSE_GRAPHICS_CONTEXT))
// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsContext_CreatePen_overload[] =
{

#if ((wxCHECK_VERSION(3,1,1)) && (wxUSE_GRAPHICS_CONTEXT)) && (wxUSE_GRAPHICS_CONTEXT)
    { wxLua_wxGraphicsContext_CreatePen1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxGraphicsContext_CreatePen1 },
#endif // ((wxCHECK_VERSION(3,1,1)) && (wxUSE_GRAPHICS_CONTEXT)) && (wxUSE_GRAPHICS_CONTEXT)

#if (wxLUA_USE_wxColourPenBrush) && (wxUSE_GRAPHICS_CONTEXT)
    { wxLua_wxGraphicsContext_CreatePen, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxGraphicsContext_CreatePen },
#endif // (wxLUA_USE_wxColourPenBrush) && (wxUSE_GRAPHICS_CONTEXT)
};
static int s_wxluafunc_wxLua_wxGraphicsContext_CreatePen_overload_count = sizeof(s_wxluafunc_wxLua_wxGraphicsContext_CreatePen_overload)/sizeof(wxLuaBindCFunc);

#endif // (((wxCHECK_VERSION(3,1,1)) && (wxUSE_GRAPHICS_CONTEXT)) && (wxUSE_GRAPHICS_CONTEXT))||((wxLUA_USE_wxColourPenBrush) && (wxUSE_GRAPHICS_CONTEXT))

#if (wxUSE_GRAPHICS_CONTEXT)||((wxLUA_USE_wxColourPenBrush) && (wxUSE_GRAPHICS_CONTEXT))
// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsContext_CreateRadialGradientBrush_overload[] =
{
    { wxLua_wxGraphicsContext_CreateRadialGradientBrush1, WXLUAMETHOD_METHOD, 7, 7, s_wxluatypeArray_wxLua_wxGraphicsContext_CreateRadialGradientBrush1 },

#if (wxLUA_USE_wxColourPenBrush) && (wxUSE_GRAPHICS_CONTEXT)
    { wxLua_wxGraphicsContext_CreateRadialGradientBrush, WXLUAMETHOD_METHOD, 8, 8, s_wxluatypeArray_wxLua_wxGraphicsContext_CreateRadialGradientBrush },
#endif // (wxLUA_USE_wxColourPenBrush) && (wxUSE_GRAPHICS_CONTEXT)
};
static int s_wxluafunc_wxLua_wxGraphicsContext_CreateRadialGradientBrush_overload_count = sizeof(s_wxluafunc_wxLua_wxGraphicsContext_CreateRadialGradientBrush_overload)/sizeof(wxLuaBindCFunc);

#endif // (wxUSE_GRAPHICS_CONTEXT)||((wxLUA_USE_wxColourPenBrush) && (wxUSE_GRAPHICS_CONTEXT))

#if ((wxLUA_USE_wxBitmap) && (wxUSE_GRAPHICS_CONTEXT))||(wxUSE_GRAPHICS_CONTEXT)
// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsContext_DrawBitmap_overload[] =
{

#if (wxLUA_USE_wxBitmap) && (wxUSE_GRAPHICS_CONTEXT)
    { wxLua_wxGraphicsContext_DrawBitmap1, WXLUAMETHOD_METHOD, 6, 6, s_wxluatypeArray_wxLua_wxGraphicsContext_DrawBitmap1 },
#endif // (wxLUA_USE_wxBitmap) && (wxUSE_GRAPHICS_CONTEXT)
    { wxLua_wxGraphicsContext_DrawBitmap, WXLUAMETHOD_METHOD, 6, 6, s_wxluatypeArray_wxLua_wxGraphicsContext_DrawBitmap },
};
static int s_wxluafunc_wxLua_wxGraphicsContext_DrawBitmap_overload_count = sizeof(s_wxluafunc_wxLua_wxGraphicsContext_DrawBitmap_overload)/sizeof(wxLuaBindCFunc);

#endif // ((wxLUA_USE_wxBitmap) && (wxUSE_GRAPHICS_CONTEXT))||(wxUSE_GRAPHICS_CONTEXT)

#if (wxUSE_GRAPHICS_CONTEXT)
// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsContext_DrawText_overload[] =
{
    { wxLua_wxGraphicsContext_DrawText3, WXLUAMETHOD_METHOD, 6, 6, s_wxluatypeArray_wxLua_wxGraphicsContext_DrawText3 },
    { wxLua_wxGraphicsContext_DrawText2, WXLUAMETHOD_METHOD, 5, 5, s_wxluatypeArray_wxLua_wxGraphicsContext_DrawText2 },
    { wxLua_wxGraphicsContext_DrawText1, WXLUAMETHOD_METHOD, 5, 5, s_wxluatypeArray_wxLua_wxGraphicsContext_DrawText1 },
    { wxLua_wxGraphicsContext_DrawText, WXLUAMETHOD_METHOD, 4, 4, s_wxluatypeArray_wxLua_wxGraphicsContext_DrawText },
};
static int s_wxluafunc_wxLua_wxGraphicsContext_DrawText_overload_count = sizeof(s_wxluafunc_wxLua_wxGraphicsContext_DrawText_overload)/sizeof(wxLuaBindCFunc);

#endif // (wxUSE_GRAPHICS_CONTEXT)

#if ((wxLUA_USE_wxColourPenBrush) && (wxUSE_GRAPHICS_CONTEXT))||(wxUSE_GRAPHICS_CONTEXT)
// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsContext_SetBrush_overload[] =
{

#if (wxLUA_USE_wxColourPenBrush) && (wxUSE_GRAPHICS_CONTEXT)
    { wxLua_wxGraphicsContext_SetBrush1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxGraphicsContext_SetBrush1 },
#endif // (wxLUA_USE_wxColourPenBrush) && (wxUSE_GRAPHICS_CONTEXT)
    { wxLua_wxGraphicsContext_SetBrush, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxGraphicsContext_SetBrush },
};
static int s_wxluafunc_wxLua_wxGraphicsContext_SetBrush_overload_count = sizeof(s_wxluafunc_wxLua_wxGraphicsContext_SetBrush_overload)/sizeof(wxLuaBindCFunc);

#endif // ((wxLUA_USE_wxColourPenBrush) && (wxUSE_GRAPHICS_CONTEXT))||(wxUSE_GRAPHICS_CONTEXT)

#if (((wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxFont)) && (wxUSE_GRAPHICS_CONTEXT))||(wxUSE_GRAPHICS_CONTEXT)
// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsContext_SetFont_overload[] =
{

#if ((wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxFont)) && (wxUSE_GRAPHICS_CONTEXT)
    { wxLua_wxGraphicsContext_SetFont1, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxGraphicsContext_SetFont1 },
#endif // ((wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxFont)) && (wxUSE_GRAPHICS_CONTEXT)
    { wxLua_wxGraphicsContext_SetFont, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxGraphicsContext_SetFont },
};
static int s_wxluafunc_wxLua_wxGraphicsContext_SetFont_overload_count = sizeof(s_wxluafunc_wxLua_wxGraphicsContext_SetFont_overload)/sizeof(wxLuaBindCFunc);

#endif // (((wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxFont)) && (wxUSE_GRAPHICS_CONTEXT))||(wxUSE_GRAPHICS_CONTEXT)

#if ((wxLUA_USE_wxColourPenBrush) && (wxUSE_GRAPHICS_CONTEXT))||(wxUSE_GRAPHICS_CONTEXT)
// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsContext_SetPen_overload[] =
{

#if (wxLUA_USE_wxColourPenBrush) && (wxUSE_GRAPHICS_CONTEXT)
    { wxLua_wxGraphicsContext_SetPen1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxGraphicsContext_SetPen1 },
#endif // (wxLUA_USE_wxColourPenBrush) && (wxUSE_GRAPHICS_CONTEXT)
    { wxLua_wxGraphicsContext_SetPen, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxGraphicsContext_SetPen },
};
static int s_wxluafunc_wxLua_wxGraphicsContext_SetPen_overload_count = sizeof(s_wxluafunc_wxLua_wxGraphicsContext_SetPen_overload)/sizeof(wxLuaBindCFunc);

#endif // ((wxLUA_USE_wxColourPenBrush) && (wxUSE_GRAPHICS_CONTEXT))||(wxUSE_GRAPHICS_CONTEXT)

#if (wxUSE_GRAPHICS_CONTEXT)
// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsContext_StrokeLines_overload[] =
{
    { wxLua_wxGraphicsContext_StrokeLines1, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxGraphicsContext_StrokeLines1 },
    { wxLua_wxGraphicsContext_StrokeLines, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxGraphicsContext_StrokeLines },
};
static int s_wxluafunc_wxLua_wxGraphicsContext_StrokeLines_overload_count = sizeof(s_wxluafunc_wxLua_wxGraphicsContext_StrokeLines_overload)/sizeof(wxLuaBindCFunc);

#endif // (wxUSE_GRAPHICS_CONTEXT)

void wxLua_wxGraphicsContext_delete_function(void** p)
{
    wxGraphicsContext* o = (wxGraphicsContext*)(*p);
    delete o;
}

// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxGraphicsContext_methods[] = {
    { "BeginLayer", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsContext_BeginLayer, 1, NULL },

#if (wxCHECK_VERSION(3,1,1)) && (wxUSE_GRAPHICS_CONTEXT)
    { "ClearRectangle", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsContext_ClearRectangle, 1, NULL },
#endif // (wxCHECK_VERSION(3,1,1)) && (wxUSE_GRAPHICS_CONTEXT)

#if (wxUSE_GRAPHICS_CONTEXT)||((wxLUA_USE_wxRegion) && (wxUSE_GRAPHICS_CONTEXT))
    { "Clip", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsContext_Clip_overload, s_wxluafunc_wxLua_wxGraphicsContext_Clip_overload_count, 0 },
#endif // (wxUSE_GRAPHICS_CONTEXT)||((wxLUA_USE_wxRegion) && (wxUSE_GRAPHICS_CONTEXT))

    { "ConcatTransform", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsContext_ConcatTransform, 1, NULL },

#if (wxUSE_GRAPHICS_CONTEXT)||((((wxUSE_GRAPHICS_CONTEXT) && (wxUSE_IMAGE)) && (wxLUA_USE_wxImage && wxUSE_IMAGE)) && (wxUSE_GRAPHICS_CONTEXT))||((((defined(__WXMSW__) || defined(__WXMAC__)) && (wxLUA_USE_wxPrint && wxUSE_PRINTING_ARCHITECTURE)) && ((wxUSE_GRAPHICS_CONTEXT) && (wxUSE_PRINTING_ARCHITECTURE))) && (wxUSE_GRAPHICS_CONTEXT))||((wxLUA_USE_wxDC) && (wxUSE_GRAPHICS_CONTEXT))
    { "Create", WXLUAMETHOD_METHOD|WXLUAMETHOD_STATIC, s_wxluafunc_wxLua_wxGraphicsContext_Create_overload, s_wxluafunc_wxLua_wxGraphicsContext_Create_overload_count, 0 },
#endif // (wxUSE_GRAPHICS_CONTEXT)||((((wxUSE_GRAPHICS_CONTEXT) && (wxUSE_IMAGE)) && (wxLUA_USE_wxImage && wxUSE_IMAGE)) && (wxUSE_GRAPHICS_CONTEXT))||((((defined(__WXMSW__) || defined(__WXMAC__)) && (wxLUA_USE_wxPrint && wxUSE_PRINTING_ARCHITECTURE)) && ((wxUSE_GRAPHICS_CONTEXT) && (wxUSE_PRINTING_ARCHITECTURE))) && (wxUSE_GRAPHICS_CONTEXT))||((wxLUA_USE_wxDC) && (wxUSE_GRAPHICS_CONTEXT))

#if (wxLUA_USE_wxBitmap) && (wxUSE_GRAPHICS_CONTEXT)
    { "CreateBitmap", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsContext_CreateBitmap, 1, NULL },
#endif // (wxLUA_USE_wxBitmap) && (wxUSE_GRAPHICS_CONTEXT)

#if (((wxUSE_GRAPHICS_CONTEXT) && (wxUSE_IMAGE)) && (wxLUA_USE_wxImage && wxUSE_IMAGE)) && (wxUSE_GRAPHICS_CONTEXT)
    { "CreateBitmapFromImage", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsContext_CreateBitmapFromImage, 1, NULL },
#endif // (((wxUSE_GRAPHICS_CONTEXT) && (wxUSE_IMAGE)) && (wxLUA_USE_wxImage && wxUSE_IMAGE)) && (wxUSE_GRAPHICS_CONTEXT)

#if (wxLUA_USE_wxColourPenBrush) && (wxUSE_GRAPHICS_CONTEXT)
    { "CreateBrush", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsContext_CreateBrush, 1, NULL },
#endif // (wxLUA_USE_wxColourPenBrush) && (wxUSE_GRAPHICS_CONTEXT)

#if (wxUSE_GRAPHICS_CONTEXT)||(((wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxFont)) && (wxUSE_GRAPHICS_CONTEXT))||((wxLUA_USE_wxFont) && (wxUSE_GRAPHICS_CONTEXT))
    { "CreateFont", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsContext_CreateFont_overload, s_wxluafunc_wxLua_wxGraphicsContext_CreateFont_overload_count, 0 },
#endif // (wxUSE_GRAPHICS_CONTEXT)||(((wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxFont)) && (wxUSE_GRAPHICS_CONTEXT))||((wxLUA_USE_wxFont) && (wxUSE_GRAPHICS_CONTEXT))

    { "CreateFromNative", WXLUAMETHOD_METHOD|WXLUAMETHOD_STATIC, s_wxluafunc_wxLua_wxGraphicsContext_CreateFromNative, 1, NULL },
    { "CreateFromNativeWindow", WXLUAMETHOD_METHOD|WXLUAMETHOD_STATIC, s_wxluafunc_wxLua_wxGraphicsContext_CreateFromNativeWindow, 1, NULL },

#if (((wxCHECK_VERSION(3,1,1)) && (wxUSE_GRAPHICS_CONTEXT)) && (wxLUA_USE_wxDC)) && (wxUSE_GRAPHICS_CONTEXT)
    { "CreateFromUnknownDC", WXLUAMETHOD_METHOD|WXLUAMETHOD_STATIC, s_wxluafunc_wxLua_wxGraphicsContext_CreateFromUnknownDC, 1, NULL },
#endif // (((wxCHECK_VERSION(3,1,1)) && (wxUSE_GRAPHICS_CONTEXT)) && (wxLUA_USE_wxDC)) && (wxUSE_GRAPHICS_CONTEXT)

#if (wxUSE_GRAPHICS_CONTEXT)||((wxLUA_USE_wxColourPenBrush) && (wxUSE_GRAPHICS_CONTEXT))
    { "CreateLinearGradientBrush", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsContext_CreateLinearGradientBrush_overload, s_wxluafunc_wxLua_wxGraphicsContext_CreateLinearGradientBrush_overload_count, 0 },
#endif // (wxUSE_GRAPHICS_CONTEXT)||((wxLUA_USE_wxColourPenBrush) && (wxUSE_GRAPHICS_CONTEXT))

    { "CreateMatrix", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsContext_CreateMatrix, 1, NULL },
    { "CreatePath", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsContext_CreatePath, 1, NULL },

#if (((wxCHECK_VERSION(3,1,1)) && (wxUSE_GRAPHICS_CONTEXT)) && (wxUSE_GRAPHICS_CONTEXT))||((wxLUA_USE_wxColourPenBrush) && (wxUSE_GRAPHICS_CONTEXT))
    { "CreatePen", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsContext_CreatePen_overload, s_wxluafunc_wxLua_wxGraphicsContext_CreatePen_overload_count, 0 },
#endif // (((wxCHECK_VERSION(3,1,1)) && (wxUSE_GRAPHICS_CONTEXT)) && (wxUSE_GRAPHICS_CONTEXT))||((wxLUA_USE_wxColourPenBrush) && (wxUSE_GRAPHICS_CONTEXT))

#if (wxUSE_GRAPHICS_CONTEXT)||((wxLUA_USE_wxColourPenBrush) && (wxUSE_GRAPHICS_CONTEXT))
    { "CreateRadialGradientBrush", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsContext_CreateRadialGradientBrush_overload, s_wxluafunc_wxLua_wxGraphicsContext_CreateRadialGradientBrush_overload_count, 0 },
#endif // (wxUSE_GRAPHICS_CONTEXT)||((wxLUA_USE_wxColourPenBrush) && (wxUSE_GRAPHICS_CONTEXT))

    { "CreateSubBitmap", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsContext_CreateSubBitmap, 1, NULL },
    { "DisableOffset", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsContext_DisableOffset, 1, NULL },

#if ((wxLUA_USE_wxBitmap) && (wxUSE_GRAPHICS_CONTEXT))||(wxUSE_GRAPHICS_CONTEXT)
    { "DrawBitmap", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsContext_DrawBitmap_overload, s_wxluafunc_wxLua_wxGraphicsContext_DrawBitmap_overload_count, 0 },
#endif // ((wxLUA_USE_wxBitmap) && (wxUSE_GRAPHICS_CONTEXT))||(wxUSE_GRAPHICS_CONTEXT)

    { "DrawEllipse", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsContext_DrawEllipse, 1, NULL },

#if (wxLUA_USE_wxIcon) && (wxUSE_GRAPHICS_CONTEXT)
    { "DrawIcon", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsContext_DrawIcon, 1, NULL },
#endif // (wxLUA_USE_wxIcon) && (wxUSE_GRAPHICS_CONTEXT)

#if (wxLUA_USE_wxDC) && (wxUSE_GRAPHICS_CONTEXT)
    { "DrawLines", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsContext_DrawLines, 1, NULL },
    { "DrawPath", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsContext_DrawPath, 1, NULL },
#endif // (wxLUA_USE_wxDC) && (wxUSE_GRAPHICS_CONTEXT)

    { "DrawRectangle", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsContext_DrawRectangle, 1, NULL },
    { "DrawRoundedRectangle", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsContext_DrawRoundedRectangle, 1, NULL },

#if (wxUSE_GRAPHICS_CONTEXT)
    { "DrawText", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsContext_DrawText_overload, s_wxluafunc_wxLua_wxGraphicsContext_DrawText_overload_count, 0 },
#endif // (wxUSE_GRAPHICS_CONTEXT)

    { "EnableOffset", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsContext_EnableOffset, 1, NULL },
    { "EndDoc", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsContext_EndDoc, 1, NULL },
    { "EndLayer", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsContext_EndLayer, 1, NULL },
    { "EndPage", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsContext_EndPage, 1, NULL },

#if (wxLUA_USE_wxDC) && (wxUSE_GRAPHICS_CONTEXT)
    { "FillPath", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsContext_FillPath, 1, NULL },
#endif // (wxLUA_USE_wxDC) && (wxUSE_GRAPHICS_CONTEXT)

    { "Flush", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsContext_Flush, 1, NULL },

#if (0) && (wxUSE_GRAPHICS_CONTEXT)
    { "GetAlpha", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsContext_GetAlpha, 1, NULL },
#endif // (0) && (wxUSE_GRAPHICS_CONTEXT)

    { "GetAntialiasMode", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsContext_GetAntialiasMode, 1, NULL },

#if (wxCHECK_VERSION(3,1,1)) && (wxUSE_GRAPHICS_CONTEXT)
    { "GetClipBox", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsContext_GetClipBox, 1, NULL },
#endif // (wxCHECK_VERSION(3,1,1)) && (wxUSE_GRAPHICS_CONTEXT)

    { "GetCompositionMode", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsContext_GetCompositionMode, 1, NULL },
    { "GetDPI", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsContext_GetDPI, 1, NULL },
    { "GetInterpolationQuality", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsContext_GetInterpolationQuality, 1, NULL },
    { "GetNativeContext", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsContext_GetNativeContext, 1, NULL },

#if (wxLUA_USE_wxArrayDouble) && (wxUSE_GRAPHICS_CONTEXT)
    { "GetPartialTextExtents", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsContext_GetPartialTextExtents, 1, NULL },
#endif // (wxLUA_USE_wxArrayDouble) && (wxUSE_GRAPHICS_CONTEXT)

    { "GetSize", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsContext_GetSize, 1, NULL },
    { "GetTextExtent", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsContext_GetTextExtent, 1, NULL },
    { "GetTransform", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsContext_GetTransform, 1, NULL },
    { "OffsetEnabled", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsContext_OffsetEnabled, 1, NULL },
    { "PopState", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsContext_PopState, 1, NULL },
    { "PushState", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsContext_PushState, 1, NULL },
    { "ResetClip", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsContext_ResetClip, 1, NULL },
    { "Rotate", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsContext_Rotate, 1, NULL },
    { "Scale", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsContext_Scale, 1, NULL },

#if (0) && (wxUSE_GRAPHICS_CONTEXT)
    { "SetAlpha", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsContext_SetAlpha, 1, NULL },
#endif // (0) && (wxUSE_GRAPHICS_CONTEXT)

    { "SetAntialiasMode", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsContext_SetAntialiasMode, 1, NULL },

#if ((wxLUA_USE_wxColourPenBrush) && (wxUSE_GRAPHICS_CONTEXT))||(wxUSE_GRAPHICS_CONTEXT)
    { "SetBrush", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsContext_SetBrush_overload, s_wxluafunc_wxLua_wxGraphicsContext_SetBrush_overload_count, 0 },
#endif // ((wxLUA_USE_wxColourPenBrush) && (wxUSE_GRAPHICS_CONTEXT))||(wxUSE_GRAPHICS_CONTEXT)

    { "SetCompositionMode", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsContext_SetCompositionMode, 1, NULL },

#if (((wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxFont)) && (wxUSE_GRAPHICS_CONTEXT))||(wxUSE_GRAPHICS_CONTEXT)
    { "SetFont", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsContext_SetFont_overload, s_wxluafunc_wxLua_wxGraphicsContext_SetFont_overload_count, 0 },
#endif // (((wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxFont)) && (wxUSE_GRAPHICS_CONTEXT))||(wxUSE_GRAPHICS_CONTEXT)

    { "SetInterpolationQuality", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsContext_SetInterpolationQuality, 1, NULL },

#if ((wxLUA_USE_wxColourPenBrush) && (wxUSE_GRAPHICS_CONTEXT))||(wxUSE_GRAPHICS_CONTEXT)
    { "SetPen", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsContext_SetPen_overload, s_wxluafunc_wxLua_wxGraphicsContext_SetPen_overload_count, 0 },
#endif // ((wxLUA_USE_wxColourPenBrush) && (wxUSE_GRAPHICS_CONTEXT))||(wxUSE_GRAPHICS_CONTEXT)

    { "SetTransform", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsContext_SetTransform, 1, NULL },
    { "ShouldOffset", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsContext_ShouldOffset, 1, NULL },
    { "StartDoc", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsContext_StartDoc, 1, NULL },
    { "StartPage", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsContext_StartPage, 1, NULL },
    { "StrokeLine", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsContext_StrokeLine, 1, NULL },

#if (wxUSE_GRAPHICS_CONTEXT)
    { "StrokeLines", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsContext_StrokeLines_overload, s_wxluafunc_wxLua_wxGraphicsContext_StrokeLines_overload_count, 0 },
#endif // (wxUSE_GRAPHICS_CONTEXT)

    { "StrokePath", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsContext_StrokePath, 1, NULL },
    { "Translate", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsContext_Translate, 1, NULL },
    { "delete", WXLUAMETHOD_METHOD|WXLUAMETHOD_DELETE, s_wxluafunc_wxLua_wxGraphicsContext_delete, 1, NULL },

    { 0, 0, 0, 0 },
};

int wxGraphicsContext_methodCount = sizeof(wxGraphicsContext_methods)/sizeof(wxLuaBindMethod) - 1;

#endif  // wxUSE_GRAPHICS_CONTEXT


#if wxUSE_GRAPHICS_CONTEXT
// ---------------------------------------------------------------------------
// Bind class wxGraphicsRenderer
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxGraphicsRenderer'
int wxluatype_wxGraphicsRenderer = WXLUA_TUNKNOWN;

#if (wxLUA_USE_wxBitmap) && (wxUSE_GRAPHICS_CONTEXT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsRenderer_CreateBitmap[] = { &wxluatype_wxGraphicsRenderer, &wxluatype_wxBitmap, NULL };
static int LUACALL wxLua_wxGraphicsRenderer_CreateBitmap(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsRenderer_CreateBitmap[1] = {{ wxLua_wxGraphicsRenderer_CreateBitmap, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxGraphicsRenderer_CreateBitmap }};
//     virtual wxGraphicsBitmap CreateBitmap( const wxBitmap &bitmap );// = 0;
static int LUACALL wxLua_wxGraphicsRenderer_CreateBitmap(lua_State *L)
{
    // const wxBitmap bitmap
    const wxBitmap * bitmap = (const wxBitmap *)wxluaT_getuserdatatype(L, 2, wxluatype_wxBitmap);
    // get this
    wxGraphicsRenderer * self = (wxGraphicsRenderer *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsRenderer);
    // call CreateBitmap
    // allocate a new object using the copy constructor
    wxGraphicsBitmap* returns = new wxGraphicsBitmap(self->CreateBitmap(*bitmap));
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxGraphicsBitmap);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxGraphicsBitmap);

    return 1;
}

#endif // (wxLUA_USE_wxBitmap) && (wxUSE_GRAPHICS_CONTEXT)

#if (((wxUSE_GRAPHICS_CONTEXT) && (wxUSE_IMAGE)) && (wxLUA_USE_wxImage && wxUSE_IMAGE)) && (wxUSE_GRAPHICS_CONTEXT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsRenderer_CreateBitmapFromImage[] = { &wxluatype_wxGraphicsRenderer, &wxluatype_wxImage, NULL };
static int LUACALL wxLua_wxGraphicsRenderer_CreateBitmapFromImage(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsRenderer_CreateBitmapFromImage[1] = {{ wxLua_wxGraphicsRenderer_CreateBitmapFromImage, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxGraphicsRenderer_CreateBitmapFromImage }};
//     virtual wxGraphicsBitmap CreateBitmapFromImage(const wxImage& image);// = 0;
static int LUACALL wxLua_wxGraphicsRenderer_CreateBitmapFromImage(lua_State *L)
{
    // const wxImage image
    const wxImage * image = (const wxImage *)wxluaT_getuserdatatype(L, 2, wxluatype_wxImage);
    // get this
    wxGraphicsRenderer * self = (wxGraphicsRenderer *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsRenderer);
    // call CreateBitmapFromImage
    // allocate a new object using the copy constructor
    wxGraphicsBitmap* returns = new wxGraphicsBitmap(self->CreateBitmapFromImage(*image));
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxGraphicsBitmap);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxGraphicsBitmap);

    return 1;
}

#endif // (((wxUSE_GRAPHICS_CONTEXT) && (wxUSE_IMAGE)) && (wxLUA_USE_wxImage && wxUSE_IMAGE)) && (wxUSE_GRAPHICS_CONTEXT)

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsRenderer_CreateBitmapFromNativeBitmap[] = { &wxluatype_wxGraphicsRenderer, &wxluatype_TLIGHTUSERDATA, NULL };
static int LUACALL wxLua_wxGraphicsRenderer_CreateBitmapFromNativeBitmap(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsRenderer_CreateBitmapFromNativeBitmap[1] = {{ wxLua_wxGraphicsRenderer_CreateBitmapFromNativeBitmap, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxGraphicsRenderer_CreateBitmapFromNativeBitmap }};
//     virtual wxGraphicsBitmap CreateBitmapFromNativeBitmap( void* bitmap );// = 0;
static int LUACALL wxLua_wxGraphicsRenderer_CreateBitmapFromNativeBitmap(lua_State *L)
{
    // void bitmap
    void * bitmap = (void *)wxlua_touserdata(L, 2);
    // get this
    wxGraphicsRenderer * self = (wxGraphicsRenderer *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsRenderer);
    // call CreateBitmapFromNativeBitmap
    // allocate a new object using the copy constructor
    wxGraphicsBitmap* returns = new wxGraphicsBitmap(self->CreateBitmapFromNativeBitmap(bitmap));
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxGraphicsBitmap);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxGraphicsBitmap);

    return 1;
}


#if (wxLUA_USE_wxColourPenBrush) && (wxUSE_GRAPHICS_CONTEXT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsRenderer_CreateBrush[] = { &wxluatype_wxGraphicsRenderer, &wxluatype_wxBrush, NULL };
static int LUACALL wxLua_wxGraphicsRenderer_CreateBrush(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsRenderer_CreateBrush[1] = {{ wxLua_wxGraphicsRenderer_CreateBrush, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxGraphicsRenderer_CreateBrush }};
//     virtual wxGraphicsBrush CreateBrush(const wxBrush& brush );// = 0;
static int LUACALL wxLua_wxGraphicsRenderer_CreateBrush(lua_State *L)
{
    // const wxBrush brush
    const wxBrush * brush = (const wxBrush *)wxluaT_getuserdatatype(L, 2, wxluatype_wxBrush);
    // get this
    wxGraphicsRenderer * self = (wxGraphicsRenderer *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsRenderer);
    // call CreateBrush
    // allocate a new object using the copy constructor
    wxGraphicsBrush* returns = new wxGraphicsBrush(self->CreateBrush(*brush));
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxGraphicsBrush);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxGraphicsBrush);

    return 1;
}

#endif // (wxLUA_USE_wxColourPenBrush) && (wxUSE_GRAPHICS_CONTEXT)

#if (((defined(__WXMSW__) || defined(__WXMAC__)) && (wxLUA_USE_wxPrint && wxUSE_PRINTING_ARCHITECTURE)) && ((wxUSE_GRAPHICS_CONTEXT) && (wxUSE_PRINTING_ARCHITECTURE))) && (wxUSE_GRAPHICS_CONTEXT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsRenderer_CreateContext2[] = { &wxluatype_wxGraphicsRenderer, &wxluatype_wxPrinterDC, NULL };
static int LUACALL wxLua_wxGraphicsRenderer_CreateContext2(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsRenderer_CreateContext2[1] = {{ wxLua_wxGraphicsRenderer_CreateContext2, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxGraphicsRenderer_CreateContext2 }};
//     virtual %gc wxGraphicsContext* CreateContext( const wxPrinterDC& dc);// = 0;
static int LUACALL wxLua_wxGraphicsRenderer_CreateContext2(lua_State *L)
{
    // const wxPrinterDC dc
    const wxPrinterDC * dc = (const wxPrinterDC *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPrinterDC);
    // get this
    wxGraphicsRenderer * self = (wxGraphicsRenderer *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsRenderer);
    // call CreateContext
    wxGraphicsContext* returns = (wxGraphicsContext*)self->CreateContext(*dc);
    if (!wxluaO_isgcobject(L, returns)) wxluaO_addgcobject(L, returns, wxluatype_wxGraphicsContext);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxGraphicsContext);

    return 1;
}

#endif // (((defined(__WXMSW__) || defined(__WXMAC__)) && (wxLUA_USE_wxPrint && wxUSE_PRINTING_ARCHITECTURE)) && ((wxUSE_GRAPHICS_CONTEXT) && (wxUSE_PRINTING_ARCHITECTURE))) && (wxUSE_GRAPHICS_CONTEXT)

#if (wxLUA_USE_wxDC) && (wxUSE_GRAPHICS_CONTEXT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsRenderer_CreateContext1[] = { &wxluatype_wxGraphicsRenderer, &wxluatype_wxMemoryDC, NULL };
static int LUACALL wxLua_wxGraphicsRenderer_CreateContext1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsRenderer_CreateContext1[1] = {{ wxLua_wxGraphicsRenderer_CreateContext1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxGraphicsRenderer_CreateContext1 }};
//     virtual %gc wxGraphicsContext* CreateContext( const wxMemoryDC& dc);// = 0;
static int LUACALL wxLua_wxGraphicsRenderer_CreateContext1(lua_State *L)
{
    // const wxMemoryDC dc
    const wxMemoryDC * dc = (const wxMemoryDC *)wxluaT_getuserdatatype(L, 2, wxluatype_wxMemoryDC);
    // get this
    wxGraphicsRenderer * self = (wxGraphicsRenderer *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsRenderer);
    // call CreateContext
    wxGraphicsContext* returns = (wxGraphicsContext*)self->CreateContext(*dc);
    if (!wxluaO_isgcobject(L, returns)) wxluaO_addgcobject(L, returns, wxluatype_wxGraphicsContext);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxGraphicsContext);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsRenderer_CreateContext[] = { &wxluatype_wxGraphicsRenderer, &wxluatype_wxWindowDC, NULL };
static int LUACALL wxLua_wxGraphicsRenderer_CreateContext(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsRenderer_CreateContext[1] = {{ wxLua_wxGraphicsRenderer_CreateContext, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxGraphicsRenderer_CreateContext }};
//     virtual %gc wxGraphicsContext* CreateContext( const wxWindowDC& dc);// = 0;
static int LUACALL wxLua_wxGraphicsRenderer_CreateContext(lua_State *L)
{
    // const wxWindowDC dc
    const wxWindowDC * dc = (const wxWindowDC *)wxluaT_getuserdatatype(L, 2, wxluatype_wxWindowDC);
    // get this
    wxGraphicsRenderer * self = (wxGraphicsRenderer *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsRenderer);
    // call CreateContext
    wxGraphicsContext* returns = (wxGraphicsContext*)self->CreateContext(*dc);
    if (!wxluaO_isgcobject(L, returns)) wxluaO_addgcobject(L, returns, wxluatype_wxGraphicsContext);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxGraphicsContext);

    return 1;
}

#endif // (wxLUA_USE_wxDC) && (wxUSE_GRAPHICS_CONTEXT)

#if (((wxUSE_GRAPHICS_CONTEXT) && (wxUSE_IMAGE)) && (wxLUA_USE_wxImage && wxUSE_IMAGE)) && (wxUSE_GRAPHICS_CONTEXT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsRenderer_CreateContextFromImage[] = { &wxluatype_wxGraphicsRenderer, &wxluatype_wxImage, NULL };
static int LUACALL wxLua_wxGraphicsRenderer_CreateContextFromImage(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsRenderer_CreateContextFromImage[1] = {{ wxLua_wxGraphicsRenderer_CreateContextFromImage, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxGraphicsRenderer_CreateContextFromImage }};
//     virtual %gc wxGraphicsContext* CreateContextFromImage(wxImage& image);// = 0;
static int LUACALL wxLua_wxGraphicsRenderer_CreateContextFromImage(lua_State *L)
{
    // wxImage image
    wxImage * image = (wxImage *)wxluaT_getuserdatatype(L, 2, wxluatype_wxImage);
    // get this
    wxGraphicsRenderer * self = (wxGraphicsRenderer *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsRenderer);
    // call CreateContextFromImage
    wxGraphicsContext* returns = (wxGraphicsContext*)self->CreateContextFromImage(*image);
    if (!wxluaO_isgcobject(L, returns)) wxluaO_addgcobject(L, returns, wxluatype_wxGraphicsContext);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxGraphicsContext);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsRenderer_CreateImageFromBitmap[] = { &wxluatype_wxGraphicsRenderer, &wxluatype_wxGraphicsBitmap, NULL };
static int LUACALL wxLua_wxGraphicsRenderer_CreateImageFromBitmap(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsRenderer_CreateImageFromBitmap[1] = {{ wxLua_wxGraphicsRenderer_CreateImageFromBitmap, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxGraphicsRenderer_CreateImageFromBitmap }};
//     virtual wxImage CreateImageFromBitmap(const wxGraphicsBitmap& bmp);// = 0;
static int LUACALL wxLua_wxGraphicsRenderer_CreateImageFromBitmap(lua_State *L)
{
    // const wxGraphicsBitmap bmp
    const wxGraphicsBitmap * bmp = (const wxGraphicsBitmap *)wxluaT_getuserdatatype(L, 2, wxluatype_wxGraphicsBitmap);
    // get this
    wxGraphicsRenderer * self = (wxGraphicsRenderer *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsRenderer);
    // call CreateImageFromBitmap
    // allocate a new object using the copy constructor
    wxImage* returns = new wxImage(self->CreateImageFromBitmap(*bmp));
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxImage);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxImage);

    return 1;
}

#endif // (((wxUSE_GRAPHICS_CONTEXT) && (wxUSE_IMAGE)) && (wxLUA_USE_wxImage && wxUSE_IMAGE)) && (wxUSE_GRAPHICS_CONTEXT)

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsRenderer_CreateLinearGradientBrush[] = { &wxluatype_wxGraphicsRenderer, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_wxGraphicsGradientStops, NULL };
static int LUACALL wxLua_wxGraphicsRenderer_CreateLinearGradientBrush(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsRenderer_CreateLinearGradientBrush[1] = {{ wxLua_wxGraphicsRenderer_CreateLinearGradientBrush, WXLUAMETHOD_METHOD, 6, 6, s_wxluatypeArray_wxLua_wxGraphicsRenderer_CreateLinearGradientBrush }};
//                                                       const wxGraphicsGradientStops& stops);// = 0;
static int LUACALL wxLua_wxGraphicsRenderer_CreateLinearGradientBrush(lua_State *L)
{
    // const wxGraphicsGradientStops stops
    const wxGraphicsGradientStops * stops = (const wxGraphicsGradientStops *)wxluaT_getuserdatatype(L, 6, wxluatype_wxGraphicsGradientStops);
    // wxDouble y2
    wxDouble y2 = (wxDouble)wxlua_getnumbertype(L, 5);
    // wxDouble x2
    wxDouble x2 = (wxDouble)wxlua_getnumbertype(L, 4);
    // wxDouble y1
    wxDouble y1 = (wxDouble)wxlua_getnumbertype(L, 3);
    // wxDouble x1
    wxDouble x1 = (wxDouble)wxlua_getnumbertype(L, 2);
    // get this
    wxGraphicsRenderer * self = (wxGraphicsRenderer *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsRenderer);
    // call CreateLinearGradientBrush
    // allocate a new object using the copy constructor
    wxGraphicsBrush* returns = new wxGraphicsBrush(self->CreateLinearGradientBrush(x1, y1, x2, y2, *stops));
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxGraphicsBrush);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxGraphicsBrush);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsRenderer_CreateMatrix[] = { &wxluatype_wxGraphicsRenderer, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxGraphicsRenderer_CreateMatrix(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsRenderer_CreateMatrix[1] = {{ wxLua_wxGraphicsRenderer_CreateMatrix, WXLUAMETHOD_METHOD, 1, 7, s_wxluatypeArray_wxLua_wxGraphicsRenderer_CreateMatrix }};
//         wxDouble tx=0.0, wxDouble ty=0.0);// = 0;
static int LUACALL wxLua_wxGraphicsRenderer_CreateMatrix(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // wxDouble ty = 0.0
    wxDouble ty = (argCount >= 7 ? (wxDouble)wxlua_getnumbertype(L, 7) : 0.0);
    // wxDouble tx = 0.0
    wxDouble tx = (argCount >= 6 ? (wxDouble)wxlua_getnumbertype(L, 6) : 0.0);
    // wxDouble d = 1.0
    wxDouble d = (argCount >= 5 ? (wxDouble)wxlua_getnumbertype(L, 5) : 1.0);
    // wxDouble c = 0.0
    wxDouble c = (argCount >= 4 ? (wxDouble)wxlua_getnumbertype(L, 4) : 0.0);
    // wxDouble b = 0.0
    wxDouble b = (argCount >= 3 ? (wxDouble)wxlua_getnumbertype(L, 3) : 0.0);
    // wxDouble a = 1.0
    wxDouble a = (argCount >= 2 ? (wxDouble)wxlua_getnumbertype(L, 2) : 1.0);
    // get this
    wxGraphicsRenderer * self = (wxGraphicsRenderer *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsRenderer);
    // call CreateMatrix
    // allocate a new object using the copy constructor
    wxGraphicsMatrix* returns = new wxGraphicsMatrix(self->CreateMatrix(a, b, c, d, tx, ty));
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxGraphicsMatrix);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxGraphicsMatrix);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsRenderer_CreateMeasuringContext[] = { &wxluatype_wxGraphicsRenderer, NULL };
static int LUACALL wxLua_wxGraphicsRenderer_CreateMeasuringContext(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsRenderer_CreateMeasuringContext[1] = {{ wxLua_wxGraphicsRenderer_CreateMeasuringContext, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxGraphicsRenderer_CreateMeasuringContext }};
//     virtual %gc wxGraphicsContext* CreateMeasuringContext();// = 0;
static int LUACALL wxLua_wxGraphicsRenderer_CreateMeasuringContext(lua_State *L)
{
    // get this
    wxGraphicsRenderer * self = (wxGraphicsRenderer *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsRenderer);
    // call CreateMeasuringContext
    wxGraphicsContext* returns = (wxGraphicsContext*)self->CreateMeasuringContext();
    if (!wxluaO_isgcobject(L, returns)) wxluaO_addgcobject(L, returns, wxluatype_wxGraphicsContext);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxGraphicsContext);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsRenderer_CreatePath[] = { &wxluatype_wxGraphicsRenderer, NULL };
static int LUACALL wxLua_wxGraphicsRenderer_CreatePath(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsRenderer_CreatePath[1] = {{ wxLua_wxGraphicsRenderer_CreatePath, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxGraphicsRenderer_CreatePath }};
//     virtual wxGraphicsPath CreatePath();// = 0;
static int LUACALL wxLua_wxGraphicsRenderer_CreatePath(lua_State *L)
{
    // get this
    wxGraphicsRenderer * self = (wxGraphicsRenderer *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsRenderer);
    // call CreatePath
    // allocate a new object using the copy constructor
    wxGraphicsPath* returns = new wxGraphicsPath(self->CreatePath());
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxGraphicsPath);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxGraphicsPath);

    return 1;
}


#if ((wxCHECK_VERSION(3,1,1)) && (wxUSE_GRAPHICS_CONTEXT)) && (wxUSE_GRAPHICS_CONTEXT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsRenderer_CreatePen[] = { &wxluatype_wxGraphicsRenderer, &wxluatype_wxGraphicsPenInfo, NULL };
static int LUACALL wxLua_wxGraphicsRenderer_CreatePen(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsRenderer_CreatePen[1] = {{ wxLua_wxGraphicsRenderer_CreatePen, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxGraphicsRenderer_CreatePen }};
//     %wxchkver_3_1_1 virtual wxGraphicsPen CreatePen(const wxGraphicsPenInfo& info);// = 0;
static int LUACALL wxLua_wxGraphicsRenderer_CreatePen(lua_State *L)
{
    // const wxGraphicsPenInfo info
    const wxGraphicsPenInfo * info = (const wxGraphicsPenInfo *)wxluaT_getuserdatatype(L, 2, wxluatype_wxGraphicsPenInfo);
    // get this
    wxGraphicsRenderer * self = (wxGraphicsRenderer *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsRenderer);
    // call CreatePen
    // allocate a new object using the copy constructor
    wxGraphicsPen* returns = new wxGraphicsPen(self->CreatePen(*info));
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxGraphicsPen);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxGraphicsPen);

    return 1;
}

#endif // ((wxCHECK_VERSION(3,1,1)) && (wxUSE_GRAPHICS_CONTEXT)) && (wxUSE_GRAPHICS_CONTEXT)

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsRenderer_CreateRadialGradientBrush[] = { &wxluatype_wxGraphicsRenderer, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_wxGraphicsGradientStops, NULL };
static int LUACALL wxLua_wxGraphicsRenderer_CreateRadialGradientBrush(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsRenderer_CreateRadialGradientBrush[1] = {{ wxLua_wxGraphicsRenderer_CreateRadialGradientBrush, WXLUAMETHOD_METHOD, 7, 7, s_wxluatypeArray_wxLua_wxGraphicsRenderer_CreateRadialGradientBrush }};
//                                                       const wxGraphicsGradientStops& stops);// = 0;
static int LUACALL wxLua_wxGraphicsRenderer_CreateRadialGradientBrush(lua_State *L)
{
    // const wxGraphicsGradientStops stops
    const wxGraphicsGradientStops * stops = (const wxGraphicsGradientStops *)wxluaT_getuserdatatype(L, 7, wxluatype_wxGraphicsGradientStops);
    // wxDouble radius
    wxDouble radius = (wxDouble)wxlua_getnumbertype(L, 6);
    // wxDouble yc
    wxDouble yc = (wxDouble)wxlua_getnumbertype(L, 5);
    // wxDouble xc
    wxDouble xc = (wxDouble)wxlua_getnumbertype(L, 4);
    // wxDouble yo
    wxDouble yo = (wxDouble)wxlua_getnumbertype(L, 3);
    // wxDouble xo
    wxDouble xo = (wxDouble)wxlua_getnumbertype(L, 2);
    // get this
    wxGraphicsRenderer * self = (wxGraphicsRenderer *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsRenderer);
    // call CreateRadialGradientBrush
    // allocate a new object using the copy constructor
    wxGraphicsBrush* returns = new wxGraphicsBrush(self->CreateRadialGradientBrush(xo, yo, xc, yc, radius, *stops));
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxGraphicsBrush);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxGraphicsBrush);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsRenderer_CreateSubBitmap[] = { &wxluatype_wxGraphicsRenderer, &wxluatype_wxGraphicsBitmap, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxGraphicsRenderer_CreateSubBitmap(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsRenderer_CreateSubBitmap[1] = {{ wxLua_wxGraphicsRenderer_CreateSubBitmap, WXLUAMETHOD_METHOD, 6, 6, s_wxluatypeArray_wxLua_wxGraphicsRenderer_CreateSubBitmap }};
//     virtual wxGraphicsBitmap CreateSubBitmap( const wxGraphicsBitmap &bitmap, wxDouble x, wxDouble y, wxDouble w, wxDouble h  );// = 0;
static int LUACALL wxLua_wxGraphicsRenderer_CreateSubBitmap(lua_State *L)
{
    // wxDouble h
    wxDouble h = (wxDouble)wxlua_getnumbertype(L, 6);
    // wxDouble w
    wxDouble w = (wxDouble)wxlua_getnumbertype(L, 5);
    // wxDouble y
    wxDouble y = (wxDouble)wxlua_getnumbertype(L, 4);
    // wxDouble x
    wxDouble x = (wxDouble)wxlua_getnumbertype(L, 3);
    // const wxGraphicsBitmap bitmap
    const wxGraphicsBitmap * bitmap = (const wxGraphicsBitmap *)wxluaT_getuserdatatype(L, 2, wxluatype_wxGraphicsBitmap);
    // get this
    wxGraphicsRenderer * self = (wxGraphicsRenderer *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsRenderer);
    // call CreateSubBitmap
    // allocate a new object using the copy constructor
    wxGraphicsBitmap* returns = new wxGraphicsBitmap(self->CreateSubBitmap(*bitmap, x, y, w, h));
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxGraphicsBitmap);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxGraphicsBitmap);

    return 1;
}

static int LUACALL wxLua_wxGraphicsRenderer_GetCairoRenderer(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsRenderer_GetCairoRenderer[1] = {{ wxLua_wxGraphicsRenderer_GetCairoRenderer, WXLUAMETHOD_METHOD|WXLUAMETHOD_STATIC, 0, 0, g_wxluaargtypeArray_None }};
//     static wxGraphicsRenderer* GetCairoRenderer();
static int LUACALL wxLua_wxGraphicsRenderer_GetCairoRenderer(lua_State *L)
{
    // call GetCairoRenderer
    wxGraphicsRenderer* returns = (wxGraphicsRenderer*)wxGraphicsRenderer::GetCairoRenderer();
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxGraphicsRenderer);

    return 1;
}

static int LUACALL wxLua_wxGraphicsRenderer_GetDefaultRenderer(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsRenderer_GetDefaultRenderer[1] = {{ wxLua_wxGraphicsRenderer_GetDefaultRenderer, WXLUAMETHOD_METHOD|WXLUAMETHOD_STATIC, 0, 0, g_wxluaargtypeArray_None }};
//     static wxGraphicsRenderer* GetDefaultRenderer();
static int LUACALL wxLua_wxGraphicsRenderer_GetDefaultRenderer(lua_State *L)
{
    // call GetDefaultRenderer
    wxGraphicsRenderer* returns = (wxGraphicsRenderer*)wxGraphicsRenderer::GetDefaultRenderer();
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxGraphicsRenderer);

    return 1;
}


#if (wxCHECK_VERSION(3,1,0)) && (wxUSE_GRAPHICS_CONTEXT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsRenderer_GetName[] = { &wxluatype_wxGraphicsRenderer, NULL };
static int LUACALL wxLua_wxGraphicsRenderer_GetName(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsRenderer_GetName[1] = {{ wxLua_wxGraphicsRenderer_GetName, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxGraphicsRenderer_GetName }};
//     %wxchkver_3_1_0 virtual wxString GetName() const;// = 0;
static int LUACALL wxLua_wxGraphicsRenderer_GetName(lua_State *L)
{
    // get this
    wxGraphicsRenderer * self = (wxGraphicsRenderer *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsRenderer);
    // call GetName
    wxString returns = (self->GetName());
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsRenderer_GetVersion[] = { &wxluatype_wxGraphicsRenderer, &wxluatype_TLIGHTUSERDATA, &wxluatype_TLIGHTUSERDATA, &wxluatype_TLIGHTUSERDATA, NULL };
static int LUACALL wxLua_wxGraphicsRenderer_GetVersion(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsRenderer_GetVersion[1] = {{ wxLua_wxGraphicsRenderer_GetVersion, WXLUAMETHOD_METHOD, 2, 4, s_wxluatypeArray_wxLua_wxGraphicsRenderer_GetVersion }};
//     %wxchkver_3_1_0 virtual void GetVersion(int* major, int* minor = NULL, int* micro = NULL) const;// = 0;
static int LUACALL wxLua_wxGraphicsRenderer_GetVersion(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int micro = NULL
    int * micro = (argCount >= 4 ? (int *)wxlua_touserdata(L, 4) : NULL);
    // int minor = NULL
    int * minor = (argCount >= 3 ? (int *)wxlua_touserdata(L, 3) : NULL);
    // int major
    int * major = (int *)wxlua_touserdata(L, 2);
    // get this
    wxGraphicsRenderer * self = (wxGraphicsRenderer *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsRenderer);
    // call GetVersion
    self->GetVersion(major, minor, micro);

    return 0;
}

#endif // (wxCHECK_VERSION(3,1,0)) && (wxUSE_GRAPHICS_CONTEXT)

static wxLuaArgType s_wxluatypeArray_wxLua_wxGraphicsRenderer_delete[] = { &wxluatype_wxGraphicsRenderer, NULL };
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsRenderer_delete[1] = {{ wxlua_userdata_delete, WXLUAMETHOD_METHOD|WXLUAMETHOD_DELETE, 1, 1, s_wxluatypeArray_wxLua_wxGraphicsRenderer_delete }};




#if ((((defined(__WXMSW__) || defined(__WXMAC__)) && (wxLUA_USE_wxPrint && wxUSE_PRINTING_ARCHITECTURE)) && ((wxUSE_GRAPHICS_CONTEXT) && (wxUSE_PRINTING_ARCHITECTURE))) && (wxUSE_GRAPHICS_CONTEXT))||((wxLUA_USE_wxDC) && (wxUSE_GRAPHICS_CONTEXT))
// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGraphicsRenderer_CreateContext_overload[] =
{

#if (((defined(__WXMSW__) || defined(__WXMAC__)) && (wxLUA_USE_wxPrint && wxUSE_PRINTING_ARCHITECTURE)) && ((wxUSE_GRAPHICS_CONTEXT) && (wxUSE_PRINTING_ARCHITECTURE))) && (wxUSE_GRAPHICS_CONTEXT)
    { wxLua_wxGraphicsRenderer_CreateContext2, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxGraphicsRenderer_CreateContext2 },
#endif // (((defined(__WXMSW__) || defined(__WXMAC__)) && (wxLUA_USE_wxPrint && wxUSE_PRINTING_ARCHITECTURE)) && ((wxUSE_GRAPHICS_CONTEXT) && (wxUSE_PRINTING_ARCHITECTURE))) && (wxUSE_GRAPHICS_CONTEXT)

#if (wxLUA_USE_wxDC) && (wxUSE_GRAPHICS_CONTEXT)
    { wxLua_wxGraphicsRenderer_CreateContext1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxGraphicsRenderer_CreateContext1 },
#endif // (wxLUA_USE_wxDC) && (wxUSE_GRAPHICS_CONTEXT)

#if (wxLUA_USE_wxDC) && (wxUSE_GRAPHICS_CONTEXT)
    { wxLua_wxGraphicsRenderer_CreateContext, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxGraphicsRenderer_CreateContext },
#endif // (wxLUA_USE_wxDC) && (wxUSE_GRAPHICS_CONTEXT)
};
static int s_wxluafunc_wxLua_wxGraphicsRenderer_CreateContext_overload_count = sizeof(s_wxluafunc_wxLua_wxGraphicsRenderer_CreateContext_overload)/sizeof(wxLuaBindCFunc);

#endif // ((((defined(__WXMSW__) || defined(__WXMAC__)) && (wxLUA_USE_wxPrint && wxUSE_PRINTING_ARCHITECTURE)) && ((wxUSE_GRAPHICS_CONTEXT) && (wxUSE_PRINTING_ARCHITECTURE))) && (wxUSE_GRAPHICS_CONTEXT))||((wxLUA_USE_wxDC) && (wxUSE_GRAPHICS_CONTEXT))

void wxLua_wxGraphicsRenderer_delete_function(void** p)
{
    wxGraphicsRenderer* o = (wxGraphicsRenderer*)(*p);
    delete o;
}

// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxGraphicsRenderer_methods[] = {
#if (wxLUA_USE_wxBitmap) && (wxUSE_GRAPHICS_CONTEXT)
    { "CreateBitmap", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsRenderer_CreateBitmap, 1, NULL },
#endif // (wxLUA_USE_wxBitmap) && (wxUSE_GRAPHICS_CONTEXT)

#if (((wxUSE_GRAPHICS_CONTEXT) && (wxUSE_IMAGE)) && (wxLUA_USE_wxImage && wxUSE_IMAGE)) && (wxUSE_GRAPHICS_CONTEXT)
    { "CreateBitmapFromImage", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsRenderer_CreateBitmapFromImage, 1, NULL },
#endif // (((wxUSE_GRAPHICS_CONTEXT) && (wxUSE_IMAGE)) && (wxLUA_USE_wxImage && wxUSE_IMAGE)) && (wxUSE_GRAPHICS_CONTEXT)

    { "CreateBitmapFromNativeBitmap", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsRenderer_CreateBitmapFromNativeBitmap, 1, NULL },

#if (wxLUA_USE_wxColourPenBrush) && (wxUSE_GRAPHICS_CONTEXT)
    { "CreateBrush", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsRenderer_CreateBrush, 1, NULL },
#endif // (wxLUA_USE_wxColourPenBrush) && (wxUSE_GRAPHICS_CONTEXT)

#if ((((defined(__WXMSW__) || defined(__WXMAC__)) && (wxLUA_USE_wxPrint && wxUSE_PRINTING_ARCHITECTURE)) && ((wxUSE_GRAPHICS_CONTEXT) && (wxUSE_PRINTING_ARCHITECTURE))) && (wxUSE_GRAPHICS_CONTEXT))||((wxLUA_USE_wxDC) && (wxUSE_GRAPHICS_CONTEXT))
    { "CreateContext", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsRenderer_CreateContext_overload, s_wxluafunc_wxLua_wxGraphicsRenderer_CreateContext_overload_count, 0 },
#endif // ((((defined(__WXMSW__) || defined(__WXMAC__)) && (wxLUA_USE_wxPrint && wxUSE_PRINTING_ARCHITECTURE)) && ((wxUSE_GRAPHICS_CONTEXT) && (wxUSE_PRINTING_ARCHITECTURE))) && (wxUSE_GRAPHICS_CONTEXT))||((wxLUA_USE_wxDC) && (wxUSE_GRAPHICS_CONTEXT))

#if (((wxUSE_GRAPHICS_CONTEXT) && (wxUSE_IMAGE)) && (wxLUA_USE_wxImage && wxUSE_IMAGE)) && (wxUSE_GRAPHICS_CONTEXT)
    { "CreateContextFromImage", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsRenderer_CreateContextFromImage, 1, NULL },
    { "CreateImageFromBitmap", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsRenderer_CreateImageFromBitmap, 1, NULL },
#endif // (((wxUSE_GRAPHICS_CONTEXT) && (wxUSE_IMAGE)) && (wxLUA_USE_wxImage && wxUSE_IMAGE)) && (wxUSE_GRAPHICS_CONTEXT)

    { "CreateLinearGradientBrush", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsRenderer_CreateLinearGradientBrush, 1, NULL },
    { "CreateMatrix", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsRenderer_CreateMatrix, 1, NULL },
    { "CreateMeasuringContext", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsRenderer_CreateMeasuringContext, 1, NULL },
    { "CreatePath", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsRenderer_CreatePath, 1, NULL },

#if ((wxCHECK_VERSION(3,1,1)) && (wxUSE_GRAPHICS_CONTEXT)) && (wxUSE_GRAPHICS_CONTEXT)
    { "CreatePen", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsRenderer_CreatePen, 1, NULL },
#endif // ((wxCHECK_VERSION(3,1,1)) && (wxUSE_GRAPHICS_CONTEXT)) && (wxUSE_GRAPHICS_CONTEXT)

    { "CreateRadialGradientBrush", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsRenderer_CreateRadialGradientBrush, 1, NULL },
    { "CreateSubBitmap", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsRenderer_CreateSubBitmap, 1, NULL },
    { "GetCairoRenderer", WXLUAMETHOD_METHOD|WXLUAMETHOD_STATIC, s_wxluafunc_wxLua_wxGraphicsRenderer_GetCairoRenderer, 1, NULL },
    { "GetDefaultRenderer", WXLUAMETHOD_METHOD|WXLUAMETHOD_STATIC, s_wxluafunc_wxLua_wxGraphicsRenderer_GetDefaultRenderer, 1, NULL },

#if (wxCHECK_VERSION(3,1,0)) && (wxUSE_GRAPHICS_CONTEXT)
    { "GetName", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsRenderer_GetName, 1, NULL },
    { "GetVersion", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxGraphicsRenderer_GetVersion, 1, NULL },
#endif // (wxCHECK_VERSION(3,1,0)) && (wxUSE_GRAPHICS_CONTEXT)

    { "delete", WXLUAMETHOD_METHOD|WXLUAMETHOD_DELETE, s_wxluafunc_wxLua_wxGraphicsRenderer_delete, 1, NULL },

    { 0, 0, 0, 0 },
};

int wxGraphicsRenderer_methodCount = sizeof(wxGraphicsRenderer_methods)/sizeof(wxLuaBindMethod) - 1;

#endif  // wxUSE_GRAPHICS_CONTEXT


#if wxUSE_GRAPHICS_CONTEXT
// ---------------------------------------------------------------------------
// Bind class wxGCDC
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxGCDC'
int wxluatype_wxGCDC = WXLUA_TUNKNOWN;

static wxLuaArgType s_wxluatypeArray_wxLua_wxGCDC_delete[] = { &wxluatype_wxGCDC, NULL };
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGCDC_delete[1] = {{ wxlua_userdata_delete, WXLUAMETHOD_METHOD|WXLUAMETHOD_DELETE, 1, 1, s_wxluatypeArray_wxLua_wxGCDC_delete }};

static int LUACALL wxLua_wxGCDC_constructor4(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxGCDC_constructor4[1] = {{ wxLua_wxGCDC_constructor4, WXLUAMETHOD_CONSTRUCTOR, 0, 0, g_wxluaargtypeArray_None }};
//     wxGCDC();
static int LUACALL wxLua_wxGCDC_constructor4(lua_State *L)
{
    // call constructor
    wxGCDC* returns = new wxGCDC();
    // add to tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxGCDC);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxGCDC);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGCDC_constructor3[] = { &wxluatype_wxGraphicsContext, NULL };
static int LUACALL wxLua_wxGCDC_constructor3(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxGCDC_constructor3[1] = {{ wxLua_wxGCDC_constructor3, WXLUAMETHOD_CONSTRUCTOR, 1, 1, s_wxluatypeArray_wxLua_wxGCDC_constructor3 }};
//     wxGCDC(wxGraphicsContext* context);
static int LUACALL wxLua_wxGCDC_constructor3(lua_State *L)
{
    // wxGraphicsContext context
    wxGraphicsContext * context = (wxGraphicsContext *)wxluaT_getuserdatatype(L, 1, wxluatype_wxGraphicsContext);
    // call constructor
    wxGCDC* returns = new wxGCDC(context);
    // add to tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxGCDC);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxGCDC);

    return 1;
}


#if (((defined(__WXMSW__) || defined(__WXMAC__)) && (wxLUA_USE_wxPrint && wxUSE_PRINTING_ARCHITECTURE)) && ((wxUSE_GRAPHICS_CONTEXT) && (wxUSE_PRINTING_ARCHITECTURE))) && (wxUSE_GRAPHICS_CONTEXT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxGCDC_constructor2[] = { &wxluatype_wxPrinterDC, NULL };
static int LUACALL wxLua_wxGCDC_constructor2(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxGCDC_constructor2[1] = {{ wxLua_wxGCDC_constructor2, WXLUAMETHOD_CONSTRUCTOR, 1, 1, s_wxluatypeArray_wxLua_wxGCDC_constructor2 }};
//     wxGCDC( const wxPrinterDC& dc );
static int LUACALL wxLua_wxGCDC_constructor2(lua_State *L)
{
    // const wxPrinterDC dc
    const wxPrinterDC * dc = (const wxPrinterDC *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPrinterDC);
    // call constructor
    wxGCDC* returns = new wxGCDC(*dc);
    // add to tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxGCDC);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxGCDC);

    return 1;
}

#endif // (((defined(__WXMSW__) || defined(__WXMAC__)) && (wxLUA_USE_wxPrint && wxUSE_PRINTING_ARCHITECTURE)) && ((wxUSE_GRAPHICS_CONTEXT) && (wxUSE_PRINTING_ARCHITECTURE))) && (wxUSE_GRAPHICS_CONTEXT)

#if (wxLUA_USE_wxDC) && (wxUSE_GRAPHICS_CONTEXT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxGCDC_constructor1[] = { &wxluatype_wxMemoryDC, NULL };
static int LUACALL wxLua_wxGCDC_constructor1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxGCDC_constructor1[1] = {{ wxLua_wxGCDC_constructor1, WXLUAMETHOD_CONSTRUCTOR, 1, 1, s_wxluatypeArray_wxLua_wxGCDC_constructor1 }};
//     wxGCDC( const wxMemoryDC& dc );
static int LUACALL wxLua_wxGCDC_constructor1(lua_State *L)
{
    // const wxMemoryDC dc
    const wxMemoryDC * dc = (const wxMemoryDC *)wxluaT_getuserdatatype(L, 1, wxluatype_wxMemoryDC);
    // call constructor
    wxGCDC* returns = new wxGCDC(*dc);
    // add to tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxGCDC);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxGCDC);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxGCDC_constructor[] = { &wxluatype_wxWindowDC, NULL };
static int LUACALL wxLua_wxGCDC_constructor(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxGCDC_constructor[1] = {{ wxLua_wxGCDC_constructor, WXLUAMETHOD_CONSTRUCTOR, 1, 1, s_wxluatypeArray_wxLua_wxGCDC_constructor }};
//     wxGCDC( const wxWindowDC& dc );
static int LUACALL wxLua_wxGCDC_constructor(lua_State *L)
{
    // const wxWindowDC dc
    const wxWindowDC * dc = (const wxWindowDC *)wxluaT_getuserdatatype(L, 1, wxluatype_wxWindowDC);
    // call constructor
    wxGCDC* returns = new wxGCDC(*dc);
    // add to tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxGCDC);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxGCDC);

    return 1;
}

#endif // (wxLUA_USE_wxDC) && (wxUSE_GRAPHICS_CONTEXT)



#if (wxUSE_GRAPHICS_CONTEXT)||((((defined(__WXMSW__) || defined(__WXMAC__)) && (wxLUA_USE_wxPrint && wxUSE_PRINTING_ARCHITECTURE)) && ((wxUSE_GRAPHICS_CONTEXT) && (wxUSE_PRINTING_ARCHITECTURE))) && (wxUSE_GRAPHICS_CONTEXT))||((wxLUA_USE_wxDC) && (wxUSE_GRAPHICS_CONTEXT))
// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxGCDC_constructor_overload[] =
{
    { wxLua_wxGCDC_constructor4, WXLUAMETHOD_CONSTRUCTOR, 0, 0, g_wxluaargtypeArray_None },
    { wxLua_wxGCDC_constructor3, WXLUAMETHOD_CONSTRUCTOR, 1, 1, s_wxluatypeArray_wxLua_wxGCDC_constructor3 },

#if (((defined(__WXMSW__) || defined(__WXMAC__)) && (wxLUA_USE_wxPrint && wxUSE_PRINTING_ARCHITECTURE)) && ((wxUSE_GRAPHICS_CONTEXT) && (wxUSE_PRINTING_ARCHITECTURE))) && (wxUSE_GRAPHICS_CONTEXT)
    { wxLua_wxGCDC_constructor2, WXLUAMETHOD_CONSTRUCTOR, 1, 1, s_wxluatypeArray_wxLua_wxGCDC_constructor2 },
#endif // (((defined(__WXMSW__) || defined(__WXMAC__)) && (wxLUA_USE_wxPrint && wxUSE_PRINTING_ARCHITECTURE)) && ((wxUSE_GRAPHICS_CONTEXT) && (wxUSE_PRINTING_ARCHITECTURE))) && (wxUSE_GRAPHICS_CONTEXT)

#if (wxLUA_USE_wxDC) && (wxUSE_GRAPHICS_CONTEXT)
    { wxLua_wxGCDC_constructor1, WXLUAMETHOD_CONSTRUCTOR, 1, 1, s_wxluatypeArray_wxLua_wxGCDC_constructor1 },
#endif // (wxLUA_USE_wxDC) && (wxUSE_GRAPHICS_CONTEXT)

#if (wxLUA_USE_wxDC) && (wxUSE_GRAPHICS_CONTEXT)
    { wxLua_wxGCDC_constructor, WXLUAMETHOD_CONSTRUCTOR, 1, 1, s_wxluatypeArray_wxLua_wxGCDC_constructor },
#endif // (wxLUA_USE_wxDC) && (wxUSE_GRAPHICS_CONTEXT)
};
static int s_wxluafunc_wxLua_wxGCDC_constructor_overload_count = sizeof(s_wxluafunc_wxLua_wxGCDC_constructor_overload)/sizeof(wxLuaBindCFunc);

#endif // (wxUSE_GRAPHICS_CONTEXT)||((((defined(__WXMSW__) || defined(__WXMAC__)) && (wxLUA_USE_wxPrint && wxUSE_PRINTING_ARCHITECTURE)) && ((wxUSE_GRAPHICS_CONTEXT) && (wxUSE_PRINTING_ARCHITECTURE))) && (wxUSE_GRAPHICS_CONTEXT))||((wxLUA_USE_wxDC) && (wxUSE_GRAPHICS_CONTEXT))

void wxLua_wxGCDC_delete_function(void** p)
{
    wxGCDC* o = (wxGCDC*)(*p);
    delete o;
}

// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxGCDC_methods[] = {
    { "delete", WXLUAMETHOD_METHOD|WXLUAMETHOD_DELETE, s_wxluafunc_wxLua_wxGCDC_delete, 1, NULL },

#if (wxUSE_GRAPHICS_CONTEXT)||((((defined(__WXMSW__) || defined(__WXMAC__)) && (wxLUA_USE_wxPrint && wxUSE_PRINTING_ARCHITECTURE)) && ((wxUSE_GRAPHICS_CONTEXT) && (wxUSE_PRINTING_ARCHITECTURE))) && (wxUSE_GRAPHICS_CONTEXT))||((wxLUA_USE_wxDC) && (wxUSE_GRAPHICS_CONTEXT))
    { "wxGCDC", WXLUAMETHOD_CONSTRUCTOR, s_wxluafunc_wxLua_wxGCDC_constructor_overload, s_wxluafunc_wxLua_wxGCDC_constructor_overload_count, 0 },
#endif // (wxUSE_GRAPHICS_CONTEXT)||((((defined(__WXMSW__) || defined(__WXMAC__)) && (wxLUA_USE_wxPrint && wxUSE_PRINTING_ARCHITECTURE)) && ((wxUSE_GRAPHICS_CONTEXT) && (wxUSE_PRINTING_ARCHITECTURE))) && (wxUSE_GRAPHICS_CONTEXT))||((wxLUA_USE_wxDC) && (wxUSE_GRAPHICS_CONTEXT))

    { 0, 0, 0, 0 },
};

int wxGCDC_methodCount = sizeof(wxGCDC_methods)/sizeof(wxLuaBindMethod) - 1;

#endif  // wxUSE_GRAPHICS_CONTEXT

